{"mappings":"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","sources":["src/my-matrix.ts","src/random.ts","src/guard.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-79cee56bbfa529d4.js","src/game-map.ts","src/create-map.ts","src/render.ts","node_modules/howler/dist/howler.js","node_modules/@parcel/runtime-js/lib/runtime-12760fdfc4a93fe4.js","node_modules/@parcel/runtime-js/lib/runtime-78e3eee8cb994830.js","node_modules/@parcel/runtime-js/lib/runtime-7b76f8ceabbbb4bd.js","node_modules/@parcel/runtime-js/lib/runtime-6d2e6297e6651e2e.js","src/audio.ts","node_modules/@parcel/runtime-js/lib/runtime-6b04dcb5e7b33bbc.js","src/color-preset.ts","node_modules/@parcel/runtime-js/lib/runtime-0b25773b4d33336c.js","src/game.ts","node_modules/@parcel/runtime-js/lib/runtime-fc2a6fa5999902ee.js"],"sourcesContent":["export { vec2, mat4 };\n\ntype vec2 = [number, number];\ntype mat4 =\n    [number, number, number, number,\n     number, number, number, number,\n     number, number, number, number,\n     number, number, number, number];\n\nnamespace vec2 {\n    export function create(): vec2 {\n        return [0, 0];\n    }\n\n    export function clone(v: vec2): vec2 {\n        return [v[0], v[1]];\n    }\n\n    export function fromValues(x0: number, x1: number): vec2 {\n        return [x0, x1];\n    }\n\n    export function copy(result: vec2, v: vec2) {\n        result[0] = v[0];\n        result[1] = v[1];\n    }\n\n    export function set(result: vec2, x0: number, x1: number) {\n        result[0] = x0;\n        result[1] = x1;\n    }\n\n    export function add(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] + b[0];\n        result[1] = a[1] + b[1];\n    }\n\n    export function subtract(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] - b[0];\n        result[1] = a[1] - b[1];\n    }\n\n    export function multiply(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] * b[0];\n        result[1] = a[1] * b[1];\n    }\n\n    export function scale(result: vec2, a: vec2, scale: number) {\n        result[0] = a[0] * scale;\n        result[1] = a[1] * scale;\n    }\n\n    export function scaleAndAdd(result: vec2, a: vec2, b: vec2, scale: number) {\n        result[0] = a[0] + b[0] * scale;\n        result[1] = a[1] + b[1] * scale;\n    }\n\n    export function distance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return Math.hypot(x, y);\n    }\n\n    export function squaredDistance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return x * x + y * y;\n    }\n\n    export function length(a: vec2): number {\n        return Math.hypot(a[0], a[1]);\n    }\n\n    export function squaredLength(a: vec2): number {\n        const x = a[0];\n        const y = a[1];\n        return x * x + y * y;\n    }\n\n    export function negate(result: vec2, a: vec2) {\n        result[0] = -a[0];\n        result[1] = -a[1];\n    }\n\n    export function dot(a: vec2, b: vec2): number {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n\n    export function lerp(result: vec2, a: vec2, b: vec2, t: number) {\n        result[0] = a[0] + t * (b[0] - a[0]);\n        result[1] = a[1] + t * (b[1] - a[1]);\n    }\n\n    export function zero(result: vec2) {\n        result[0] = 0;\n        result[1] = 0;\n    }\n}\n\nnamespace mat4 {\n    export function create(): mat4 {\n        return [\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n        ];\n    }\n\n    export function copy(result: mat4, a: mat4) {\n        result[0] = a[0];\n        result[1] = a[1];\n        result[2] = a[2];\n        result[3] = a[3];\n        result[4] = a[4];\n        result[5] = a[5];\n        result[6] = a[6];\n        result[7] = a[7];\n        result[8] = a[8];\n        result[9] = a[9];\n        result[10] = a[10];\n        result[11] = a[11];\n        result[12] = a[12];\n        result[13] = a[13];\n        result[14] = a[14];\n        result[15] = a[15];\n    }\n\n    export function ortho(result: mat4, left: number, right: number, bottom: number, top: number, near: number, far: number) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        result[0] = -2 * lr;\n        result[1] = 0;\n        result[2] = 0;\n        result[3] = 0;\n        result[4] = 0;\n        result[5] = -2 * bt;\n        result[6] = 0;\n        result[7] = 0;\n        result[8] = 0;\n        result[9] = 0;\n        result[10] = 2 * nf;\n        result[11] = 0;\n        result[12] = (left + right) * lr;\n        result[13] = (top + bottom) * bt;\n        result[14] = (far + near) * nf;\n        result[15] = 1;\n    }\n}\n","export { randomInRange, shuffleArray };\n\nfunction randomInRange(n: number): number {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleArray<T>(array: Array<T>) {\n    for (let i = array.length - 1; i > 0; --i) {\n        let j = randomInRange(i + 1);\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n","export { Guard, GuardMode, guardActAll };\n\nimport { Float64Grid, GameMap, Player, TerrainType, guardsInEarshot, invalidRegion } from './game-map';\nimport { vec2 } from './my-matrix';\nimport { randomInRange } from './random';\n\nenum GuardMode {\n    Patrol,\n    Look,\n    Listen,\n    ChaseVisibleTarget,\n    MoveToLastSighting,\n    MoveToLastSound,\n    MoveToGuardShout,\n}\n\nclass Guard {\n    pos: vec2;\n    dir: vec2;\n    mode: GuardMode;\n    speaking: boolean;\n    hasMoved: boolean;\n    heardThief: boolean;\n    hearingGuard: boolean;\n    heardGuard: boolean;\n    heardGuardPos: vec2;\n\n    // Chase\n    goal: vec2;\n    modeTimeout: number;\n\n    // Patrol\n    regionGoal: number;\n    regionPrev: number;\n\n    constructor(pos: vec2, map: GameMap) {\n        this.pos = vec2.clone(pos);\n        this.dir = vec2.fromValues(1, 0);\n        this.mode = GuardMode.Patrol;\n        this.speaking = false;\n        this.hasMoved = false;\n        this.heardThief = false;\n        this.hearingGuard = false;\n        this.heardGuard = false;\n        this.heardGuardPos = pos;\n        this.goal = pos;\n        this.modeTimeout = 0;\n        this.regionGoal = invalidRegion;\n        this.regionPrev = invalidRegion;\n\n        this.setupGoalRegion(map);\n        this.updateDirInitial(map);\n    }\n\n    preTurn() {\n        this.heardGuard = this.hearingGuard;\n        this.hearingGuard = false;\n        this.speaking = false;\n        this.hasMoved = false;\n    }\n\n    act(seeAll: boolean, /* popups: Popups, lines: Lines, */ player: Player, map: GameMap, shouts: Array<Shout>) {\n        const modePrev = this.mode;\n        const posPrev = this.pos;\n    \n        // See if senses will kick us into a new mode\n    \n        if (this.seesThief(map, player)) {\n            vec2.copy(this.goal, player.pos);\n    \n            if (this.mode == GuardMode.Patrol && !this.adjacentTo(player.pos)) {\n                this.mode = GuardMode.Look;\n                this.modeTimeout = 2 + randomInRange(4);\n                updateDir(this.dir, this.pos, player.pos);\n            } else {\n                this.mode = GuardMode.ChaseVisibleTarget;\n            }\n        } else if (this.mode == GuardMode.ChaseVisibleTarget) {\n            this.mode = GuardMode.MoveToLastSighting;\n            this.modeTimeout = 3;\n            vec2.copy(this.goal, player.pos);\n        }\n    \n        if (this.mode != GuardMode.ChaseVisibleTarget) {\n            if (this.heardGuard) {\n                this.mode = GuardMode.MoveToGuardShout;\n                this.modeTimeout = 2 + randomInRange(4);\n                vec2.copy(this.goal, this.heardGuardPos);\n            }\n    \n            if (this.heardThief) {\n                if (this.adjacentTo(player.pos)) {\n                    this.mode = GuardMode.ChaseVisibleTarget;\n                    vec2.copy(this.goal, player.pos);\n                } else if (this.mode == GuardMode.Patrol) {\n                    this.mode = GuardMode.Listen;\n                    this.modeTimeout = 2 + randomInRange(4);\n                    updateDir(this.dir, this.pos, player.pos);\n                } else {\n                    this.mode = GuardMode.MoveToLastSound;\n                    this.modeTimeout = 2 + randomInRange(4);\n                    vec2.copy(this.goal, player.pos);\n                }\n            }\n        }\n    \n        // Pass time in the current mode\n    \n        switch (this.mode) {\n        case GuardMode.Patrol:\n            this.patrolStep(map, player);\n            break;\n\n        case GuardMode.Look:\n        case GuardMode.Listen:\n            this.modeTimeout -= 1;\n            if (this.modeTimeout == 0) {\n                this.mode = GuardMode.Patrol;\n            }\n            break;\n\n        case GuardMode.ChaseVisibleTarget:\n            if (this.adjacentTo(player.pos)) {\n                updateDir(this.dir, this.pos, this.goal);\n                if (modePrev == GuardMode.ChaseVisibleTarget) {\n                    if (!player.damagedLastTurn) {\n                        /* TODO\n                        popups.damage(this.pos, lines.damage.next());\n                        */\n                    }\n                    player.applyDamage(1);\n                }\n            } else {\n                this.moveTowardGoal(map, player);\n            }\n            break;\n\n        case GuardMode.MoveToLastSighting:\n        case GuardMode.MoveToLastSound:\n        case GuardMode.MoveToGuardShout:\n            if (!this.moveTowardGoal(map, player)) {\n                this.modeTimeout -= 1;\n            }\n\n            if (this.modeTimeout == 0) {\n                this.mode = GuardMode.Patrol;\n                this.setupGoalRegion(map);\n            }\n            break;\n        }\n    \n        // If we moved, update state based on target visibility from new position\n    \n        if (this.pos[0] != posPrev[0] || this.pos[1] != posPrev[1]) {\n            if (this.seesThief(map, player)) {\n                vec2.copy(this.goal, player.pos);\n    \n                if (this.mode == GuardMode.Patrol && !this.adjacentTo(player.pos)) {\n                    this.mode = GuardMode.Look;\n                    this.modeTimeout = 2 + randomInRange(4);\n                } else {\n                    this.mode = GuardMode.ChaseVisibleTarget;\n                }\n    \n                updateDir(this.dir, this.pos, player.pos);\n            } else if (this.mode == GuardMode.ChaseVisibleTarget) {\n                this.mode = GuardMode.MoveToLastSighting;\n                this.modeTimeout = 3;\n                vec2.copy(this.goal, player.pos);\n            }\n        }\n    \n        // Clear heard-thief flag\n    \n        this.heardThief = false;\n    \n        // Say something to indicate state changes\n\n        /* TODO\n        if (let Some(line_iter) = lines_for_state_change(lines, modePrev, this.mode)) {\n            this.say(popups, player, see_all, line_iter.next());\n        }\n        */\n    \n        if (this.mode == GuardMode.ChaseVisibleTarget && modePrev != GuardMode.ChaseVisibleTarget) {\n            shouts.push({pos_shouter: this.pos, pos_target: player.pos});\n        }\n    }\n\n    adjacentTo(pos: vec2): boolean {\n        const dx = pos[0] - this.pos[0];\n        const dy = pos[1] - this.pos[1];\n        return Math.abs(dx) < 2 && Math.abs(dy) < 2;\n    }\n\n    seesThief(map: GameMap, player: Player): boolean {\n        const d = vec2.create();\n        vec2.subtract(d, player.pos, this.pos);\n        if (vec2.dot(this.dir, d) < 0) {\n            return false;\n        }\n    \n        let playerIsLit = map.cells.at(player.pos[0], player.pos[1]).lit;\n    \n        let d2 = vec2.squaredLength(d);\n        if (d2 >= this.sightCutoff(playerIsLit)) {\n            return false;\n        }\n    \n        if (!player.hidden(map) && lineOfSight(map, this.pos, player.pos)) {\n            return true;\n        }\n    \n        if (this.mode != GuardMode.Patrol && Math.abs(d[0]) < 2 && Math.abs(d[1]) < 2) {\n            return true;\n        }\n    \n        return false;\n    }\n\n    cutoffLit(): number {\n        return (this.mode == GuardMode.Patrol) ? 40 : 75;\n    }\n    \n    cutoffUnlit(): number {\n        return (this.mode == GuardMode.Patrol) ? 3 : 33;\n    }\n    \n    sightCutoff(litTarget: boolean): number {\n        return litTarget ? this.cutoffLit() : this.cutoffUnlit();\n    }\n\n    patrolStep(map: GameMap, player: Player) {\n        const bumpedThief = this.moveTowardRegion(map, player);\n    \n        if (map.cells.at(this.pos[0], this.pos[1]).region == this.regionGoal) {\n            const regionPrev = this.regionPrev;\n            this.regionPrev = this.regionGoal;\n            this.regionGoal = map.randomNeighborRegion(this.regionGoal, regionPrev);\n        }\n    \n        if (bumpedThief) {\n            this.mode = GuardMode.ChaseVisibleTarget;\n            this.goal = player.pos;\n            updateDir(this.dir, this.pos, this.goal);\n        }\n    }\n\n    updateDirInitial(map: GameMap)\n    {\n        if (this.regionGoal == invalidRegion) {\n            return;\n        }\n    \n        let distanceField = map.computeDistancesToRegion(this.regionGoal);\n        const posNext = posNextBest(map, distanceField, this.pos);\n    \n        updateDir(this.dir, this.pos, posNext);\n    }\n\n    moveTowardRegion(map: GameMap, player: Player): boolean {\n        if (this.regionGoal == invalidRegion) {\n            return false;\n        }\n\n        const distanceField = map.computeDistancesToRegion(this.regionGoal);\n        const posNext = posNextBest(map, distanceField, this.pos);\n\n        if (player.pos[0] == posNext[0] && player.pos[1] == posNext[1]) {\n            return true;\n        }\n\n        updateDir(this.dir, this.pos, posNext);\n        vec2.copy(this.pos, posNext);\n\n        return false;\n    }\n\n    moveTowardGoal(map: GameMap, player: Player): boolean {\n        const distanceField = map.computeDistancesToPosition(this.goal);\n        const posNext = posNextBest(map, distanceField, this.pos);\n\n        if (posNext[0] == this.pos[0] && posNext[1] == this.pos[1]) {\n            return false;\n        }\n\n        updateDir(this.dir, this.pos, posNext);\n\n        if (player.pos[0] == posNext[0] && player.pos[1] == posNext[1]) {\n            return false;\n        }\n\n        vec2.copy(this.pos, posNext);\n        return true;\n    }\n\n    setupGoalRegion(map: GameMap) {\n        const regionCur = map.cells.at(this.pos[0], this.pos[1]).region;\n    \n        if (this.regionGoal != invalidRegion && regionCur == this.regionPrev) {\n            return;\n        }\n    \n        if (regionCur == invalidRegion) {\n            this.regionGoal = map.closestRegion(this.pos);\n        } else {\n            this.regionGoal = map.randomNeighborRegion(regionCur, this.regionPrev);\n            this.regionPrev = regionCur;\n        }\n    }\n}\n\ntype Shout = {\n    pos_shouter: vec2; // where is the person shouting?\n    pos_target: vec2; // where are they reporting the player is?\n}\n\nfunction guardActAll(seeAll: boolean, /* popups: Popups, lines: Lines, */ map: GameMap, player: Player) {\n\n    // Mark if we heard a guard last turn, and clear the speaking flag.\n\n    for (const guard of map.guards) {\n        guard.preTurn();\n    }\n\n    // Update each guard for this turn.\n\n    const shouts: Array<Shout> = [];\n    for (const guard of map.guards) {\n        guard.act(seeAll, /* popups, lines, */ player, map, shouts);\n    }\n\n    // Process shouts\n\n    for (const shout of shouts) {\n        alertNearbyGuards(map, shout);\n    }\n}\n\nfunction alertNearbyGuards(map: GameMap, shout: Shout) {\n    for (const guard of guardsInEarshot(map, shout.pos_shouter, 150)) {\n        if (guard.pos[0] != shout.pos_shouter[0] || guard.pos[1] != shout.pos_shouter[1]) {\n            guard.hearingGuard = true;\n            vec2.copy(guard.heardGuardPos, shout.pos_shouter);\n        }\n    }\n}\n\nfunction posNextBest(map: GameMap, distanceField: Float64Grid, posFrom: vec2): vec2 {\n    let costBest = Infinity;\n    let posBest = posFrom;\n\n    const posMin = vec2.fromValues(Math.max(0, posFrom[0] - 1), Math.max(0, posFrom[1] - 1));\n    const posMax = vec2.fromValues(Math.min(map.cells.sizeX, posFrom[0] + 2), Math.min(map.cells.sizeY, posFrom[1] + 2));\n\n    for (let x = posMin[0]; x < posMax[0]; ++x) {\n        for (let y = posMin[1]; y < posMax[1]; ++y) {\n            const cost = distanceField.get(x, y);\n            if (cost == Infinity) {\n                continue;\n            }\n\n            let pos = vec2.fromValues(x, y);\n            if (map.guardMoveCost(posFrom, pos) == Infinity) {\n                continue;\n            }\n\n            if (map.cells.at(pos[0], pos[1]).type == TerrainType.GroundWater) {\n                continue;\n            }\n\n            if (map.isGuardAt(pos[0], pos[1])) {\n                continue;\n            }\n\n            if (cost < costBest) {\n                costBest = cost;\n                posBest = pos;\n            }\n        }\n    }\n\n    return posBest;\n}\n\nfunction updateDir(dir: vec2, pos: vec2, posTarget: vec2) {\n    const dirTarget = vec2.create();\n    vec2.subtract(dirTarget, posTarget, pos);\n\n    const dirLeft = vec2.fromValues(-dir[1], dir[0]);\n\n    let dotForward = vec2.dot(dir, dirTarget);\n    let dotLeft = vec2.dot(dirLeft, dirTarget);\n\n    if (Math.abs(dotForward) >= Math.abs(dotLeft)) {\n        if (dotForward >= 0) {\n            // leave dir unchanged\n        } else {\n            vec2.negate(dir, dir);\n        }\n    } else if (Math.abs(dotLeft) > Math.abs(dotForward)) {\n        if (dotLeft >= 0) {\n            vec2.copy(dir, dirLeft);\n        } else {\n            vec2.negate(dir, dirLeft);\n        }\n    } else if (dotForward > 0) {\n        // leave dir unchanged\n    } else if (dotLeft >= 0) {\n        vec2.copy(dir, dirLeft);\n    } else {\n        vec2.negate(dir, dirLeft);\n    }\n}\n\nfunction lineOfSight(map: GameMap, from: vec2, to: vec2): boolean {\n    let x = from[0];\n    let y = from[1];\n\n    const dx = to[0] - x;\n    const dy = to[1] - y;\n\n    let ax = Math.abs(dx);\n    let ay = Math.abs(dy);\n\n    const x_inc = (dx > 0) ? 1 : -1;\n    const y_inc = (dy > 0) ? 1 : -1;\n\n    let error = ay - ax;\n\n    let n = ax + ay - 1;\n\n    ax *= 2;\n    ay *= 2;\n\n    while (n > 0) {\n        if (error > 0) {\n            y += y_inc;\n            error -= ax;\n        } else {\n            x += x_inc;\n            error += ay;\n        }\n\n        if (map.cells.at(x, y).blocksSight) {\n            return false;\n        }\n\n        --n;\n    }\n\n    return true;\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"17fSe\\\":\\\"index.b651f798.js\\\",\\\"757gI\\\":\\\"footstep-wood.8da8b302.ogg\\\",\\\"fI7s2\\\":\\\"footstep-tile.ed285432.ogg\\\",\\\"64MsM\\\":\\\"footstep-water.41ed0f5b.ogg\\\",\\\"fe6XQ\\\":\\\"footstep-gravel.2ecfc65f.ogg\\\",\\\"kPzFJ\\\":\\\"footstep-grass.46fcb678.ogg\\\",\\\"8FZzo\\\":\\\"font.84b63647.png\\\",\\\"lW8yX\\\":\\\"tiles.60aa3fc2.png\\\"}\"));","export {\n    BooleanGrid,\n    Cell,\n    CellGrid,\n    Float64Grid,\n    Int32Grid,\n    ItemType,\n    GameMap,\n    Player,\n    TerrainType,\n    guardMoveCostForItemType,\n    guardsInEarshot,\n    invalidRegion\n};\n\nimport { Guard, GuardMode } from './guard';\nimport { vec2 } from './my-matrix';\nimport { randomInRange } from './random';\n\nconst invalidRegion: number = -1;\n\n// TODO: Figure out how to make a generic grid data structure\n\nclass BooleanGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Uint8Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: boolean) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Uint8Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: boolean) {\n        this.values.fill(value ? 1 : 0);\n    }\n\n    get(x: number, y: number): boolean {\n        return this.values[this.sizeX * y + x] !== 0;\n    }\n\n    set(x: number, y: number, value: boolean) {\n        this.values[this.sizeX * y + x] = value ? 1 : 0;\n    }\n}\n\nclass Int32Grid {\n    sizeX: number;\n    sizeY: number;\n    values: Int32Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Int32Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: number) {\n        this.values.fill(value);\n    }\n\n    get(x: number, y: number): number {\n        return this.values[this.sizeX * y + x];\n    }\n\n    set(x: number, y: number, value: number) {\n        this.values[this.sizeX * y + x] = value;\n    }\n}\n\nclass Float64Grid {\n    sizeX: number;\n    sizeY: number;\n    values: Float64Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Float64Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: number) {\n        this.values.fill(value);\n    }\n\n    get(x: number, y: number): number {\n        return this.values[this.sizeX * y + x];\n    }\n\n    set(x: number, y: number, value: number) {\n        this.values[this.sizeX * y + x] = value;\n    }\n}\n\nenum TerrainType {\n    GroundNormal,\n    GroundGrass,\n    GroundWater,\n    GroundMarble,\n    GroundWood,\n    GroundWoodCreaky,\n\n    //  NSEW\n    Wall0000,\n    Wall0001,\n    Wall0010,\n    Wall0011,\n    Wall0100,\n    Wall0101,\n    Wall0110,\n    Wall0111,\n    Wall1000,\n    Wall1001,\n    Wall1010,\n    Wall1011,\n    Wall1100,\n    Wall1101,\n    Wall1110,\n    Wall1111,\n\n    OneWayWindowE,\n    OneWayWindowW,\n    OneWayWindowN,\n    OneWayWindowS,\n    PortcullisNS,\n    PortcullisEW,\n    DoorNS,\n    DoorEW,\n}\n\ntype Cell = {\n    type: TerrainType;\n    moveCost: number;\n    region: number;\n    blocksPlayerMove: boolean;\n    blocksPlayerSight: boolean;\n    blocksSight: boolean;\n    blocksSound: boolean;\n    hidesPlayer: boolean;\n    lit: boolean;\n    seen: boolean;\n}\n\nclass CellGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Array<Cell>;\n\n    constructor(sizeX: number, sizeY: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        const size = sizeX * sizeY;\n        this.values = new Array<Cell>(size);\n        for (let i = 0; i < size; ++i) {\n            this.values[i] = {\n                type: TerrainType.GroundNormal,\n                moveCost: Infinity,\n                region: invalidRegion,\n                blocksPlayerMove: false,\n                blocksPlayerSight: false,\n                blocksSight: false,\n                blocksSound: false,\n                hidesPlayer: false,\n                lit: false,\n                seen: false,\n            };\n        }\n    }\n\n    at(x: number, y: number): Cell {\n        const i = this.sizeX * y + x;\n        console.assert(i >= 0);\n        console.assert(i < this.values.length);\n        return this.values[i];\n    }\n}\n\nenum ItemType {\n    Chair,\n    Table,\n    Bush,\n    Coin,\n    DoorNS,\n    DoorEW,\n    PortcullisNS,\n    PortcullisEW,\n}\n\ntype Item = {\n    pos: vec2;\n    type: ItemType;\n}\n\nfunction guardMoveCostForItemType(itemType: ItemType): number {\n    switch (itemType) {\n        case ItemType.Chair: return 4;\n        case ItemType.Table: return 10;\n        case ItemType.Bush: return 10;\n        case ItemType.Coin: return 0;\n        case ItemType.DoorNS: return 0;\n        case ItemType.DoorEW: return 0;\n        case ItemType.PortcullisNS: return 0;\n        case ItemType.PortcullisEW: return 0;\n    }\n}\n\nconst maxPlayerHealth: number = 5;\n\nclass Player {\n    pos: vec2;\n    dir: vec2;\n    health: number;\n    gold: number;\n    noisy: boolean; // did the player make noise last turn?\n    damagedLastTurn: boolean;\n    turnsRemainingUnderwater: number;\n\n    constructor(pos: vec2) {\n        this.pos = vec2.clone(pos);\n        this.dir = vec2.fromValues(0, -1);\n        this.health = maxPlayerHealth;\n        this.gold = 0;\n        this.noisy = false;\n        this.damagedLastTurn = false;\n        this.turnsRemainingUnderwater = 0;\n    }\n\n    applyDamage(d: number) {\n        this.health -= Math.min(d, this.health);\n        this.damagedLastTurn = true;\n    }\n\n    hidden(map: GameMap): boolean {\n        if (map.guards.find((guard) => guard.mode == GuardMode.ChaseVisibleTarget) !== undefined) {\n            return false;\n        }\n\n        if (map.cells.at(this.pos[0], this.pos[1]).hidesPlayer) {\n            return true;\n        }\n\n        let cellType = map.cells.at(this.pos[0], this.pos[1]).type;\n\n        if (cellType == TerrainType.GroundWater && this.turnsRemainingUnderwater > 0) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\ntype Rect = {\n    posMin: vec2;\n    posMax: vec2;\n}\n\ntype PortalInfo = {\n    // offset of left corner of portal relative to lower-left corner of cell:\n    lx: number;\n    ly: number;\n    // offset of right corner of portal relative to lower-left-corner of cell:\n    rx: number;\n    ry: number;\n    // offset of neighboring cell relative to this cell's coordinates:\n    nx: number;\n    ny: number;\n}\n\nconst portals: Array<PortalInfo> = [\n    { lx: -1, ly: -1, rx: -1, ry:  1, nx: -1, ny:  0 },\n    { lx: -1, ly:  1, rx:  1, ry:  1, nx:  0, ny:  1 },\n    { lx:  1, ly:  1, rx:  1, ry: -1, nx:  1, ny:  0 },\n    { lx:  1, ly: -1, rx: -1, ry: -1, nx:  0, ny: -1 },\n];\n\nfunction aRightOfB(ax: number, ay: number, bx: number, by: number): boolean {\n    return ax * by > ay * bx;\n}\n\nfunction allowedDirection(terrainType: TerrainType, dx: number, dy: number): boolean {\n    switch (terrainType) {\n    case TerrainType.OneWayWindowE: return dx > 0;\n    case TerrainType.OneWayWindowW: return dx < 0;\n    case TerrainType.OneWayWindowN: return dy > 0;\n    case TerrainType.OneWayWindowS: return dy < 0;\n    default: return true;\n    }\n}\n\ntype AdjacentMove = {\n    dx: number;\n    dy: number;\n    cost: number;\n}\n\nconst adjacentMoves: Array<AdjacentMove> = [\n    { dx:  1, dy:  0, cost: 2 },\n    { dx: -1, dy:  0, cost: 2 },\n    { dx:  0, dy:  1, cost: 2 },\n    { dx:  0, dy: -1, cost: 2 },\n    { dx: -1, dy: -1, cost: 3 },\n    { dx:  1, dy: -1, cost: 3 },\n    { dx: -1, dy:  1, cost: 3 },\n    { dx:  1, dy:  1, cost: 3 },\n];\n\nconst soundNeighbors: Array<vec2> = [\n    vec2.fromValues(-1, 0),\n    vec2.fromValues(1, 0),\n    vec2.fromValues(0, -1),\n    vec2.fromValues(0, 1),\n];\n\ntype DistPos = {\n    priority: number; // = distance; needs to be named priority for PriorityQueueElement\n    pos: vec2;\n}\n\nclass GameMap {\n    cells: CellGrid;\n    patrolRegions: Array<Rect>;\n    patrolRoutes: Array<[number, number]>;\n    items: Array<Item>;\n    guards: Array<Guard>;\n    playerStartPos: vec2;\n    totalLoot: number;\n\n    constructor(cells: CellGrid) {\n        this.cells = cells;\n        this.patrolRegions = [];\n        this.patrolRoutes = [];\n        this.items = [];\n        this.guards = [];\n        this.playerStartPos = vec2.create();\n        this.totalLoot = 0;\n    }\n\n    collectLootAt(x: number, y: number): number {\n        let gold = 0;\n        this.items = this.items.filter((item) => {\n            if (item.type == ItemType.Coin && item.pos[0] == x && item.pos[1] == y) {\n                ++gold;\n                return false;\n            } else {\n                return true;\n            }\n        });\n        return gold;\n    }\n    \n    collectAllLoot(): number {\n        let gold = 0;\n        this.items = this.items.filter((item) => {\n            if (item.type == ItemType.Coin) {\n                ++gold;\n                return true;\n            } else {\n                return false;\n            }\n        });\n        return gold;\n    }\n\n    allSeen(): boolean {\n        for (const cell of this.cells.values) {\n            if (!cell.seen) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    percentSeen(): number {\n        let numSeen = 0;\n        for (const cell of this.cells.values) {\n            if (cell.seen) {\n                ++numSeen;\n            }\n        }\n    \n        return Math.floor((numSeen * 100) / this.cells.values.length);\n    }\n    \n    markAllSeen() {\n        for (const cell of this.cells.values) {\n            cell.seen = true;\n        }\n    }\n    \n    markAllUnseen() {\n        for (const cell of this.cells.values) {\n            cell.seen = false;\n        }\n    }\n\n    recomputeVisibility(posViewer: vec2) {\n        for (const portal of portals) {\n            this.computeVisibility\n            (\n                posViewer[0], posViewer[1],\n                posViewer[0], posViewer[1],\n                portal.lx, portal.ly,\n                portal.rx, portal.ry\n            );\n        }\n    }\n    \n    playerCanSeeInDirection(posViewer: vec2, dir: vec2): boolean {\n        const posTarget = vec2.create();\n        vec2.add(posTarget, posViewer, dir);\n        if (posTarget[0] < 0 ||\n            posTarget[1] < 0 ||\n            posTarget[0] >= this.cells.sizeX ||\n            posTarget[1] >= this.cells.sizeY) {\n            return true;\n        }\n    \n        if (!allowedDirection(this.cells.at(posTarget[0], posTarget[1]).type, dir[0], dir[1])) {\n            return false;\n        }\n\n        return !this.cells.at(posTarget[0], posTarget[1]).blocksPlayerSight;\n    }\n\n    computeVisibility(\n        // Viewer map coordinates:\n        viewerX: number,\n        viewerY: number,\n        // Target cell map coordinates:\n        targetX: number,\n        targetY: number,\n        // Left edge of current view frustum (relative to viewer):\n        ldx: number,\n        ldy: number,\n        // Right edge of current view frustum (relative to viewer):\n        rdx: number,\n        rdy: number\n    ) {\n        // End recursion if the target cell is out of bounds.\n        if (targetX < 0 || targetY < 0 || targetX >= this.cells.sizeX || targetY >= this.cells.sizeY) {\n            return;\n        }\n    \n        // End recursion if the target square is too far away.\n        const dx = 2 * (targetX - viewerX);\n        const dy = 2 * (targetY - viewerY);\n    \n        if (dx*dx + dy*dy > 1600) {\n            return;\n        }\n    \n        // End recursion if the incoming direction is not allowed by the current cell type.\n        if (!allowedDirection(this.cells.at(targetX, targetY).type, dx, dy)) {\n            return;\n        }\n    \n        // This square is visible.\n        this.cells.at(targetX, targetY).seen = true;\n    \n        // End recursion if the target square occludes the view.\n        if (this.cells.at(targetX, targetY).blocksPlayerSight) {\n            return;\n        }\n    \n        // Mark diagonally-adjacent squares as visible if their corners are visible\n        for (let x = 0; x < 2; ++x) {\n            for (let y = 0; y < 2; ++y) {\n                let nx = targetX + 2*x - 1;\n                let ny = targetY + 2*y - 1;\n                let cdx = dx + 2*x - 1;\n                let cdy = dy + 2*y - 1;\n                \n                if (nx >= 0 &&\n                    ny >= 0 &&\n                    nx < this.cells.sizeX &&\n                    ny < this.cells.sizeY &&\n                    !aRightOfB(ldx, ldy, cdx, cdy) &&\n                    !aRightOfB(cdx, cdy, rdx, rdy)) {\n                    this.cells.at(nx, ny).seen = true;\n                }\n            }\n        }\n    \n        // Clip portals to adjacent squares and recurse through the visible portions\n        for (const portal of portals) {\n            // Relative positions of the portal's left and right endpoints:\n            const pldx = dx + portal.lx;\n            const pldy = dy + portal.ly;\n            const prdx = dx + portal.rx;\n            const prdy = dy + portal.ry;\n    \n            // Clip portal against current view frustum:\n            const [cldx, cldy] = aRightOfB(ldx, ldy, pldx, pldy) ? [ldx, ldy] : [pldx, pldy];\n            const [crdx, crdy] = aRightOfB(rdx, rdy, prdx, prdy) ? [prdx, prdy] : [rdx, rdy];\n    \n            // If we can see through the clipped portal, recurse through it.\n            if (aRightOfB(crdx, crdy, cldx, cldy)) {\n                this.computeVisibility\n                (\n                    viewerX, viewerY,\n                    targetX + portal.nx, targetY + portal.ny,\n                    cldx, cldy,\n                    crdx, crdy\n                );\n            }\n        }\n    }\n    \n    allLootCollected(): boolean {\n        return this.items.find((item) => item.type == ItemType.Coin) === undefined;\n    }\n\n    isGuardAt(x: number, y: number): boolean {\n        return this.guards.find((guard) => guard.pos[0] == x && guard.pos[1] == y) != undefined;\n    }\n\n    randomNeighborRegion(region: number, regionExclude: number): number {\n        const neighbors = [];\n    \n        for (const [region0, region1] of this.patrolRoutes) {\n            if (region0 == region && region1 != regionExclude) {\n                neighbors.push(region1);\n            } else if (region1 == region && region0 != regionExclude) {\n                neighbors.push(region0);\n            }\n        }\n    \n        if (neighbors.length === 0) {\n            return region;\n        }\n\n        return neighbors[randomInRange(neighbors.length)];\n    }\n\n    guardMoveCost(posOld: vec2, posNew: vec2): number {\n        let cost = this.cells.at(posNew[0], posNew[1]).moveCost;\n    \n        if (cost == Infinity) {\n            return cost;\n        }\n    \n        // Guards are not allowed to move diagonally around corners.\n    \n        if (posOld[0] != posNew[0] &&\n            posOld[1] != posNew[1] &&\n            (this.cells.at(posOld[0], posNew[1]).moveCost == Infinity ||\n             this.cells.at(posNew[0], posOld[1]).moveCost == Infinity)) {\n            return Infinity;\n        }\n    \n        return cost;\n    }\n\n    closestRegion(pos: vec2): number {\n\n        const sizeX = this.cells.sizeX;\n        const sizeY = this.cells.sizeY;\n\n        const distField = new Float64Grid(sizeX, sizeY, Infinity);\n        const heap: PriorityQueue<DistPos> = [];\n\n        priorityQueuePush(heap, { priority: 0, pos: pos });\n\n        while (heap.length > 0) {\n            const state = priorityQueuePop(heap);\n            const dist = state.priority;\n            const pos = state.pos;\n    \n            const region = this.cells.at(pos[0], pos[1]).region;\n            if (region != invalidRegion) {\n                return region;\n            }\n    \n            if (dist >= distField.get(pos[0], pos[1])) {\n                continue;\n            }\n    \n            distField.set(pos[0], pos[1], dist);\n    \n            for (const adjacentMove of adjacentMoves) {\n                const posNew = vec2.fromValues(pos[0] + adjacentMove.dx, pos[1] + adjacentMove.dy);\n                if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= sizeX || posNew[1] >= sizeY) {\n                    continue;\n                }\n    \n                const moveCost = this.guardMoveCost(pos, posNew);\n                if (moveCost == Infinity) {\n                    continue;\n                }\n    \n                let distNew = dist + moveCost + adjacentMove.cost;\n    \n                if (distNew < distField.get(posNew[0], posNew[1])) {\n                    priorityQueuePush(heap, { priority: distNew, pos: posNew });\n                }\n            }\n        }\n    \n        return invalidRegion;\n    }\n\n    computeDistancesToRegion(iRegionGoal: number): Float64Grid {\n        console.assert(iRegionGoal < this.patrolRegions.length);\n    \n        let region = this.patrolRegions[iRegionGoal];\n    \n        // Fill the priority queue with all of the region's locations.\n    \n        const goal = [];\n    \n        for (let x = region.posMin[0]; x < region.posMax[0]; ++x) {\n            for (let y = region.posMin[1]; y < region.posMax[1]; ++y) {\n                const p = vec2.fromValues(x, y);\n                const guardMoveCost = this.cells.at(x, y).moveCost;\n                goal.push({ priority: guardMoveCost, pos: p });\n            }\n        }\n    \n        return this.computeDistanceField(goal);\n    }\n    \n    computeDistancesToPosition(pos_goal: vec2): Float64Grid {\n        console.assert(pos_goal[0] >= 0);\n        console.assert(pos_goal[1] >= 0);\n        console.assert(pos_goal[0] < this.cells.sizeX);\n        console.assert(pos_goal[1] < this.cells.sizeY);\n    \n        return this.computeDistanceField([{ priority: 0, pos: pos_goal }]);\n    }\n\n    computeDistanceField(initialDistances: Array<DistPos>): Float64Grid {\n        let sizeX = this.cells.sizeX;\n        let sizeY = this.cells.sizeY;\n\n        const heap: PriorityQueue<DistPos> = [];\n        const distField = new Float64Grid(sizeX, sizeY, Infinity);\n    \n        for (const distPos of initialDistances) {\n            priorityQueuePush(heap, distPos);\n        }\n    \n        while (heap.length > 0) {\n            const distPos = priorityQueuePop(heap);\n            if (distPos.priority >= distField.get(distPos.pos[0], distPos.pos[1])) {\n                continue;\n            }\n    \n            distField.set(distPos.pos[0], distPos.pos[1], distPos.priority);\n    \n            for (const adjacentMove of adjacentMoves) {\n                const posNew = vec2.fromValues(distPos.pos[0] + adjacentMove.dx, distPos.pos[1] + adjacentMove.dy);\n                if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= sizeX || posNew[1] >= sizeY) {\n                    continue;\n                }\n    \n                const moveCost = this.guardMoveCost(distPos.pos, posNew);\n                if (moveCost == Infinity) {\n                    continue;\n                }\n    \n                const distNew = distPos.priority + moveCost + adjacentMove.cost;\n    \n                if (distNew < distField.get(posNew[0], posNew[1])) {\n                    priorityQueuePush(heap, { priority: distNew, pos: posNew });\n                }\n            }\n        }\n    \n        return distField;\n    }\n}\n\nfunction guardsInEarshot(gameMap: GameMap, soundPos: vec2, radius: number): Array<Guard> {\n    return []; // TODO not yet implemented\n}\n\n/* TODO finish porting\nfunction coords_in_earshot(gameMap: GameMap, soundPos: vec2, radius: number): Array<vec2> {\n    // Flood-fill from the emitter position.\n\n    const sizeX = gameMap.cells.sizeX;\n    const sizeY = gameMap.cells.sizeY;\n\n    const capacity = sizeX * sizeY;\n    const coordsVisited: Array<vec2> = []; // TODO: won't work due to non-value comparisons on vec2\n    const coords_to_visit = [];\n\n    coords_to_visit.push(soundPos);\n\n    while (let Some(pos) = coords_to_visit.pop_front()) {\n\n        coordsVisited.insert(pos);\n\n        for (const dir of soundNeighbors) {\n            let newPos = vec2.create();\n            vec2.add(newPos, pos, dir);\n\n            // Skip positions that are off the map.\n\n            if (newPos[0] < 0 || newPos[0] >= sizeX ||\n                newPos[1] < 0 || newPos[1] >= sizeY) {\n                continue;\n            }\n\n            // Skip neighbors that have already been visited.\n\n            if (coordsVisited.contains(newPos)) {\n                continue;\n            }\n\n            // Skip neighbors that are outside of the hearing radius.\n\n            let d2 = vec2.squaredDistance(soundPos, newPos);\n            if (d2 >= radius) {\n                continue;\n            }\n\n            // Skip neighbors that don't transmit sound\n\n            if (gameMap.cells.at(newPos[0], newPos[1]).blocksSound) {\n                continue;\n            }\n\n            coords_to_visit.push(newPos);\n        }\n    }\n\n    return coordsVisited;\n}\n*/\n\ntype PriorityQueueElement = {\n    priority: number;\n}\n\ntype PriorityQueue<T> = Array<T>;\n\nfunction priorityQueuePop<T extends PriorityQueueElement>(q: PriorityQueue<T>): T {\n    const x = q[0];\n    q[0] = q[q.length - 1]; // q.at(-1);\n    q.pop();\n    let i = 0;\n    const c = q.length;\n    while (true) {\n        let iChild = i;\n        const iChild0 = 2*i + 1;\n        if (iChild0 < c && q[iChild0].priority < q[iChild].priority) {\n            iChild = iChild0;\n        }\n        const iChild1 = iChild0 + 1;\n        if (iChild1 < c && q[iChild1].priority < q[iChild].priority) {\n            iChild = iChild1;\n        }\n        if (iChild == i) {\n            break;\n        }\n        [q[i], q[iChild]] = [q[iChild], q[i]];\n        i = iChild;\n    }\n    return x;\n}\n\nfunction priorityQueuePush<T extends PriorityQueueElement>(q: PriorityQueue<T>, x: T) {\n    q.push(x);\n    let i = q.length - 1;\n    while (i > 0) {\n        const iParent = Math.floor((i - 1) / 2);\n        if (q[i].priority >= q[iParent].priority) {\n            break;\n        }\n        [q[i], q[iParent]] = [q[iParent], q[i]];\n        i = iParent;\n    }\n}\n","export { createGameMap };\n\nimport { BooleanGrid, CellGrid, Int32Grid, ItemType, GameMap, TerrainType, invalidRegion, guardMoveCostForItemType } from './game-map';\nimport { Guard } from './guard';\nimport { vec2 } from './my-matrix';\nimport { randomInRange, shuffleArray } from './random';\n\nconst roomSizeX = 5;\nconst roomSizeY = 5;\nconst outerBorder = 3;\n\nenum RoomType\n{\n    Exterior,\n    PublicCourtyard,\n    PublicRoom,\n    PrivateCourtyard,\n    PrivateRoom,\n}\n\ntype Room = {\n    roomType: RoomType,\n    group: number,\n    depth: number,\n    posMin: vec2,\n    posMax: vec2,\n    edges: Array<number>,\n}\n\ntype Adjacency = {\n    origin: vec2,\n    dir: vec2,\n    length: number,\n    room_left: number,\n    room_right: number,\n    next_matching: number,\n    door: boolean,\n}\n\nfunction createGameMap(level: number): GameMap {\n    const sizeX = randomHouseWidth(level);\n    const sizeY = randomHouseDepth(level);\n\n    const inside = makeSiheyuanRoomGrid(sizeX, sizeY);\n\n    const mirrorX: boolean = true;\n    const mirrorY: boolean = false;\n\n    const [offsetX, offsetY] = offsetWalls(mirrorX, mirrorY, inside);\n\n    const cells = plotWalls(inside, offsetX, offsetY);\n\n    const map = new GameMap(cells);\n\n    const [rooms, adjacencies, posStart] = createExits(level, mirrorX, mirrorY, inside, offsetX, offsetY, map);\n\n    vec2.copy(map.playerStartPos, posStart);\n\n    placeLoot(rooms, adjacencies, map);\n    placeExteriorBushes(map);\n    placeFrontPillars(map);\n    placeGuards(level, rooms, map);\n\n    markExteriorAsSeen(map);\n\n    cacheCellInfo(map);\n\n    map.totalLoot = map.items.reduce((totalLoot, item) => totalLoot + ((item.type == ItemType.Coin) ? 1 : 0), 0);\n\n    fixupWalls(cells);\n\n    return map;\n}\n\nfunction randomHouseWidth(level: number): number {\n    let sizeX = 0;\n    const c = Math.min(3, level);\n    for (let i = 0; i < c; ++i) {\n        sizeX += randomInRange(2);\n    }\n    return sizeX * 2 + 3;\n}\n\nfunction randomHouseDepth(level: number): number {\n    if (level === 0) {\n        return 2;\n    } else {\n        let sizeY = 3;\n        const c = Math.min(4, level - 1);\n        for (let i = 0; i < c; ++i) {\n            sizeY += randomInRange(2);\n        }\n        return sizeY;\n    }\n}\n\nfunction makeSiheyuanRoomGrid(sizeX: number, sizeY: number): BooleanGrid {\n    const inside = new BooleanGrid(sizeX, sizeY, true);\n\n    const halfX = Math.floor((sizeX + 1) / 2);\n\n    const numCourtyardRoomsHalf = Math.floor((sizeY * halfX) / 4);\n    for (let i = numCourtyardRoomsHalf; i > 0; --i) {\n        const x = randomInRange(halfX);\n        const y = randomInRange(sizeY);\n        inside.set(x, y, false);\n    }\n\n    for (let y = 0; y < sizeY; ++y) {\n        for (let x = halfX; x < sizeX; ++x) {\n            inside.set(x, y, inside.get((sizeX - 1) - x, y));\n        }\n    }\n\n    return inside;\n}\n\nfunction offsetWalls(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid): [offsetX: Int32Grid, offsetY: Int32Grid]\n{\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const offsetX = new Int32Grid(roomsX + 1, roomsY, 0);\n    const offsetY = new Int32Grid(roomsX, roomsY + 1, 0);\n\n    let i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(0, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(roomsX, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, 0, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, roomsY, i);\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            offsetX.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            offsetY.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            if (randomInRange(2) === 0) {\n                offsetX.set(x, y, offsetX.get(x, y-1));\n            } else {\n                offsetY.set(x, y, offsetY.get(x-1, y));\n            }\n        }\n    }\n\n    if (mirrorX) {\n        if ((roomsX & 1) === 0) {\n            const xMid = Math.floor(roomsX / 2);\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(xMid, y, 0);\n            }\n        }\n\n        for (let x = 0; x < Math.floor((roomsX + 1) / 2); ++x) {\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(roomsX - x, y, 1 - offsetX.get(x, y));\n            }\n        }\n\n        for (let x = 0; x < Math.floor(roomsX / 2); ++x) {\n            for (let y = 0; y < roomsY + 1; ++y) {\n                offsetY.set((roomsX - 1) - x, y, offsetY.get(x, y));\n            }\n        }\n    }\n\n    if (mirrorY) {\n        if ((roomsY & 1) === 0) {\n            const yMid = roomsY / 2;\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, yMid, 0);\n            }\n        }\n\n        for (let y = 0; y < Math.floor((roomsY + 1) / 2); ++y) {\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, roomsY - y, 1 - offsetY.get(x, y));\n            }\n        }\n\n        for (let y = 0; y < Math.floor(roomsY / 2); ++y) {\n            for (let x = 0; x < roomsX + 1; ++x) {\n                offsetX.set(x, (roomsY - 1) - y, offsetX.get(x, y));\n            }\n        }\n    }\n\n    let roomOffsetX = Number.MIN_SAFE_INTEGER;\n    let roomOffsetY = Number.MIN_SAFE_INTEGER;\n\n    for (let y = 0; y < roomsY; ++y) {\n        roomOffsetX = Math.max(roomOffsetX, -offsetX.get(0, y));\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        roomOffsetY = Math.max(roomOffsetY, -offsetY.get(x, 0));\n    }\n\n    roomOffsetX += outerBorder;\n    roomOffsetY += outerBorder;\n\n    for (let x = 0; x < roomsX + 1; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            const z = offsetX.get(x, y) + roomOffsetX + x * roomSizeX;\n            offsetX.set(x, y, z);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY + 1; ++y) {\n            offsetY.set(x, y, offsetY.get(x, y) + roomOffsetY + y * roomSizeY);\n        }\n    }\n\n    return [offsetX, offsetY];\n}\n\nfunction plotWalls(inside: BooleanGrid, offsetX: Int32Grid, offsetY: Int32Grid): CellGrid {\n    const cx = inside.sizeX;\n    const cy = inside.sizeY;\n\n    let mapSizeX = 0;\n    let mapSizeY = 0;\n\n    for (let y = 0; y < cy; ++y) {\n        mapSizeX = Math.max(mapSizeX, offsetX.get(cx, y));\n    }\n\n    for (let x = 0; x < cx; ++x) {\n        mapSizeY = Math.max(mapSizeY, offsetY.get(x, cy));\n    }\n\n    mapSizeX += outerBorder + 1;\n    mapSizeY += outerBorder + 1;\n\n    const map = new CellGrid(mapSizeX, mapSizeY);\n\n    // Super hacky: put down grass under all the rooms to plug holes, and light the interior.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry) + 1;\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1) + 1;\n\n            for (let x = x0; x < x1; ++x) {\n                for (let y = y0; y < y1; ++y) {\n                    const cell = map.at(x, y);\n                    cell.type = TerrainType.GroundGrass;\n                    cell.lit = true;\n                }\n            }\n        }\n    }\n\n    // Draw walls. Really this should be done in createExits, where the\n    //  walls are getting decorated with doors and windows.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const isInside = inside.get(rx, ry);\n\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry);\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1);\n\n            if (rx == 0 || isInside) {\n                plotNSWall(map, x0, y0, y1);\n            }\n            if (rx == cx - 1 || isInside) {\n                plotNSWall(map, x1, y0, y1);\n            }\n            if (ry == 0 || isInside) {\n                plotEWWall(map, x0, y0, x1);\n            }\n            if (ry == cy - 1 || isInside) {\n                plotEWWall(map, x0, y1, x1);\n            }\n        }\n    }\n\n    return map;\n}\n\nfunction plotNSWall(map: CellGrid, x0: number, y0: number, y1: number) {\n    for (let y = y0; y <= y1; ++y) {\n        map.at(x0, y).type = TerrainType.Wall0000;\n    }\n}\n\nfunction plotEWWall(map: CellGrid, x0: number, y0: number, x1: number) {\n    for (let x = x0; x <= x1; ++x) {\n        map.at(x, y0).type = TerrainType.Wall0000;\n    }\n}\n\nfunction createExits(\n    level: number,\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    map: GameMap\n): [Array<Room>, Array<Adjacency>, vec2] {\n    // Make a set of rooms.\n\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const roomIndex = new Int32Grid(roomsX, roomsY, 0);\n    const rooms: Array<Room> = [];\n\n    // This room represents the area surrounding the map.\n\n    rooms.push({\n        roomType: RoomType.Exterior,\n        group: 0,\n        depth: 0,\n        posMin: vec2.fromValues(0, 0), // not meaningful for this room\n        posMax: vec2.fromValues(0, 0), // not meaningful for this room\n        edges: [],\n    });\n\n    for (let rx = 0; rx < roomsX; ++rx) {\n        for (let ry = 0; ry < roomsY; ++ry) {\n            let group_index = rooms.length;\n\n            roomIndex.set(rx, ry, group_index);\n\n            rooms.push({\n                roomType: inside.get(rx, ry) ?  RoomType.PublicRoom : RoomType.PublicCourtyard,\n                group: group_index,\n                depth: 0,\n                posMin: vec2.fromValues(offsetX.get(rx, ry) + 1, offsetY.get(rx, ry) + 1),\n                posMax: vec2.fromValues(offsetX.get(rx + 1, ry), offsetY.get(rx, ry + 1)),\n                edges: [],\n            });\n        }\n    }\n\n    // Compute a list of room adjacencies.\n\n    const adjacencies = computeAdjacencies(mirrorX, mirrorY, offsetX, offsetY, roomIndex);\n    storeAdjacenciesInRooms(adjacencies, rooms);\n\n    // Connect rooms together.\n\n    let posStart = connectRooms(rooms, adjacencies);\n\n    // Assign types to the rooms.\n\n    assignRoomTypes(roomIndex, adjacencies, rooms);\n\n    // Generate pathing information.\n\n    generatePatrolRoutes(map, rooms, adjacencies);\n\n    // Render doors and windows.\n\n    renderWalls(rooms, adjacencies, map);\n\n    // Render floors.\n\n    renderRooms(level, rooms, map);\n\n    return [rooms, adjacencies, posStart];\n}\n\nfunction computeAdjacencies(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    roomIndex: Int32Grid\n): Array<Adjacency> {\n\n    let roomsX = roomIndex.sizeX;\n    let roomsY = roomIndex.sizeY;\n\n    const adjacencies: Array<Adjacency> = [];\n\n    {\n        const adjacencyRows: Array<Array<number>> = [];\n\n        {\n            const adjacencyRow = [];\n\n            let ry = 0;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry);\n                let x1 = offsetX.get(rx+1, ry);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: roomIndex.get(rx, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let ry = 1; ry < roomsY; ++ry) {\n            const adjacencyRow = [];\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0_upper = offsetX.get(rx, ry);\n                let x0_lower = offsetX.get(rx, ry-1);\n                let x1_upper = offsetX.get(rx+1, ry);\n                let x1_lower = offsetX.get(rx+1, ry-1);\n                let x0 = Math.max(x0_lower, x0_upper);\n                let x1 = Math.min(x1_lower, x1_upper);\n                let y = offsetY.get(rx, ry);\n\n                if (rx > 0 && x0_lower - x0_upper > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0_upper + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x0_lower - (x0_upper + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx - 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (x1 - x0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0 + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1 - (x0 + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (rx + 1 < roomsX && x1_upper - x1_lower > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x1_lower + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1_upper - (x1_lower + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx + 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let ry = roomsY;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry-1);\n                let x1 = offsetX.get(rx+1, ry-1);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry - 1),\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorX) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n\n                let i = 0;\n                let j = row.length - 1;\n                while (i < j) {\n                    let adj0 = row[i];\n                    let adj1 = row[j];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    // Flip edge a1 to point the opposite direction\n                    {\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n\n                    i += 1;\n                    j -= 1;\n                }\n            }\n        }\n\n        if (mirrorY) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                console.assert(row0.length == row1.length);\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    {\n        let adjacencyRows = [];\n\n        {\n            const adjacencyRow = [];\n\n            let rx = 0;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx, ry);\n                let y1 = offsetY.get(rx, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry),\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let rx = 1; rx < roomsX; ++rx) {\n            const adjacencyRow = [];\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0_left  = offsetY.get(rx-1, ry);\n                let y0_right = offsetY.get(rx, ry);\n                let y1_left  = offsetY.get(rx-1, ry+1);\n                let y1_right = offsetY.get(rx, ry+1);\n                let y0 = Math.max(y0_left, y0_right);\n                let y1 = Math.min(y1_left, y1_right);\n                let x = offsetX.get(rx, ry);\n\n                if (ry > 0 && y0_left - y0_right > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0_right + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y0_left - (y0_right + 1),\n                        room_left: roomIndex.get(rx - 1, ry - 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (y1 - y0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0 + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1 - (y0 + 1),\n                        room_left: roomIndex.get(rx - 1, ry),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (ry + 1 < roomsY && y1_right - y1_left > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y1_left + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1_right - (y1_left + 1),\n                        room_left: roomIndex.get(rx - 1, ry + 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let rx = roomsX;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx-1, ry);\n                let y1 = offsetY.get(rx-1, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: roomIndex.get(rx - 1, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                });\n                adjacencyRow.push(i);\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorY) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n                let n = Math.floor(row.length / 2);\n\n                for (let i = 0; i < n; ++i) {\n                    let adj0 = row[i];\n                    let adj1 = row[(row.length - 1) - i];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    {\n                        // Flip edge a1 to point the opposite direction\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n                }\n            }\n        }\n\n        if (mirrorX) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    return adjacencies;\n}\n\nfunction storeAdjacenciesInRooms(adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        rooms[i0].edges.push(i);\n        rooms[i1].edges.push(i);\n    }\n}\n\nfunction connectRooms(rooms: Array<Room>, adjacencies: Array<Adjacency>): vec2 {\n\n    // Collect sets of edges that are mirrors of each other\n\n    let edgeSets = getEdgeSets(adjacencies);\n\n    // Connect all adjacent courtyard rooms together.\n\n    for (const adj of adjacencies) {\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        if (rooms[i0].roomType != RoomType.PublicCourtyard || rooms[i1].roomType != RoomType.PublicCourtyard) {\n            continue;\n        }\n\n        adj.door = true;\n        let group0 = rooms[i0].group;\n        let group1 = rooms[i1].group;\n        joinGroups(rooms, group0, group1);\n    }\n\n    // Connect all the interior rooms with doors.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            if (rooms[i0].roomType != RoomType.PublicRoom || rooms[i1].roomType != RoomType.PublicRoom) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create doors between the interiors and the courtyard areas.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            let room_type0 = rooms[i0].roomType;\n            let room_type1 = rooms[i1].roomType;\n\n            if (room_type0 == room_type1) {\n                continue;\n            }\n\n            if (room_type0 == RoomType.Exterior || room_type1 == RoomType.Exterior) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create the door to the surrounding exterior. It must be on the south side.\n\n    let posStart = vec2.fromValues(0, 0);\n\n    {\n        let i = frontDoorAdjacencyIndex(rooms, adjacencies, edgeSets);\n\n        // Set the player's start position based on where the door is.\n\n        posStart[0] = adjacencies[i].origin[0] + adjacencies[i].dir[0] * Math.floor(adjacencies[i].length / 2);\n        posStart[1] = outerBorder - 1;\n\n        adjacencies[i].door = true;\n\n        // Break symmetry if the door is off center.\n\n        let j = adjacencies[i].next_matching;\n        if (j != i) {\n            adjacencies[j].next_matching = j;\n            adjacencies[i].next_matching = i;\n        }\n    }\n\n    return posStart;\n}\n\nfunction getEdgeSets(adjacencies: Array<Adjacency>): Array<Array<number>> {\n    const edgeSets = [];\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let j = adj.next_matching;\n        if (j >= i) {\n            if (j > i) {\n                edgeSets.push([i, j]);\n            } else {\n                edgeSets.push([i]);\n            }\n        }\n    }\n\n    shuffleArray(edgeSets);\n\n    return edgeSets;\n}\n\nfunction joinGroups(rooms: Array<Room>, groupFrom: number, groupTo: number) {\n    if (groupFrom != groupTo) {\n        for (const room of rooms) {\n            if (room.group == groupFrom) {\n                room.group = groupTo;\n            }\n        }\n    }\n}\n\nfunction frontDoorAdjacencyIndex(rooms: Array<Room>, adjacencies: Array<Adjacency>, edgeSets: Array<Array<number>>): number {\n    for (const edgeSet of edgeSets) {\n        for (const i of edgeSet) {\n            let adj = adjacencies[i];\n\n            if (adj.dir[0] == 0) {\n                continue;\n            }\n\n            if (adj.next_matching > i) {\n                continue;\n            }\n\n            if (adj.next_matching == i) {\n                if (rooms[adj.room_right].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            } else {\n                if (rooms[adj.room_left].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            }\n\n            return i;\n        }\n    }\n\n    // Should always return above...\n\n    return 0;\n}\n\nfunction assignRoomTypes(roomIndex: Int32Grid, adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n\n    // Assign rooms depth based on distance from the bottom row of rooms.\n\n    let unvisited = rooms.length;\n\n    rooms[0].depth = 0;\n\n    for (let i = 1; i < rooms.length; ++i) {\n        rooms[i].depth = unvisited;\n    }\n\n    const roomsToVisit: Array<number> = [];\n\n    for (let x = 0; x < roomIndex.sizeX; ++x) {\n        let iRoom = roomIndex.get(x, 0);\n        rooms[iRoom].depth = 1;\n        roomsToVisit.push(iRoom);\n    }\n\n    // Visit rooms in breadth-first order, assigning them distances from the seed rooms.\n\n    let iiRoom = 0;\n    while (iiRoom < roomsToVisit.length) {\n        let iRoom = roomsToVisit[iiRoom];\n\n        for (const iAdj of rooms[iRoom].edges) {\n            let adj = adjacencies[iAdj];\n\n            if (!adj.door) {\n                continue;\n            }\n\n            const iRoomNeighbor = (adj.room_left == iRoom) ? adj.room_right : adj.room_left;\n\n            if (rooms[iRoomNeighbor].depth == unvisited) {\n                rooms[iRoomNeighbor].depth = rooms[iRoom].depth + 1;\n                roomsToVisit.push(iRoomNeighbor);\n            }\n        }\n\n        iiRoom += 1;\n    }\n\n    // Assign master-suite room type to the inner rooms.\n\n    let maxDepth = 0;\n    for (const room of rooms) {\n        maxDepth = Math.max(maxDepth, room.depth);\n    }\n\n    const targetNumMasterRooms = Math.floor((roomIndex.sizeX * roomIndex.sizeY) / 4);\n\n    let numMasterRooms = 0;\n\n    let depth = maxDepth;\n    while (depth > 0) {\n        for (const room of rooms) {\n            if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            if (room.depth != depth) {\n                continue;\n            }\n\n            room.roomType = (room.roomType == RoomType.PublicRoom) ? RoomType.PrivateRoom : RoomType.PrivateCourtyard;\n            if (room.roomType == RoomType.PrivateRoom) {\n                numMasterRooms += 1;\n            }\n        }\n\n        if (numMasterRooms >= targetNumMasterRooms) {\n            break;\n        }\n\n        depth -= 1;\n    }\n\n    // Change any public courtyards that are adjacent to private courtyards into private courtyards\n\n    while (true) {\n        let changed = false;\n\n        for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n            if (rooms[iRoom].roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            for (const iAdj of rooms[iRoom].edges) {\n                const adj = adjacencies[iAdj];\n\n                let iRoomOther = (adj.room_left != iRoom) ? adj.room_left : adj.room_right;\n\n                if (rooms[iRoomOther].roomType == RoomType.PrivateCourtyard) {\n                    rooms[iRoom].roomType = RoomType.PrivateCourtyard;\n                    changed = true;\n                    break;\n                }\n            }\n        }\n\n        if (!changed) {\n            break;\n        }\n    }\n}\n\nfunction generatePatrolRoutes(map: GameMap, rooms: Array<Room>, adjacencies: Array<Adjacency>) {\n    const includeRoom = Array(rooms.length).fill(true);\n\n    // Exclude exterior rooms.\n\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        if (rooms[iRoom].roomType == RoomType.Exterior) {\n            includeRoom[iRoom] = false;\n        }\n    }\n\n    // Trim dead ends out repeatedly until no more can be trimmed.\n\n    while (true) {\n        let trimmed = false;\n\n        for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n            if (!includeRoom[iRoom]) {\n                continue;\n            }\n\n            const room = rooms[iRoom];\n\n            let numExits = 0;\n            for (const iAdj of room.edges) {\n                const adj = adjacencies[iAdj];\n\n                if (!adj.door) {\n                    continue;\n                }\n\n                let iRoomOther = (adj.room_left != iRoom) ? adj.room_left : adj.room_right;\n\n                if (includeRoom[iRoomOther]) {\n                    numExits += 1;\n                }\n            }\n\n            if (numExits < 2) {\n                includeRoom[iRoom] = false;\n                trimmed = true;\n            }\n        }\n\n        if (!trimmed) {\n            break;\n        }\n    }\n\n    // Generate patrol regions for included rooms.\n\n    const roomPatrolRegion = Array(rooms.length).fill(invalidRegion);\n\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        if (includeRoom[iRoom]) {\n            roomPatrolRegion[iRoom] = addPatrolRegion(map, rooms[iRoom].posMin, rooms[iRoom].posMax);\n        }\n    }\n\n    // Add connections between included rooms.\n\n    for (const adj of adjacencies) {\n        if (!adj.door) {\n            continue;\n        }\n\n        let region0 = roomPatrolRegion[adj.room_left];\n        let region1 = roomPatrolRegion[adj.room_right];\n\n        if (region0 == invalidRegion || region1 == invalidRegion) {\n            continue;\n        }\n\n        addPatrolRoute(map, region0, region1);\n    }\n}\n\nfunction addPatrolRegion(map: GameMap, posMin: vec2, posMax: vec2): number {\n    let iPatrolRegion = map.patrolRegions.length;\n\n    map.patrolRegions.push({ posMin, posMax });\n\n    // Plot the region into the map.\n\n    for (let x = posMin[0]; x < posMax[0]; ++x) {\n        for (let y = posMin[1]; y < posMax[1]; ++y) {\n            map.cells.at(x, y).region = iPatrolRegion;\n        }\n    }\n\n    return iPatrolRegion;\n}\n\nfunction addPatrolRoute(map: GameMap, region0: number, region1: number) {\n    console.assert(region0 < map.patrolRegions.length);\n    console.assert(region1 < map.patrolRegions.length);\n    map.patrolRoutes.push([region0, region1]);\n}\n\nconst oneWayWindowTerrainType: Array<TerrainType> = [\n    TerrainType.OneWayWindowS,\n    TerrainType.OneWayWindowE,\n    TerrainType.OneWayWindowN,\n    TerrainType.OneWayWindowW,\n];\n\nfunction oneWayWindowTerrainTypeFromDir(dir: vec2): number {\n    return oneWayWindowTerrainType[dir[0] + 2 * Math.max(0, dir[1]) + 1];\n}\n\nfunction renderWalls(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Render grass connecting courtyard rooms.\n\n    for (const adj of adjacencies) {\n        const type0 = rooms[adj.room_left].roomType;\n        const type1 = rooms[adj.room_right].roomType;\n\n        if (!isCourtyardRoomType(type0) || !isCourtyardRoomType(type1)) {\n            continue;\n        }\n\n        for (let j = 0; j < adj.length; ++j) {\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, adj.origin, adj.dir, j);\n            map.cells.at(p[0], p[1]).type = TerrainType.GroundGrass;\n        }\n    }\n\n    // Render doors and windows for the rest of the walls.\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj0 = adjacencies[i];\n\n        const type0 = rooms[adj0.room_left].roomType;\n        const type1 = rooms[adj0.room_right].roomType;\n\n        if (isCourtyardRoomType(type0) && isCourtyardRoomType(type1)) {\n            continue;\n        }\n\n        const j = adj0.next_matching;\n\n        if (j < i) {\n            continue;\n        }\n\n        let offset;\n        if (j == i) {\n            offset = Math.floor(adj0.length / 2);\n        } else if (adj0.length > 2) {\n            offset = 1 + randomInRange(adj0.length - 2);\n        } else {\n            offset = randomInRange(adj0.length);\n        }\n\n        let walls = [];\n        walls.push(adj0);\n\n        if (j != i) {\n            walls.push(adjacencies[j]);\n        }\n\n        if (!adj0.door && type0 != type1) {\n            if (type0 == RoomType.Exterior || type1 == RoomType.Exterior) {\n                if ((adj0.length & 1) != 0) {\n                    let k = Math.floor(adj0.length / 2);\n\n                    for (const a of walls) {\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n\n                        let dir = vec2.clone(a.dir);\n                        if (rooms[a.room_right].roomType == RoomType.Exterior) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        map.cells.at(p[0], p[1]).type = oneWayWindowTerrainTypeFromDir(dir);\n                    }\n                }\n            } else if (isCourtyardRoomType(type0) || isCourtyardRoomType(type1)) {\n                let k = randomInRange(2);\n                const k_end = Math.floor((adj0.length + 1) / 2);\n\n                while (k < k_end) {\n                    for (const a of walls) {\n                        let dir = vec2.clone(a.dir);\n                        if (isCourtyardRoomType(rooms[a.room_right].roomType)) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        let windowType = oneWayWindowTerrainTypeFromDir(dir);\n\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n                        const q = vec2.create();\n                        vec2.scaleAndAdd(q, a.origin, a.dir, a.length - (k + 1));\n\n                        map.cells.at(p[0], p[1]).type = windowType;\n                        map.cells.at(q[0], q[1]).type = windowType;\n                    }\n                    k += 2;\n                }\n            }\n        }\n\n        let installMasterSuiteDoor = Math.random() < 0.3333;\n\n        for (const a of walls) {\n            if (!a.door) {\n                continue;\n            }\n\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, a.origin, a.dir, offset);\n\n            let orientNS = (a.dir[0] == 0);\n\n            map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n\n            let roomTypeLeft = rooms[a.room_left].roomType;\n            let roomTypeRight = rooms[a.room_right].roomType;\n\n            if (roomTypeLeft == RoomType.Exterior || roomTypeRight == RoomType.Exterior) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.PortcullisNS : TerrainType.PortcullisEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.PortcullisNS : ItemType.PortcullisEW);\n            } else if (roomTypeLeft != RoomType.PrivateRoom || roomTypeRight != RoomType.PrivateRoom || installMasterSuiteDoor) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.DoorNS : ItemType.DoorEW);\n            }\n        }\n    }\n}\n\nfunction renderRooms(level: number, rooms: Array<Room>, map: GameMap) {\n    for (let iRoom = 1; iRoom < rooms.length; ++iRoom) {\n        const room = rooms[iRoom];\n\n        let cellType;\n        switch (room.roomType) {\n        case RoomType.Exterior: cellType = TerrainType.GroundNormal; break;\n        case RoomType.PublicCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PublicRoom: cellType = TerrainType.GroundWood; break;\n        case RoomType.PrivateCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PrivateRoom: cellType = TerrainType.GroundMarble; break;\n        }\n\n        for (let x = room.posMin[0]; x < room.posMax[0]; ++x) {\n            for (let y = room.posMin[1]; y < room.posMax[1]; ++y) {\n                map.cells.at(x, y).type = cellType;\n            }\n        }\n\n        let dx = room.posMax[0] - room.posMin[0];\n        let dy = room.posMax[1] - room.posMin[1];\n\n        if (isCourtyardRoomType(room.roomType)) {\n            if (dx >= 5 && dy >= 5) {\n                for (let x = room.posMin[0] + 1; x < room.posMax[0] - 1; ++x) {\n                    for (let y = room.posMin[1] + 1; y < room.posMax[1] - 1; ++y) {\n                        map.cells.at(x, y).type = TerrainType.GroundWater;\n                    }\n                }\n            } else if (dx >= 2 && dy >= 2) {\n                tryPlaceBush(map, room.posMin[0], room.posMin[1]);\n                tryPlaceBush(map, room.posMax[0] - 1, room.posMin[1]);\n                tryPlaceBush(map, room.posMin[0], room.posMax[1] - 1);\n                tryPlaceBush(map, room.posMax[0] - 1, room.posMax[1] - 1);\n            }\n        } else if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            if (dx >= 5 && dy >= 5) {\n                if (room.roomType == RoomType.PrivateRoom) {\n                    for (let x = 2; x < dx-2; ++x) {\n                        for (let y = 2; y < dy-2; ++y) {\n                            map.cells.at(room.posMin[0] + x, room.posMin[1] + y).type = TerrainType.GroundWater;\n                        }\n                    }\n                }\n\n                map.cells.at(room.posMin[0] + 1, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMin[0] + 1, room.posMax[1] - 2).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMax[1] - 2).type = TerrainType.Wall0000;\n            } else if (dx == 5 && dy >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                for (let y = 1; y < dy-1; ++y) {\n                    placeItem(map, room.posMin[0] + 1, room.posMin[1] + y, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + 2, room.posMin[1] + y, ItemType.Table);\n                    placeItem(map, room.posMin[0] + 3, room.posMin[1] + y, ItemType.Chair);\n                }\n            } else if (dy == 5 && dx >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                for (let x = 1; x < dx-1; ++x) {\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 1, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 2, ItemType.Table);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 3, ItemType.Chair);\n                }\n            } else if (dx > dy && (dy & 1) == 1 && Math.random() < 0.66667) {\n                let y = Math.floor(room.posMin[1] + dy / 2);\n\n                if (room.roomType == RoomType.PublicRoom) {\n                    tryPlaceTable(map, room.posMin[0] + 1, y);\n                    tryPlaceTable(map, room.posMax[0] - 2, y);\n                } else {\n                    tryPlaceChair(map, room.posMin[0] + 1, y);\n                    tryPlaceChair(map, room.posMax[0] - 2, y);\n                }\n            } else if (dy > dx && (dx & 1) == 1 && Math.random() < 0.66667) {\n                let x = Math.floor(room.posMin[0] + dx / 2);\n\n                if (room.roomType == RoomType.PublicRoom) {\n                    tryPlaceTable(map, x, room.posMin[1] + 1);\n                    tryPlaceTable(map, x, room.posMax[1] - 2);\n                } else {\n                    tryPlaceChair(map, x, room.posMin[1] + 1);\n                    tryPlaceChair(map, x, room.posMax[1] - 2);\n                }\n            } else if (dx > 3 && dy > 3) {\n                if (room.roomType == RoomType.PublicRoom) {\n                    tryPlaceTable(map, room.posMin[0], room.posMin[1]);\n                    tryPlaceTable(map, room.posMax[0] - 1, room.posMin[1]);\n                    tryPlaceTable(map, room.posMin[0], room.posMax[1] - 1);\n                    tryPlaceTable(map, room.posMax[0] - 1, room.posMax[1] - 1);\n                } else {\n                    tryPlaceChair(map, room.posMin[0], room.posMin[1]);\n                    tryPlaceChair(map, room.posMax[0] - 1, room.posMin[1]);\n                    tryPlaceChair(map, room.posMin[0], room.posMax[1] - 1);\n                    tryPlaceChair(map, room.posMax[0] - 1, room.posMax[1] - 1);\n                }\n            }\n        }\n    }\n}\n\nfunction tryPlaceBush(map: GameMap, x: number, y: number) {\n    if (map.cells.at(x, y).type != TerrainType.GroundGrass) {\n        return;\n    }\n\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, ItemType.Bush);\n}\n\nfunction tryPlaceTable(map: GameMap, x: number, y: number) {\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, ItemType.Table);\n}\n\nfunction tryPlaceChair(map: GameMap, x: number, y: number) {\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, ItemType.Chair);\n}\n\nfunction doorAdjacent(map: CellGrid, x: number, y: number): boolean {\n    if (map.at(x - 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x + 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y - 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y + 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction placeItem(map: GameMap, x: number, y: number, type: ItemType) {\n    map.items.push({\n        pos: vec2.fromValues(x, y),\n        type: type,\n    });\n}\n\nfunction placeLoot(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Count number of internal rooms.\n\n    let numRooms = 0;\n    for (const room of rooms) {\n        if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            numRooms += 1;\n        }\n    }\n\n    // Master-suite rooms get loot.\n\n    for (const room of rooms)  {\n        if (room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        if (Math.random() < 0.2) {\n            continue;\n        }\n\n        tryPlaceLoot(room.posMin, room.posMax, map);\n    }\n\n    // Dead-end rooms automatically get loot.\n\n    for (const room of rooms) {\n        if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        let numExits = 0;\n        for (const iAdj of room.edges) {\n            if (adjacencies[iAdj].door) {\n                numExits += 1;\n            }\n        }\n\n        if (numExits < 2) {\n            tryPlaceLoot(room.posMin, room.posMax, map);\n        }\n    }\n\n    // Place a bit of extra loot.\n\n    let posMin = vec2.fromValues(0, 0);\n    let posMax = vec2.fromValues(map.cells.sizeX, map.cells.sizeY);\n    for (let i = Math.floor(numRooms / 4 + randomInRange(4)); i > 0; --i) {\n        tryPlaceLoot(posMin, posMax, map);\n    }\n}\n\nfunction tryPlaceLoot(posMin: vec2, posMax: vec2, map: GameMap)\n{\n    let dx = posMax[0] - posMin[0];\n    let dy = posMax[1] - posMin[1];\n\n    for (let i = 1000; i > 0; --i) {\n        let pos = vec2.fromValues(posMin[0] + randomInRange(dx), posMin[1] + randomInRange(dy));\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        placeItem(map, pos[0], pos[1], ItemType.Coin);\n        break;\n    }\n}\n\nfunction placeExteriorBushes(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = sy - outerBorder + 1; y < sy; ++y) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if ((x & 1) == 0 && Math.random() < 0.8) {\n            placeItem(map, x, sy - 1, ItemType.Bush);\n        }\n    }\n\n    for (let y = outerBorder; y < sy - outerBorder + 1; ++y) {\n        for (let x = 0; x < outerBorder-1; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        for (let x = (sx - outerBorder + 1); x < sx; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if (((sy - y) & 1) != 0) {\n            if (Math.random() < 0.8) {\n                placeItem(map, 0, y, ItemType.Bush);\n            }\n            if (Math.random() < 0.8) {\n                placeItem(map, sx - 1, y, ItemType.Bush);\n            }\n        }\n    }\n}\n\nfunction placeFrontPillars(map: GameMap) {\n    let sx = map.cells.sizeX - 1;\n    let cx = Math.floor(map.cells.sizeX / 2);\n\n    for (let x = outerBorder; x < cx; x += 5) {\n        map.cells.at(x, 1).type = TerrainType.Wall0000;\n        map.cells.at(sx - x, 1).type = TerrainType.Wall0000;\n        map.cells.at(x, 1).lit = true;\n        map.cells.at(sx - x, 1).lit = true;\n    }\n}\n\nfunction isItemAtPos(map: GameMap, x: number, y: number): boolean {\n    for (const item of map.items) {\n        if (item.pos[0] == x && item.pos[1] == y) {\n            return true;\n        }\n    }\n    for (const guard of map.guards) {\n        if (guard.pos[0] == x && guard.pos[1] == y) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction isCourtyardRoomType(roomType: RoomType): boolean {\n    switch (roomType) {\n    case RoomType.Exterior: return false;\n    case RoomType.PublicCourtyard: return true;\n    case RoomType.PublicRoom: return false;\n    case RoomType.PrivateCourtyard: return true;\n    case RoomType.PrivateRoom: return false;\n    }\n}\n\nfunction placeGuards(level: number, rooms: Array<Room>, map: GameMap) {\n    if (level <= 0) {\n        return;\n    }\n\n    // Count number of internal rooms.\n\n    let numRooms = 0;\n    for (const room of rooms) {\n        if (room.roomType != RoomType.Exterior) {\n            numRooms += 1;\n        }\n    }\n\n    // Generate guards\n\n    let numGuards = (level == 1) ? 1 : Math.max(2, Math.floor((numRooms * Math.min(level + 18, 40)) / 100));\n\n    while (numGuards > 0) {\n        const pos = generateInitialGuardPos(map);\n        if (pos === undefined) {\n            break;\n        }\n        map.guards.push(new Guard(pos, map));\n        numGuards -= 1;\n    }\n}\n\nfunction generateInitialGuardPos(map: GameMap): vec2 | undefined {\n    let sizeX = map.cells.sizeX;\n    let sizeY = map.cells.sizeY;\n    for (let i = 0; i < 1000; ++i) {\n        let pos = vec2.fromValues(randomInRange(sizeX), randomInRange(sizeY));\n\n        if (vec2.squaredDistance(map.playerStartPos, pos) < 64) {\n            continue;\n        }\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        return pos;\n    }\n\n    return undefined;\n}\n\nfunction markExteriorAsSeen(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            if (map.cells.at(x, y).type == TerrainType.GroundNormal ||\n                (x > 0 && map.cells.at(x-1, y).type == TerrainType.GroundNormal) ||\n                (x > 0 && y > 0 && map.cells.at(x-1, y-1).type == TerrainType.GroundNormal) ||\n                (x > 0 && y+1 < sy && map.cells.at(x-1, y+1).type == TerrainType.GroundNormal) ||\n                (y > 0 && map.cells.at(x, y-1).type == TerrainType.GroundNormal) ||\n                (y+1 < sy && map.cells.at(x, y+1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && map.cells.at(x+1, y).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y > 0 && map.cells.at(x+1, y-1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y+1 < sy && map.cells.at(x+1, y+1).type == TerrainType.GroundNormal)) {\n                map.cells.at(x, y).seen = true;\n            }\n        }\n    }\n}\n\nfunction cacheCellInfo(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            const cell = map.cells.at(x, y);\n            const cellType = cell.type;\n            const isWall = cellType >= TerrainType.Wall0000 && cellType <= TerrainType.Wall1111;\n            const isWindow = cellType >= TerrainType.OneWayWindowE && cellType <= TerrainType.OneWayWindowS;\n            const isWater = cellType == TerrainType.GroundWater;\n            cell.moveCost = (isWall || isWindow) ? Infinity : isWater ? 4096 : 0;\n            cell.blocksPlayerMove = isWall;\n            cell.blocksPlayerSight = isWall;\n            cell.blocksSight = isWall || isWindow;\n            cell.blocksSound = isWall;\n            cell.hidesPlayer = false;\n        }\n    }\n\n    for (const item of map.items) {\n        let cell = map.cells.at(item.pos[0], item.pos[1]);\n        let itemType = item.type;\n        cell.moveCost = Math.max(cell.moveCost, guardMoveCostForItemType(itemType));\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW) {\n            cell.blocksPlayerSight = true;\n        }\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW || itemType == ItemType.PortcullisNS || itemType == ItemType.PortcullisEW || itemType == ItemType.Bush) {\n            cell.blocksSight = true;\n        }\n        if (itemType == ItemType.Table || itemType == ItemType.Bush) {\n            cell.hidesPlayer = true;\n        }\n    }\n}\n\nfunction fixupWalls(map: CellGrid) {\n    for (let x = 0; x < map.sizeX; ++x) {\n        for (let y = 0; y < map.sizeY; ++y) {\n            const terrainType = map.at(x, y).type;\n            if (terrainType == TerrainType.Wall0000) {\n                map.at(x, y).type = wallTypeFromNeighbors(neighboringWalls(map, x, y));\n            }\n        }\n    }\n}\n\nfunction wallTypeFromNeighbors(neighbors: number): TerrainType {\n    return TerrainType.Wall0000 + neighbors;\n}\n\nfunction isWall(terrainType: TerrainType): boolean {\n    return terrainType >= TerrainType.Wall0000;\n}\n\nfunction neighboringWalls(map: CellGrid, x: number, y: number): number {\n    const sizeX = map.sizeX;\n    const sizeY = map.sizeY;\n    let wallBits = 0;\n\n    if (y < sizeY-1 && isWall(map.at(x, y+1).type)) {\n        wallBits |= 8;\n    }\n    if (y > 0 && isWall(map.at(x, y-1).type)) {\n        wallBits |= 4;\n    }\n    if (x < sizeX-1 && isWall(map.at(x+1, y).type)) {\n        wallBits |= 2;\n    }\n    if (x > 0 && isWall(map.at(x-1, y).type)) {\n        wallBits |= 1;\n    }\n\n    return wallBits\n}\n","export { RenderGlyphs, Renderer, createRenderer };\n\nimport { vec2, mat4 } from './my-matrix';\n\ntype RenderGlyphs = {\n    start: (matScreenFromWorld: mat4, textureIndex: number) => void;\n    addGlyph: (x0: number, y0: number, x1: number, y1: number, glyphIndex: number, color: number) => void;\n    flush: () => void;\n}\n\ntype BeginFrame = (screenSize: vec2) => void;\n\ntype Renderer = {\n    beginFrame: BeginFrame;\n    renderGlyphs: RenderGlyphs;\n}\n\nfunction createRenderer(gl: WebGL2RenderingContext, images: Array<HTMLImageElement>): Renderer {\n    const textures = images.map((image) => createTextureFromImage(gl, image));\n\n    const renderer = {\n        beginFrame: createBeginFrame(gl),\n        renderGlyphs: createGlyphRenderer(gl, textures),\n    };\n\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.enable(gl.BLEND);\n    gl.clearColor(0, 0, 0, 1);\n\n    return renderer;\n}\n\nfunction createBeginFrame(gl: WebGL2RenderingContext): BeginFrame {\n    return (screenSize) => {\n        const canvas = gl.canvas as HTMLCanvasElement;\n\n        resizeCanvasToDisplaySize(canvas);\n\n        const screenX = canvas.clientWidth;\n        const screenY = canvas.clientHeight;\n    \n        gl.viewport(0, 0, screenX, screenY);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        vec2.set(screenSize, screenX, screenY);\n    }\n}\n\nfunction createGlyphRenderer(gl: WebGL2RenderingContext, textures: Array<WebGLTexture>): RenderGlyphs {\n    const vsSource = `#version 300 es\n        in vec2 vPosition;\n        in vec3 vTexcoord;\n        in vec4 vColor;\n\n        uniform mat4 uMatScreenFromWorld;\n\n        out highp vec3 fTexcoord;\n        out highp vec4 fColor;\n\n        void main() {\n            fTexcoord = vTexcoord;\n            fColor = vColor;\n            gl_Position = uMatScreenFromWorld * vec4(vPosition, 0, 1);\n        }\n    `;\n\n    const fsSource = `#version 300 es\n        in highp vec3 fTexcoord;\n        in highp vec4 fColor;\n\n        uniform highp sampler2DArray uOpacity;\n\n        out lowp vec4 fragColor;\n\n        void main() {\n            fragColor = fColor * texture(uOpacity, fTexcoord);\n        }\n    `;\n\n    const attribs = {\n        vPosition: 0,\n        vTexcoord: 1,\n        vColor: 2,\n    };\n\n    const program = initShaderProgram(gl, vsSource, fsSource, attribs);\n\n    const uProjectionMatrixLoc = gl.getUniformLocation(program, 'uMatScreenFromWorld');\n    const uOpacityLoc = gl.getUniformLocation(program, 'uOpacity');\n\n    const maxQuads = 64;\n    const numVertices = 4 * maxQuads;\n    const bytesPerVertex = 2 * Float32Array.BYTES_PER_ELEMENT + 2 * Uint32Array.BYTES_PER_ELEMENT;\n    const wordsPerQuad = bytesPerVertex; // divide by four bytes per word, but also multiply by four vertices per quad\n\n    const vertexData = new ArrayBuffer(numVertices * bytesPerVertex);\n    const vertexDataAsFloat32 = new Float32Array(vertexData);\n    const vertexDataAsUint32 = new Uint32Array(vertexData);\n\n    const vertexBuffer = gl.createBuffer();\n\n    let numQuads = 0;\n\n    const matScreenFromWorldCached = mat4.create();\n\n    const vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    gl.enableVertexAttribArray(attribs.vPosition);\n    gl.enableVertexAttribArray(attribs.vTexcoord);\n    gl.enableVertexAttribArray(attribs.vColor);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attribs.vPosition, 2, gl.FLOAT, false, bytesPerVertex, 0);\n    gl.vertexAttribPointer(attribs.vTexcoord, 3, gl.UNSIGNED_BYTE, false, bytesPerVertex, 8);\n    gl.vertexAttribPointer(attribs.vColor, 4, gl.UNSIGNED_BYTE, true, bytesPerVertex, 12);\n    gl.bufferData(gl.ARRAY_BUFFER, vertexData, gl.DYNAMIC_DRAW);\n    const indexBuffer = createGlyphIndexBuffer(gl, maxQuads);\n    gl.bindVertexArray(null);\n\n    function start(matScreenFromWorld: mat4, textureIndex: number) {\n        mat4.copy(matScreenFromWorldCached, matScreenFromWorld);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, textures[textureIndex]);\n    }\n\n    function addGlyph(x0: number, y0: number, x1: number, y1: number, glyphIndex: number, color: number) {\n        if (numQuads >= maxQuads) {\n            flushQuads();\n        }\n\n        const i = numQuads * wordsPerQuad;\n        const srcBase = glyphIndex << 16;\n\n        vertexDataAsFloat32[i+0] = x0;\n        vertexDataAsFloat32[i+1] = y0;\n        vertexDataAsUint32[i+2] = srcBase + 256;\n        vertexDataAsUint32[i+3] = color;\n\n        vertexDataAsFloat32[i+4] = x1;\n        vertexDataAsFloat32[i+5] = y0;\n        vertexDataAsUint32[i+6] = srcBase + 257;\n        vertexDataAsUint32[i+7] = color;\n\n        vertexDataAsFloat32[i+8] = x0;\n        vertexDataAsFloat32[i+9] = y1;\n        vertexDataAsUint32[i+10] = srcBase;\n        vertexDataAsUint32[i+11] = color;\n\n        vertexDataAsFloat32[i+12] = x1;\n        vertexDataAsFloat32[i+13] = y1;\n        vertexDataAsUint32[i+14] = srcBase + 1;\n        vertexDataAsUint32[i+15] = color;\n\n        ++numQuads;\n    }\n\n    function flushQuads() {\n        if (numQuads <= 0) {\n            return;\n        }\n\n        gl.useProgram(program);\n\n        gl.bindVertexArray(vao);\n\n        gl.uniform1i(uOpacityLoc, 0);\n\n        gl.uniformMatrix4fv(uProjectionMatrixLoc, false, matScreenFromWorldCached);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertexDataAsFloat32, 0);\n\n        gl.drawElements(gl.TRIANGLES, 6 * numQuads, gl.UNSIGNED_SHORT, 0);\n\n        gl.bindVertexArray(null);\n\n        numQuads = 0;\n    }\n\n    return {\n        start: start,\n        addGlyph: addGlyph,\n        flush: flushQuads,\n    };\n}\n\nfunction createGlyphIndexBuffer(gl: WebGL2RenderingContext, maxQuads: number): WebGLBuffer {\n    const indices = new Uint16Array(maxQuads * 6);\n\n    for (let i = 0; i < maxQuads; ++i) {\n        let j = 6*i;\n        let k = 4*i;\n        indices[j+0] = k+0;\n        indices[j+1] = k+1;\n        indices[j+2] = k+2;\n        indices[j+3] = k+2;\n        indices[j+4] = k+1;\n        indices[j+5] = k+3;\n    }\n\n    const indexBuffer = gl.createBuffer()!;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n    return indexBuffer;\n}\n\nfunction createTextureFromImage(gl: WebGL2RenderingContext, image: HTMLImageElement): WebGLTexture {\n    const numGlyphsX = 16;\n    const numGlyphsY = 16;\n    const numGlyphs = numGlyphsX * numGlyphsY;\n    const srcGlyphSizeX = image.naturalWidth / numGlyphsX;\n    const srcGlyphSizeY = image.naturalHeight / numGlyphsY;\n    const scaleFactor = 4;\n    const dstGlyphSizeX = srcGlyphSizeX * scaleFactor;\n    const dstGlyphSizeY = srcGlyphSizeY * scaleFactor;\n\n    // Rearrange the glyph data from a grid to a vertical array\n\n    const canvas = document.createElement('canvas');\n    canvas.width = dstGlyphSizeX;\n    canvas.height = dstGlyphSizeY * numGlyphs;\n    const ctx = canvas.getContext('2d')!;\n    ctx.imageSmoothingEnabled = false;\n    for (let y = 0; y < numGlyphsY; ++y) {\n        for (let x = 0; x < numGlyphsX; ++x) {\n            const sx = x * srcGlyphSizeX;\n            const sy = y * srcGlyphSizeY;\n            const dx = 0;\n            const dy = (numGlyphsX * y + x) * dstGlyphSizeY;\n            ctx.drawImage(image, sx, sy, srcGlyphSizeX, srcGlyphSizeY, dx, dy, dstGlyphSizeX, dstGlyphSizeY);\n        }\n    }\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const pixels = new Uint8Array(imageData.data.buffer);\n\n    const texture = gl.createTexture()!;\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, dstGlyphSizeX, dstGlyphSizeY, numGlyphs, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    gl.generateMipmap(gl.TEXTURE_2D_ARRAY);\n    return texture;\n}\n\nfunction loadShader(gl: WebGL2RenderingContext, type: number, source: string): WebGLShader {\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n    }\n\n    return shader;\n}\n\nfunction initShaderProgram(gl: WebGL2RenderingContext, vsSource: string, fsSource: string, attribs: Record<string, number>): WebGLProgram {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n    const program = gl.createProgram()!;\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n\n    for (const attrib in attribs) {\n        gl.bindAttribLocation(program, attribs[attrib], attrib);\n    }\n\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(program))!;\n    }\n\n    return program;\n}\n\nfunction resizeCanvasToDisplaySize(canvas: HTMLCanvasElement) {\n    const parentElement = canvas.parentNode as HTMLElement;\n    const rect = parentElement.getBoundingClientRect();\n    if (canvas.width !== rect.width || canvas.height !== rect.height) {\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n    }\n}\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"757gI\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fI7s2\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"64MsM\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fe6XQ\")).toString();","import {Howl} from 'howler';\n\nvar footstepWood = require('url:./sounds/footstep-wood.ogg');\nvar footstepTile = require('url:./sounds/footstep-tile.ogg');\nvar footstepWater = require('url:./sounds/footstep-water.ogg');\nvar footstepGravel = require('url:./sounds/footstep-gravel.ogg');\nvar footstepGrass = require('url:./sounds/footstep-grass.ogg');\n\nexport type Howls = { [id:string]: Howl };\n\nexport function setupSounds(sounds:Howls) {\n    sounds.footstepWood = new Howl({src: [footstepWood]})\n    sounds.footstepTile = new Howl({src: [footstepTile]})\n    sounds.footstepWater = new Howl({src: [footstepWater]})\n    sounds.footstepGravel = new Howl({src: [footstepGravel]})\n    sounds.footstepGrass = new Howl({src: [footstepGrass]})\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kPzFJ\")).toString();","export const black: number = 0xff000000;\nexport const darkBlue: number = 0xffa80000;\nexport const darkGreen: number = 0xff00a800;\nexport const darkCyan: number = 0xffa8a800;\nexport const darkRed: number = 0xff0000a8;\nexport const darkMagenta: number = 0xffa800a8;\nexport const darkBrown: number = 0xff0054a8;\nexport const lightGray: number = 0xffa8a8a8;\nexport const darkGray: number = 0xff545454;\nexport const lightBlue: number = 0xfffe5454;\nexport const lightGreen: number = 0xff54fe54;\nexport const lightCyan: number = 0xfffefe54;\nexport const lightRed: number = 0xff5454fe;\nexport const lightMagenta: number = 0xfffe54fe;\nexport const lightYellow: number = 0xff54fefe;\nexport const white: number = 0xfffefefe;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8FZzo\")).toString();","import { vec2, mat4 } from './my-matrix';\nimport { createGameMap } from './create-map';\nimport { GameMap, Player, TerrainType } from './game-map';\nimport { GuardMode, guardActAll } from './guard';\nimport { Renderer, createRenderer } from './render';\nimport { setupSounds, Howls } from './audio';\nimport * as colorPreset from './color-preset';\n\nvar fontImageRequire = require('./font.png');\nvar tilesImageRequire = require('./tiles.png');\n\nwindow.onload = loadResourcesThenRun;\n\ntype Camera = {\n    position: vec2;\n    velocity: vec2;\n}\n\ntype State = {\n    tLast: number | undefined;\n    shiftModifierActive: boolean;\n    shiftUpLastTimeStamp: number;\n    player: Player;\n    finishedLevel: boolean;\n    seeAll : boolean;\n    camera: Camera;\n    level: number;\n    gameMap: GameMap;\n    sounds: Howls;\n}\n\nfunction loadResourcesThenRun() {\n    Promise.all([\n        loadImage(fontImageRequire),\n        loadImage(tilesImageRequire),\n    ]).then(main);\n}\n\nfunction main(images: Array<HTMLImageElement>) {\n\n    const canvas = document.querySelector(\"#canvas\") as HTMLCanvasElement;\n    const gl = canvas.getContext(\"webgl2\", { alpha: false, depth: false }) as WebGL2RenderingContext;\n\n    if (gl == null) {\n        alert(\"Unable to initialize WebGL2. Your browser or machine may not support it.\");\n        return;\n    }\n\n    const renderer = createRenderer(gl, images);\n    const sounds:Howls = {};\n    const state = initState(sounds);\n\n    document.body.addEventListener('keydown', onKeyDown);\n    document.body.addEventListener('keyup', onKeyUp);\n\n    function onKeyDown(e: KeyboardEvent) {\n        if (Object.keys(state.sounds).length==0) setupSounds(state.sounds);\n        if (e.code == 'KeyF' || e.code == 'NumpadAdd') {\n            state.shiftModifierActive = true;\n            return;\n        }\n\n        if (e.code == 'KeyR') {\n            e.preventDefault();\n            resetState(state);\n        } else if (e.code == 'KeyA') {\n            e.preventDefault();\n            if (e.ctrlKey) {\n                state.seeAll = !state.seeAll;\n            } else {\n                const speed = (state.shiftModifierActive || e.shiftKey || (e.timeStamp - state.shiftUpLastTimeStamp) < 1.0) ? 2 : 1;\n                tryMovePlayer(state, -speed, 0);\n            }\n        } else {\n            const speed = (state.shiftModifierActive || e.shiftKey || (e.timeStamp - state.shiftUpLastTimeStamp) < 1.0) ? 2 : 1;\n            if (e.code == 'ArrowLeft' || e.code == 'Numpad4' || e.code == 'KeyA' || e.code == 'KeyH') {\n                e.preventDefault();\n                tryMovePlayer(state, -speed, 0);\n            } else if (e.code == 'ArrowRight' || e.code == 'Numpad6' || e.code == 'KeyD' || e.code == 'KeyL') {\n                e.preventDefault();\n                tryMovePlayer(state, speed, 0);\n            } else if (e.code == 'ArrowDown' || e.code == 'Numpad2' || e.code == 'KeyS' || e.code == 'KeyJ') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, -speed);\n            } else if (e.code == 'ArrowUp' || e.code == 'Numpad8' || e.code == 'KeyW' || e.code == 'KeyK') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, speed);\n            } else if (e.code == 'Period' || e.code == 'Numpad5') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, 0);\n            }\n        }\n\n        state.shiftModifierActive = false;\n    }\n\n    function onKeyUp(e: KeyboardEvent) {\n        if (e.code == 'ShiftLeft' || e.code == 'ShiftRight') {\n            state.shiftUpLastTimeStamp = e.timeStamp;\n        }\n    }\n\n    function requestUpdateAndRender() {\n        requestAnimationFrame(now => updateAndRender(now, renderer, state));\n    }\n\n    function onWindowResized() {\n        requestUpdateAndRender();\n    }\n\n    window.addEventListener('resize', onWindowResized);\n\n    requestUpdateAndRender();\n}\n\nfunction advanceToNextLevel(state: State) {\n    state.level += 1;\n    state.gameMap = createGameMap(state.level);\n    state.finishedLevel = false;\n\n    state.player.pos = state.gameMap.playerStartPos;\n    state.player.dir = vec2.fromValues(0, -1);\n    state.player.gold = 0;\n    state.player.noisy = false;\n    state.player.damagedLastTurn = false;\n    state.player.turnsRemainingUnderwater = 0;\n\n    state.camera = createCamera(state.gameMap.playerStartPos);\n\n    updateMapVisibility(state.gameMap, state.player.pos);\n}\n\nfunction tryMovePlayer(state: State, dx: number, dy: number) {\n\n    const player = state.player;\n\n    // Can't move if you're dead.\n\n    if (player.health == 0) {\n        return;\n    }\n\n    // Are we trying to exit the level?\n\n    const posNew = vec2.fromValues(player.pos[0] + dx, player.pos[1] + dy);\n    if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= state.gameMap.cells.sizeX || posNew[1] >= state.gameMap.cells.sizeY) {\n        if (state.gameMap.allSeen() && state.gameMap.allLootCollected()) {\n            advanceToNextLevel(state);\n        }\n        return;\n    }\n\n    // Is something in the way?\n\n    if (blocked(state.gameMap, player.pos, posNew)) {\n        return;\n    }\n\n    preTurn(state);\n\n    player.pos = posNew;\n    player.gold += state.gameMap.collectLootAt(player.pos[0], player.pos[1]);\n\n    // Generate movement noises.\n\n    let cellType = state.gameMap.cells.at(player.pos[0], player.pos[1]).type;\n\n    if ((dx != 0 || dy != 0) && cellType == TerrainType.GroundWoodCreaky) {\n        /* TODO\n        make_noise(state.gameMap, player, state.gameMap.popups, \"\\u{ab}creak\\u{bb}\");\n        */\n    }\n\n    advanceTime(state);\n\n    switch(state.gameMap.cells.at(...posNew).type) {\n        case TerrainType.GroundWood:\n            state.sounds[\"footstepWood\"].volume(0.15);\n            state.sounds[\"footstepWood\"].play();\n            break;\n        case TerrainType.GroundNormal:\n            state.sounds[\"footstepGravel\"].volume(0.03);\n            state.sounds[\"footstepGravel\"].play();\n            break;\n        case TerrainType.GroundGrass:\n            state.sounds[\"footstepGrass\"].volume(0.05);\n            state.sounds[\"footstepGrass\"].play();\n            break;\n        case TerrainType.GroundWater:\n            state.sounds[\"footstepWater\"].volume(0.05);\n            state.sounds[\"footstepWater\"].play();\n            break;\n        case TerrainType.GroundMarble:\n            state.sounds[\"footstepTile\"].volume(0.05);\n            state.sounds[\"footstepTile\"].play();\n            break;\n        default:\n            state.sounds[\"footstepTile\"].volume(0.02);\n            state.sounds[\"footstepTile\"].play();\n            break;\n        }\n\n}\n\nfunction preTurn(state: State) {\n    /* TODO\n    state.show_msgs = true;\n    state.popups.clear();\n    */\n    state.player.noisy = false;\n    state.player.damagedLastTurn = false;\n}\n\nfunction advanceTime(state: State) {\n    if (state.gameMap.cells.at(state.player.pos[0], state.player.pos[1]).type == TerrainType.GroundWater) {\n        if (state.player.turnsRemainingUnderwater > 0) {\n            --state.player.turnsRemainingUnderwater;\n        }\n    } else {\n        state.player.turnsRemainingUnderwater = 7;\n    }\n\n    guardActAll(state.seeAll, /* state.popups, state.lines, */ state.gameMap, state.player);\n\n    updateMapVisibility(state.gameMap, state.player.pos);\n\n    if (state.gameMap.allSeen() && state.gameMap.allLootCollected()) {\n        state.finishedLevel = true;\n    }\n}\n\nconst cardinalDirections: Array<vec2> = [\n    vec2.fromValues(-1, 0),\n    vec2.fromValues(1, 0),\n    vec2.fromValues(0, -1),\n    vec2.fromValues(0, 1),\n];\n\nfunction updateMapVisibility(map: GameMap, pos_viewer: vec2) {\n    map.recomputeVisibility(pos_viewer);\n\n    for (const dir of cardinalDirections) {\n        if (map.playerCanSeeInDirection(pos_viewer, dir)) {\n            const pos = vec2.create();\n            vec2.add(pos, pos_viewer, dir);\n            map.recomputeVisibility(pos);\n        }\n    }\n}\n\nfunction blocked(map: GameMap, posOld: vec2, posNew: vec2): boolean {\n    if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= map.cells.sizeX || posNew[1] >= map.cells.sizeY) {\n        return true;\n    }\n\n    if (posOld[0] == posNew[0] && posOld[1] == posNew[1]) {\n        return false;\n    }\n\n    const cell = map.cells.at(posNew[0], posNew[1]);\n    const tileType = cell.type;\n\n    if (cell.blocksPlayerMove) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowE && posNew[0] <= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowW && posNew[0] >= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowN && posNew[1] <= posOld[1]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowS && posNew[1] >= posOld[1]) {\n        return true;\n    }\n\n    if (map.guards.find((guard) => guard.pos[0] == posNew[0] && guard.pos[1] == posNew[1]) !== undefined) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction loadImage(src: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.src = src;\n    });\n}\n\nconst tileIndexForTerrainType: Array<number> = [\n    112, // TerrainType.GroundNormal,\n    116, // TerrainType.GroundGrass,\n    118, // TerrainType.GroundWater,\n    120, // TerrainType.GroundMarble,\n    122, // TerrainType.GroundWood,\n    122, // TerrainType.GroundWoodCreaky,\n    64, // TerrainType.Wall0000,\n    65, // TerrainType.Wall0001,\n    65, // TerrainType.Wall0010,\n    65, // TerrainType.Wall0011,\n    66, // TerrainType.Wall0100,\n    67, // TerrainType.Wall0101,\n    70, // TerrainType.Wall0110,\n    73, // TerrainType.Wall0111,\n    66, // TerrainType.Wall1000,\n    68, // TerrainType.Wall1001,\n    69, // TerrainType.Wall1010,\n    72, // TerrainType.Wall1011,\n    66, // TerrainType.Wall1100,\n    74, // TerrainType.Wall1101,\n    71, // TerrainType.Wall1110,\n    75, // TerrainType.Wall1111,\n    52, // TerrainType.OneWayWindowE,\n    53, // TerrainType.OneWayWindowW,\n    54, // TerrainType.OneWayWindowN,\n    55, // TerrainType.OneWayWindowS,\n    50, // TerrainType.PortcullisNS,\n    50, // TerrainType.PortcullisEW,\n    77, // TerrainType.DoorNS,\n    76, // TerrainType.DoorEW,\n];\n\nconst colorForTerrainType: Array<number> = [\n    colorPreset.lightGray, // TerrainType.GroundNormal,\n    colorPreset.darkGreen, // TerrainType.GroundGrass,\n    colorPreset.lightBlue, // TerrainType.GroundWater,\n    colorPreset.darkCyan, // TerrainType.GroundMarble,\n    colorPreset.darkBrown, // TerrainType.GroundWood,\n    colorPreset.darkBrown, // TerrainType.GroundWoodCreaky,\n    colorPreset.lightGray, // TerrainType.Wall0000,\n    colorPreset.lightGray, // TerrainType.Wall0001,\n    colorPreset.lightGray, // TerrainType.Wall0010,\n    colorPreset.lightGray, // TerrainType.Wall0011,\n    colorPreset.lightGray, // TerrainType.Wall0100,\n    colorPreset.lightGray, // TerrainType.Wall0101,\n    colorPreset.lightGray, // TerrainType.Wall0110,\n    colorPreset.lightGray, // TerrainType.Wall0111,\n    colorPreset.lightGray, // TerrainType.Wall1000,\n    colorPreset.lightGray, // TerrainType.Wall1001,\n    colorPreset.lightGray, // TerrainType.Wall1010,\n    colorPreset.lightGray, // TerrainType.Wall1011,\n    colorPreset.lightGray, // TerrainType.Wall1100,\n    colorPreset.lightGray, // TerrainType.Wall1101,\n    colorPreset.lightGray, // TerrainType.Wall1110,\n    colorPreset.lightGray, // TerrainType.Wall1111,\n    colorPreset.lightGray, // TerrainType.OneWayWindowE,\n    colorPreset.lightGray, // TerrainType.OneWayWindowW,\n    colorPreset.lightGray, // TerrainType.OneWayWindowN,\n    colorPreset.lightGray, // TerrainType.OneWayWindowS,\n    colorPreset.lightGray, // TerrainType.PortcullisNS,\n    colorPreset.lightGray, // TerrainType.PortcullisEW,\n    colorPreset.lightGray, // TerrainType.DoorNS,\n    colorPreset.lightGray, // TerrainType.DoorEW,\n];\n\nconst tileIndexForItemType: Array<number> = [\n    100, // ItemType.Chair,\n    98, // ItemType.Table,\n    96, // ItemType.Bush,\n    110, // ItemType.Coin,\n    89, // ItemType.DoorNS,\n    87, // ItemType.DoorEW,\n    50, // ItemType.PortcullisNS,\n    50, // ItemType.PortcullisEW,\n];\n\nconst colorForItemType: Array<number> = [\n    colorPreset.darkBrown, // ItemType.Chair,\n    colorPreset.darkBrown, // ItemType.Table,\n    colorPreset.darkGreen, // ItemType.Bush,\n    colorPreset.lightYellow, // ItemType.Coin,\n    colorPreset.darkBrown, // ItemType.DoorNS,\n    colorPreset.darkBrown, // ItemType.DoorEW,\n    colorPreset.lightGray, // ItemType.PortcullisNS,\n    colorPreset.lightGray, // ItemType.PortcullisEW,\n]\n\nconst unlitColor: number = colorPreset.lightBlue;\n\ntype AddGlyph = (x0: number, y0: number, x1: number, y1: number, glyphIndex: number, color: number) => void;\n\nfunction renderWorld(state: State, addGlyph: AddGlyph) {\n    for (let x = 0; x < state.gameMap.cells.sizeX; ++x) {\n        for (let y = 0; y < state.gameMap.cells.sizeY; ++y) {\n            const cell = state.gameMap.cells.at(x, y);\n            if (!cell.seen && !state.seeAll) {\n                continue;\n            }\n            const terrainType = cell.type;\n            const tileIndex = tileIndexForTerrainType[terrainType];\n            const color = cell.lit ? colorForTerrainType[terrainType] : unlitColor;\n            addGlyph(x, y, x+1, y+1, tileIndex, color);\n        }\n    }\n\n    for (const item of state.gameMap.items) {\n        const cell = state.gameMap.cells.at(item.pos[0], item.pos[1]);\n        if (!cell.seen && !state.seeAll) {\n            continue;\n        }\n        const tileIndex = tileIndexForItemType[item.type];\n        const color = cell.lit ? colorForItemType[item.type] : unlitColor;\n        addGlyph(item.pos[0], item.pos[1], item.pos[0] + 1, item.pos[1] + 1, tileIndex, color);\n    }\n}\n\nfunction renderPlayer(state: State, addGlyph: AddGlyph) {\n    const player = state.player;\n    const x = player.pos[0];\n    const y = player.pos[1];\n    const lit = state.gameMap.cells.at(x, y).lit;\n    const hidden = player.hidden(state.gameMap);\n    const color =\n        player.damagedLastTurn ? 0xff0000ff :\n        player.noisy ? colorPreset.lightCyan :\n        hidden ? 0xd0101010 :\n        !lit ? colorPreset.lightBlue :\n        colorPreset.lightGray;\n\n    addGlyph(x, y, x+1, y+1, 32, color);\n}\n\nfunction renderGuards(state: State, addGlyph: AddGlyph) {\n    for (const guard of state.gameMap.guards) {\n        const tileIndex = 33 + tileIndexOffsetForDir(guard.dir);\n        const cell = state.gameMap.cells.at(guard.pos[0], guard.pos[1]);\n\n        const visible = state.seeAll || cell.seen || guard.speaking;\n\n        if (!visible && vec2.squaredDistance(state.player.pos, guard.pos) > 36) {\n            continue;\n        }\n\n        const color =\n            !visible ? colorPreset.darkGray :\n            (guard.mode == GuardMode.Patrol && !guard.speaking && !cell.lit) ? unlitColor :\n            colorPreset.lightMagenta;\n\n        addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, tileIndex, color);\n    }\n}\n\nfunction tileIndexOffsetForDir(dir: vec2): number {\n    if (dir[1] > 0) {\n        return 1;\n    } else if (dir[1] < 0) {\n        return 3;\n    } else if (dir[0] > 0) {\n        return 0;\n    } else if (dir[0] < 0) {\n        return 2;\n    } else {\n        return 3;\n    }\n}\n\nfunction createCamera(posPlayer: vec2): Camera {\n    const camera = {\n        position: vec2.create(),\n        velocity: vec2.create(),\n    };\n\n    vec2.copy(camera.position, posPlayer);\n    vec2.zero(camera.velocity);\n\n    return camera;\n}\n\nfunction initState(sounds:Howls): State {\n    const initialLevel = 0;\n    const gameMap = createGameMap(initialLevel);\n\n    return {\n        tLast: undefined,\n        shiftModifierActive: false,\n        shiftUpLastTimeStamp: -Infinity,\n        player: new Player(gameMap.playerStartPos),\n        finishedLevel: false,\n        seeAll : false,\n        camera: createCamera(gameMap.playerStartPos),\n        level: initialLevel,\n        gameMap: gameMap,\n        sounds: sounds,\n    };\n}\n\nfunction resetState(state: State) {\n    const gameMap = createGameMap(state.level);\n\n    state.finishedLevel = false;\n    state.player = new Player(gameMap.playerStartPos);\n    state.camera = createCamera(gameMap.playerStartPos);\n    state.gameMap = gameMap;\n}\n\nfunction updateAndRender(now: number, renderer: Renderer, state: State) {\n    const t = now / 1000;\n    const dt = (state.tLast === undefined) ? 0 : Math.min(1/30, t - state.tLast);\n    state.tLast = t;\n\n    if (dt > 0) {\n        updateState(state, dt);\n    }\n\n    renderScene(renderer, state);\n\n    requestAnimationFrame(now => updateAndRender(now, renderer, state));\n}\n\nfunction updateState(state: State, dt: number) {\n    updateCamera(state, dt);\n}\n\nfunction updateCamera(state: State, dt: number) {\n\n    // Update player follow\n\n    const posError = vec2.create();\n    vec2.subtract(posError, state.player.pos, state.camera.position);\n\n    const velError = vec2.create();\n    vec2.negate(velError, state.camera.velocity);\n\n    const kSpring = 8; // spring constant, radians/sec\n\n    const acc = vec2.create();\n    vec2.scale(acc, posError, kSpring**2);\n    vec2.scaleAndAdd(acc, acc, velError, 2*kSpring);\n\n    const velNew = vec2.create();\n    vec2.scaleAndAdd(velNew, state.camera.velocity, acc, dt);\n\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, state.camera.velocity, 0.5 * dt);\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, velNew, 0.5 * dt);\n    vec2.copy(state.camera.velocity, velNew);\n}\n\nfunction renderScene(renderer: Renderer, state: State) {\n    const screenSize = vec2.create();\n    renderer.beginFrame(screenSize);\n\n    const matScreenFromWorld = mat4.create();\n    setupViewMatrix(state, screenSize, matScreenFromWorld);\n\n    renderer.renderGlyphs.start(matScreenFromWorld, 1);\n    renderWorld(state, renderer.renderGlyphs.addGlyph);\n    renderPlayer(state, renderer.renderGlyphs.addGlyph);\n    renderGuards(state, renderer.renderGlyphs.addGlyph);\n    renderer.renderGlyphs.flush();\n}\n\nfunction setupViewMatrix(state: State, screenSize: vec2, matScreenFromWorld: mat4) {\n    const cxGame = state.camera.position[0];\n    const cyGame = state.camera.position[1];\n    const rGame = 18;\n    let rxGame: number, ryGame: number;\n    if (screenSize[0] < screenSize[1]) {\n        rxGame = rGame;\n        ryGame = rGame * screenSize[1] / screenSize[0];\n    } else {\n        ryGame = rGame;\n        rxGame = rGame * screenSize[0] / screenSize[1];\n    }\n\n    mat4.ortho(matScreenFromWorld, cxGame - rxGame, cxGame + rxGame, cyGame - ryGame, cyGame + ryGame, 1, -1);\n}\n\nfunction renderTextLines(renderer: Renderer, screenSize: vec2, lines: Array<string>) {\n    let maxLineLength = 0;\n    for (const line of lines) {\n        maxLineLength = Math.max(maxLineLength, line.length);\n    }\n\n    const minCharsX = 40;\n    const minCharsY = 22;\n    const scaleLargestX = Math.max(1, Math.floor(screenSize[0] / (8 * minCharsX)));\n    const scaleLargestY = Math.max(1, Math.floor(screenSize[1] / (16 * minCharsY)));\n    const scaleFactor = Math.min(scaleLargestX, scaleLargestY);\n    const pixelsPerCharX = 8 * scaleFactor;\n    const pixelsPerCharY = 16 * scaleFactor;\n    const linesPixelSizeX = maxLineLength * pixelsPerCharX;\n    const numCharsX = screenSize[0] / pixelsPerCharX;\n    const numCharsY = screenSize[1] / pixelsPerCharY;\n    const offsetX = Math.floor((screenSize[0] - linesPixelSizeX) / -2) / pixelsPerCharX;\n    const offsetY = (lines.length + 2) - numCharsY;\n\n    const matScreenFromTextArea = mat4.create();\n    mat4.ortho(\n        matScreenFromTextArea,\n        offsetX,\n        offsetX + numCharsX,\n        offsetY,\n        offsetY + numCharsY,\n        1,\n        -1);\n    renderer.renderGlyphs.start(matScreenFromTextArea, 0);\n\n    const colorText = 0xffeeeeee;\n    const colorBackground = 0xe0555555;\n\n    // Draw a stretched box to make a darkened background for the text.\n    renderer.renderGlyphs.addGlyph(\n        -1, -1, maxLineLength + 1, lines.length + 1,\n        219,\n        colorBackground\n    );\n\n    for (let i = 0; i < lines.length; ++i) {\n        const row = lines.length - (1 + i);\n        for (let j = 0; j < lines[i].length; ++j) {\n            const col = j;\n            const ch = lines[i];\n            if (ch === ' ') {\n                continue;\n            }\n            const glyphIndex = lines[i].charCodeAt(j);\n            renderer.renderGlyphs.addGlyph(\n                col, row, col + 1, row + 1,\n                glyphIndex,\n                colorText\n            );\n        }\n    }\n\n    renderer.renderGlyphs.flush();\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lW8yX\")).toString();"],"names":["$962dfe94de155236$export$e9830bc863290a54","$962dfe94de155236$export$d2b4acf069bf09f5","$69e3cfcc1b264755$export$8b958c8ecd94a804","n","Math","floor","random","$69e3cfcc1b264755$export$7ac3a88d34a76e7","array","i","length","j","temp","$9b54a0058cb4baa9$export$4d0734ad15726738","GuardMode","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","id","resolved","Error","parcelRequire","register","JSON","parse","create","clone","v","fromValues","x0","x1","copy","result","set","add","a","b","subtract","multiply","scale","scaleAndAdd","distance","x","y","hypot","squaredDistance","squaredLength","negate","dot","lerp","t","zero","ortho","left","right","bottom","top","near","far","lr","bt","nf","$9b54a0058cb4baa9$export$aaedb44a0fd0f42b","constructor","pos","map","this","dir","mode","Patrol","speaking","hasMoved","heardThief","hearingGuard","heardGuard","heardGuardPos","goal","modeTimeout","regionGoal","$10c35e7c2a1f8a6c$export$1b965bd728e66949","regionPrev","setupGoalRegion","updateDirInitial","preTurn","act","seeAll","player","shouts","modePrev","posPrev","seesThief","adjacentTo","ChaseVisibleTarget","Look","$9b54a0058cb4baa9$var$updateDir","MoveToLastSighting","MoveToGuardShout","Listen","MoveToLastSound","patrolStep","damagedLastTurn","applyDamage","moveTowardGoal","push","pos_shouter","pos_target","dx","dy","abs","d","playerIsLit","cells","at","lit","sightCutoff","hidden","from","to","ax","ay","x_inc","y_inc","error","blocksSight","$9b54a0058cb4baa9$var$lineOfSight","cutoffLit","cutoffUnlit","litTarget","bumpedThief","moveTowardRegion","region","randomNeighborRegion","distanceField","computeDistancesToRegion","posNext","$9b54a0058cb4baa9$var$posNextBest","computeDistancesToPosition","regionCur","closestRegion","$9b54a0058cb4baa9$export$5f882605b1dc2846","guard","guards","shout","$9b54a0058cb4baa9$var$alertNearbyGuards","posFrom","costBest","Infinity","posBest","posMin","max","posMax","min","sizeX","sizeY","cost","get","guardMoveCost","type","$10c35e7c2a1f8a6c$export$1bd3aab7cfc60670","GroundWater","isGuardAt","posTarget","dirTarget","dirLeft","dotForward","dotLeft","$10c35e7c2a1f8a6c$export$47dc3946656b4c14","initialValue","values","Uint8Array","fill","value","$10c35e7c2a1f8a6c$export$1baa12a9812549c7","Int32Array","$10c35e7c2a1f8a6c$export$304240f91b7efc5a","Float64Array","TerrainType","$10c35e7c2a1f8a6c$export$6b828f5d89445818","size","Array","GroundNormal","moveCost","blocksPlayerMove","blocksPlayerSight","blocksSound","hidesPlayer","seen","console","assert","$10c35e7c2a1f8a6c$export$1fc8f52ad1810e52","ItemType","$10c35e7c2a1f8a6c$export$af86814533211557","itemType","Chair","Table","Bush","Coin","DoorNS","DoorEW","PortcullisNS","PortcullisEW","$10c35e7c2a1f8a6c$export$2616165974278734","health","gold","noisy","turnsRemainingUnderwater","undefined","find","$10c35e7c2a1f8a6c$var$portals","lx","ly","rx","ry","nx","ny","$10c35e7c2a1f8a6c$var$aRightOfB","bx","by","$10c35e7c2a1f8a6c$var$allowedDirection","terrainType","OneWayWindowE","OneWayWindowW","OneWayWindowN","OneWayWindowS","$10c35e7c2a1f8a6c$var$adjacentMoves","$10c35e7c2a1f8a6c$export$5f2c7e9a2f29f58a","patrolRegions","patrolRoutes","items","playerStartPos","totalLoot","collectLootAt","filter","item","collectAllLoot","allSeen","cell","percentSeen","numSeen","markAllSeen","markAllUnseen","recomputeVisibility","posViewer","portal","computeVisibility","playerCanSeeInDirection","viewerX","viewerY","targetX","targetY","ldx","ldy","rdx","rdy","cdx","cdy","pldx","pldy","prdx","prdy","cldx","cldy","crdx","crdy","allLootCollected","regionExclude","neighbors","region0","region1","posOld","posNew","distField","heap","$10c35e7c2a1f8a6c$var$priorityQueuePush","priority","state","$10c35e7c2a1f8a6c$var$priorityQueuePop","dist","adjacentMove","distNew","iRegionGoal","p","computeDistanceField","pos_goal","initialDistances","distPos","q","pop","c","iChild","iChild0","iChild1","iParent","$7defb8b0b8d2cc00$var$roomSizeX","$7defb8b0b8d2cc00$var$roomSizeY","$7defb8b0b8d2cc00$var$outerBorder","$7defb8b0b8d2cc00$var$RoomType","RoomType","$7defb8b0b8d2cc00$export$c6e04b122d41de8c","level","$7defb8b0b8d2cc00$var$randomHouseWidth","$7defb8b0b8d2cc00$var$randomHouseDepth","inside","halfX","$7defb8b0b8d2cc00$var$makeSiheyuanRoomGrid","offsetX","offsetY","mirrorX","mirrorY","roomsX","roomsY","xMid","yMid","roomOffsetX","Number","MIN_SAFE_INTEGER","roomOffsetY","z","$7defb8b0b8d2cc00$var$offsetWalls","cx","cy","mapSizeX","mapSizeY","y0","y1","GroundGrass","isInside","$7defb8b0b8d2cc00$var$plotNSWall","$7defb8b0b8d2cc00$var$plotEWWall","$7defb8b0b8d2cc00$var$plotWalls","rooms","adjacencies","posStart","roomIndex","roomType","Exterior","group","depth","edges","group_index","PublicRoom","PublicCourtyard","adjacencyRows","adjacencyRow","origin","room_left","room_right","next_matching","door","x0_upper","x0_lower","x1_upper","x1_lower","row","adj0","adj1","a1","ry0","ry1","row0","row1","y0_left","y0_right","y1_left","y1_right","$7defb8b0b8d2cc00$var$computeAdjacencies","adj","i0","i1","$7defb8b0b8d2cc00$var$storeAdjacenciesInRooms","edgeSets","$7defb8b0b8d2cc00$var$getEdgeSets","$7defb8b0b8d2cc00$var$joinGroups","edgeSet","addedDoor","group0","group1","room_type0","room_type1","$7defb8b0b8d2cc00$var$frontDoorAdjacencyIndex","$7defb8b0b8d2cc00$var$connectRooms","unvisited","roomsToVisit","iRoom","iiRoom","iAdj","iRoomNeighbor","maxDepth","room","targetNumMasterRooms","numMasterRooms","PrivateRoom","PrivateCourtyard","changed","$7defb8b0b8d2cc00$var$assignRoomTypes","includeRoom","trimmed","numExits","roomPatrolRegion","$7defb8b0b8d2cc00$var$addPatrolRegion","$7defb8b0b8d2cc00$var$addPatrolRoute","$7defb8b0b8d2cc00$var$generatePatrolRoutes","type0","type1","$7defb8b0b8d2cc00$var$isCourtyardRoomType","offset","walls","k","$7defb8b0b8d2cc00$var$oneWayWindowTerrainTypeFromDir","k_end","windowType","installMasterSuiteDoor","orientNS","roomTypeLeft","roomTypeRight","$7defb8b0b8d2cc00$var$placeItem","$7defb8b0b8d2cc00$var$renderWalls","cellType","GroundWood","GroundMarble","$7defb8b0b8d2cc00$var$tryPlaceBush","Wall0000","$7defb8b0b8d2cc00$var$tryPlaceTable","$7defb8b0b8d2cc00$var$tryPlaceChair","$7defb8b0b8d2cc00$var$renderRooms","$7defb8b0b8d2cc00$var$createExits","numRooms","$7defb8b0b8d2cc00$var$tryPlaceLoot","$7defb8b0b8d2cc00$var$placeLoot","sx","sy","$7defb8b0b8d2cc00$var$placeExteriorBushes","$7defb8b0b8d2cc00$var$placeFrontPillars","numGuards","$7defb8b0b8d2cc00$var$generateInitialGuardPos","$7defb8b0b8d2cc00$var$placeGuards","$7defb8b0b8d2cc00$var$markExteriorAsSeen","isWall","Wall1111","isWindow","isWater","$7defb8b0b8d2cc00$var$cacheCellInfo","reduce","$7defb8b0b8d2cc00$var$wallTypeFromNeighbors","$7defb8b0b8d2cc00$var$neighboringWalls","$7defb8b0b8d2cc00$var$fixupWalls","groupFrom","groupTo","iPatrolRegion","$7defb8b0b8d2cc00$var$oneWayWindowTerrainType","$7defb8b0b8d2cc00$var$doorAdjacent","$7defb8b0b8d2cc00$var$isItemAtPos","$7defb8b0b8d2cc00$var$isWall","wallBits","$e3d6ee63ed1479b9$export$53ae2f996c64e9a","gl","images","textures","image","numGlyphsX","numGlyphsY","numGlyphs","srcGlyphSizeX","naturalWidth","srcGlyphSizeY","naturalHeight","scaleFactor","dstGlyphSizeX","dstGlyphSizeY","canvas","document","createElement","width","height","ctx","getContext","imageSmoothingEnabled","drawImage","imageData","getImageData","pixels","data","buffer","texture","createTexture","bindTexture","TEXTURE_2D_ARRAY","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","NEAREST","texImage3D","RGBA","UNSIGNED_BYTE","generateMipmap","$e3d6ee63ed1479b9$var$createTextureFromImage","renderer","beginFrame","$e3d6ee63ed1479b9$var$createBeginFrame","renderGlyphs","$e3d6ee63ed1479b9$var$createGlyphRenderer","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","clearColor","screenSize","parentElement","parentNode","rect","getBoundingClientRect","$e3d6ee63ed1479b9$var$resizeCanvasToDisplaySize","screenX","clientWidth","screenY","clientHeight","viewport","clear","COLOR_BUFFER_BIT","attribs","vPosition","vTexcoord","vColor","program","vsSource","fsSource","vertexShader","$e3d6ee63ed1479b9$var$loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","attrib","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","$e3d6ee63ed1479b9$var$initShaderProgram","uProjectionMatrixLoc","getUniformLocation","uOpacityLoc","maxQuads","numVertices","bytesPerVertex","Float32Array","BYTES_PER_ELEMENT","Uint32Array","wordsPerQuad","vertexData","ArrayBuffer","vertexDataAsFloat32","vertexDataAsUint32","vertexBuffer","createBuffer","numQuads","matScreenFromWorldCached","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","bufferData","DYNAMIC_DRAW","indices","Uint16Array","indexBuffer","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","$e3d6ee63ed1479b9$var$createGlyphIndexBuffer","flushQuads","useProgram","uniform1i","uniformMatrix4fv","bufferSubData","drawElements","TRIANGLES","UNSIGNED_SHORT","start","matScreenFromWorld","textureIndex","activeTexture","TEXTURE0","addGlyph","glyphIndex","color","srcBase","flush","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","$f89d8ffbdc18f2ab$export$b791fe48eec8032a","HowlerGlobal1","init","prototype","self","Howler1","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","createBufferSource","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","testPlay","play","Promise","then","catch","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl1","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound1","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","timeout","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","index","splice","remCache","cache","on","events","off","isId","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","Howler","Howl","$parcel$global","HowlerGlobal","Sound","_super","_pos","_orientation","stereo","pan","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","$2932c1ccb152d82b$exports","URL","resolve","import","meta","toString","$8978dcab5771f3ee$exports","$8ced2edf4937d357$exports","$ff8f6f78d583cfcc$exports","$523e85573fbedc7e$export$e501447ddb8932e4","footstepWood","footstepTile","footstepWater","footstepGravel","footstepGrass","$7623f4cf7321701d$exports","$42c3db1e5be65f46$export$430774e3f59aae50","$42c3db1e5be65f46$export$7faf1229eaed2d5a","$42c3db1e5be65f46$export$45287c80362236a","$42c3db1e5be65f46$export$8e7e4e76fd842548","$42c3db1e5be65f46$export$7b0d29b70b435c21","$42c3db1e5be65f46$export$f7bd452d85438018","$42c3db1e5be65f46$export$ce3d146c023b50e3","$735190d7854f71d4$exports","$e46db5192eb49d53$var$main","querySelector","alpha","initialLevel","gameMap","tLast","shiftModifierActive","shiftUpLastTimeStamp","finishedLevel","camera","$e46db5192eb49d53$var$createCamera","$e46db5192eb49d53$var$initState","requestUpdateAndRender","requestAnimationFrame","$e46db5192eb49d53$var$updateAndRender","body","preventDefault","$e46db5192eb49d53$var$resetState","ctrlKey","speed","shiftKey","timeStamp","$e46db5192eb49d53$var$tryMovePlayer","$e46db5192eb49d53$var$updateMapVisibility","$e46db5192eb49d53$var$advanceToNextLevel","tileType","$e46db5192eb49d53$var$blocked","$e46db5192eb49d53$var$preTurn","GroundWoodCreaky","$e46db5192eb49d53$var$advanceTime","$010dd75d1c964311$exports","all","$e46db5192eb49d53$var$loadImage","$e46db5192eb49d53$var$cardinalDirections","pos_viewer","reject","img","Image","$e46db5192eb49d53$var$tileIndexForTerrainType","$e46db5192eb49d53$var$colorForTerrainType","$e46db5192eb49d53$var$tileIndexForItemType","$e46db5192eb49d53$var$colorForItemType","$e46db5192eb49d53$var$unlitColor","$e46db5192eb49d53$var$tileIndexOffsetForDir","posPlayer","position","velocity","dt","posError","velError","kSpring","acc","velNew","$e46db5192eb49d53$var$updateCamera","$e46db5192eb49d53$var$updateState","cxGame","cyGame","rGame","rxGame","ryGame","$e46db5192eb49d53$var$setupViewMatrix","tileIndex","$e46db5192eb49d53$var$renderWorld","$e46db5192eb49d53$var$renderPlayer","visible","$e46db5192eb49d53$var$renderGuards","$e46db5192eb49d53$var$renderScene"],"version":3,"file":"index.b651f798.js.map"}