{"mappings":"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","sources":["src/my-matrix.ts","src/guard.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-79cee56bbfa529d4.js","src/game-map.ts","src/create-map.ts","src/render.ts","node_modules/howler/dist/howler.js","node_modules/@parcel/runtime-js/lib/runtime-12760fdfc4a93fe4.js","node_modules/@parcel/runtime-js/lib/runtime-78e3eee8cb994830.js","node_modules/@parcel/runtime-js/lib/runtime-7b76f8ceabbbb4bd.js","node_modules/@parcel/runtime-js/lib/runtime-6d2e6297e6651e2e.js","src/audio.ts","node_modules/@parcel/runtime-js/lib/runtime-6b04dcb5e7b33bbc.js","src/color-preset.ts","node_modules/@parcel/runtime-js/lib/runtime-0b25773b4d33336c.js","src/game.ts","node_modules/@parcel/runtime-js/lib/runtime-fc2a6fa5999902ee.js"],"sourcesContent":["export { vec2, mat4 };\n\ntype vec2 = [number, number];\ntype mat4 =\n    [number, number, number, number,\n     number, number, number, number,\n     number, number, number, number,\n     number, number, number, number];\n\nnamespace vec2 {\n    export function create(): vec2 {\n        return [0, 0];\n    }\n\n    export function clone(v: vec2): vec2 {\n        return [v[0], v[1]];\n    }\n\n    export function fromValues(x0: number, x1: number): vec2 {\n        return [x0, x1];\n    }\n\n    export function copy(result: vec2, v: vec2) {\n        result[0] = v[0];\n        result[1] = v[1];\n    }\n\n    export function set(result: vec2, x0: number, x1: number) {\n        result[0] = x0;\n        result[1] = x1;\n    }\n\n    export function add(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] + b[0];\n        result[1] = a[1] + b[1];\n    }\n\n    export function subtract(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] - b[0];\n        result[1] = a[1] - b[1];\n    }\n\n    export function multiply(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] * b[0];\n        result[1] = a[1] * b[1];\n    }\n\n    export function scale(result: vec2, a: vec2, scale: number) {\n        result[0] = a[0] * scale;\n        result[1] = a[1] * scale;\n    }\n\n    export function scaleAndAdd(result: vec2, a: vec2, b: vec2, scale: number) {\n        result[0] = a[0] + b[0] * scale;\n        result[1] = a[1] + b[1] * scale;\n    }\n\n    export function distance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return Math.hypot(x, y);\n    }\n\n    export function squaredDistance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return x * x + y * y;\n    }\n\n    export function length(a: vec2): number {\n        return Math.hypot(a[0], a[1]);\n    }\n\n    export function squaredLength(a: vec2): number {\n        const x = a[0];\n        const y = a[1];\n        return x * x + y * y;\n    }\n\n    export function negate(result: vec2, a: vec2) {\n        result[0] = -a[0];\n        result[1] = -a[1];\n    }\n\n    export function dot(a: vec2, b: vec2): number {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n\n    export function lerp(result: vec2, a: vec2, b: vec2, t: number) {\n        result[0] = a[0] + t * (b[0] - a[0]);\n        result[1] = a[1] + t * (b[1] - a[1]);\n    }\n\n    export function zero(result: vec2) {\n        result[0] = 0;\n        result[1] = 0;\n    }\n}\n\nnamespace mat4 {\n    export function create(): mat4 {\n        return [\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n        ];\n    }\n\n    export function copy(result: mat4, a: mat4) {\n        result[0] = a[0];\n        result[1] = a[1];\n        result[2] = a[2];\n        result[3] = a[3];\n        result[4] = a[4];\n        result[5] = a[5];\n        result[6] = a[6];\n        result[7] = a[7];\n        result[8] = a[8];\n        result[9] = a[9];\n        result[10] = a[10];\n        result[11] = a[11];\n        result[12] = a[12];\n        result[13] = a[13];\n        result[14] = a[14];\n        result[15] = a[15];\n    }\n\n    export function ortho(result: mat4, left: number, right: number, bottom: number, top: number, near: number, far: number) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        result[0] = -2 * lr;\n        result[1] = 0;\n        result[2] = 0;\n        result[3] = 0;\n        result[4] = 0;\n        result[5] = -2 * bt;\n        result[6] = 0;\n        result[7] = 0;\n        result[8] = 0;\n        result[9] = 0;\n        result[10] = 2 * nf;\n        result[11] = 0;\n        result[12] = (left + right) * lr;\n        result[13] = (top + bottom) * bt;\n        result[14] = (far + near) * nf;\n        result[15] = 1;\n    }\n}\n","export { Guard, GuardMode };\n\nimport { GameMap, invalidRegion } from './game-map';\nimport { vec2 } from './my-matrix';\n\nenum GuardMode {\n    Patrol,\n    Look,\n    Listen,\n    ChaseVisibleTarget,\n    MoveToLastSighting,\n    MoveToLastSound,\n    MoveToGuardShout,\n}\n\nclass Guard {\n    pos: vec2;\n    dir: vec2;\n    mode: GuardMode;\n    speaking: boolean;\n    hasMoved: boolean;\n    heardThief: boolean;\n    hearingGuard: boolean;\n    heardGuard: boolean;\n    heardGuardPos: vec2;\n\n    // Chase\n    goal: vec2;\n    modeTimeout: number;\n\n    // Patrol\n    regionGoal: number;\n    regionPrev: number;\n\n    constructor(pos: vec2, map: GameMap) {\n        this.pos = vec2.clone(pos);\n        this.dir = vec2.fromValues(1, 0);\n        this.mode = GuardMode.Patrol;\n        this.speaking = false;\n        this.hasMoved = false;\n        this.heardThief = false;\n        this.hearingGuard = false;\n        this.heardGuard = false;\n        this.heardGuardPos = pos;\n        this.goal = pos;\n        this.modeTimeout = 0;\n        this.regionGoal = invalidRegion;\n        this.regionPrev = invalidRegion;\n\n        this.setupGoalRegion(map);\n    }\n\n    setupGoalRegion(map: GameMap) {\n        let regionCur = map.cells.at(this.pos[0], this.pos[1]).region;\n    \n        if (this.regionGoal != invalidRegion && regionCur == this.regionPrev) {\n            return;\n        }\n\n        /*\n        if (regionCur == invalidRegion) {\n            this.regionGoal = map.closestRegion(this.pos);\n        } else {\n            this.regionGoal = map.randomNeighborRegion(regionCur, this.regionPrev);\n            this.regionPrev = regionCur;\n        }\n        */\n    }\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"17fSe\\\":\\\"index.95607383.js\\\",\\\"757gI\\\":\\\"footstep-wood.8da8b302.ogg\\\",\\\"fI7s2\\\":\\\"footstep-tile.ed285432.ogg\\\",\\\"64MsM\\\":\\\"footstep-water.41ed0f5b.ogg\\\",\\\"fe6XQ\\\":\\\"footstep-gravel.2ecfc65f.ogg\\\",\\\"kPzFJ\\\":\\\"footstep-grass.46fcb678.ogg\\\",\\\"8FZzo\\\":\\\"font.84b63647.png\\\",\\\"lW8yX\\\":\\\"tiles.60aa3fc2.png\\\"}\"));","export { BooleanGrid, Cell, CellGrid, Int32Grid, ItemType, GameMap, Player, TerrainType, guardMoveCostForItemType, invalidRegion };\n\nimport { Guard, GuardMode } from './guard';\nimport { vec2 } from './my-matrix';\n\nconst invalidRegion: number = -1;\n\n// TODO: Figure out how to make a generic grid data structure\n\nclass BooleanGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Uint8Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: boolean) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Uint8Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: boolean) {\n        this.values.fill(value ? 1 : 0);\n    }\n\n    get(x: number, y: number): boolean {\n        return this.values[this.sizeX * y + x] !== 0;\n    }\n\n    set(x: number, y: number, value: boolean) {\n        this.values[this.sizeX * y + x] = value ? 1 : 0;\n    }\n}\n\nclass Int32Grid {\n    sizeX: number;\n    sizeY: number;\n    values: Int32Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Int32Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: number) {\n        this.values.fill(value);\n    }\n\n    get(x: number, y: number): number {\n        return this.values[this.sizeX * y + x];\n    }\n\n    set(x: number, y: number, value: number) {\n        this.values[this.sizeX * y + x] = value;\n    }\n}\n\nenum TerrainType {\n    GroundNormal,\n    GroundGrass,\n    GroundWater,\n    GroundMarble,\n    GroundWood,\n    GroundWoodCreaky,\n\n    //  NSEW\n    Wall0000,\n    Wall0001,\n    Wall0010,\n    Wall0011,\n    Wall0100,\n    Wall0101,\n    Wall0110,\n    Wall0111,\n    Wall1000,\n    Wall1001,\n    Wall1010,\n    Wall1011,\n    Wall1100,\n    Wall1101,\n    Wall1110,\n    Wall1111,\n\n    OneWayWindowE,\n    OneWayWindowW,\n    OneWayWindowN,\n    OneWayWindowS,\n    PortcullisNS,\n    PortcullisEW,\n    DoorNS,\n    DoorEW,\n}\n\ntype Cell = {\n    type: TerrainType;\n    moveCost: number;\n    region: number;\n    blocksPlayerMove: boolean;\n    blocksPlayerSight: boolean;\n    blocksSight: boolean;\n    blocksSound: boolean;\n    hidesPlayer: boolean;\n    lit: boolean;\n    seen: boolean;\n}\n\nclass CellGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Array<Cell>;\n\n    constructor(sizeX: number, sizeY: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        const size = sizeX * sizeY;\n        this.values = new Array<Cell>(size);\n        for (let i = 0; i < size; ++i) {\n            this.values[i] = {\n                type: TerrainType.GroundNormal,\n                moveCost: Infinity,\n                region: invalidRegion,\n                blocksPlayerMove: false,\n                blocksPlayerSight: false,\n                blocksSight: false,\n                blocksSound: false,\n                hidesPlayer: false,\n                lit: false,\n                seen: false,\n            };\n        }\n    }\n\n    at(x: number, y: number): Cell {\n        const i = this.sizeX * y + x;\n        console.assert(i >= 0);\n        console.assert(i < this.values.length);\n        return this.values[i];\n    }\n}\n\nenum ItemType {\n    Chair,\n    Table,\n    Bush,\n    Coin,\n    DoorNS,\n    DoorEW,\n    PortcullisNS,\n    PortcullisEW,\n}\n\ntype Item = {\n    pos: vec2;\n    type: ItemType;\n}\n\nfunction guardMoveCostForItemType(itemType: ItemType): number {\n    switch (itemType) {\n        case ItemType.Chair: return 4;\n        case ItemType.Table: return 10;\n        case ItemType.Bush: return 10;\n        case ItemType.Coin: return 0;\n        case ItemType.DoorNS: return 0;\n        case ItemType.DoorEW: return 0;\n        case ItemType.PortcullisNS: return 0;\n        case ItemType.PortcullisEW: return 0;\n    }\n}\n\nconst maxPlayerHealth: number = 5;\n\nclass Player {\n    pos: vec2;\n    dir: vec2;\n    health: number;\n    gold: number;\n    noisy: boolean; // did the player make noise last turn?\n    damagedLastTurn: boolean;\n    turnsRemainingUnderwater: number;\n\n    constructor(pos: vec2) {\n        this.pos = vec2.clone(pos);\n        this.dir = vec2.fromValues(0, -1);\n        this.health = maxPlayerHealth;\n        this.gold = 0;\n        this.noisy = false;\n        this.damagedLastTurn = false;\n        this.turnsRemainingUnderwater = 0;\n    }\n\n    applyDamage(d: number) {\n        this.health -= Math.min(d, this.health);\n        this.damagedLastTurn = true;\n    }\n\n    hidden(map: GameMap): boolean {\n        if (map.guards.find((guard) => guard.mode == GuardMode.ChaseVisibleTarget) !== undefined) {\n            return false;\n        }\n\n        if (map.cells.at(this.pos[0], this.pos[1]).hidesPlayer) {\n            return true;\n        }\n\n        let cellType = map.cells.at(this.pos[0], this.pos[1]).type;\n\n        if (cellType == TerrainType.GroundWater && this.turnsRemainingUnderwater > 0) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\ntype Rect = {\n    posMin: vec2;\n    posMax: vec2;\n}\n\ntype GameMap = {\n    cells: CellGrid;\n    patrolRegions: Array<Rect>,\n    patrolRoutes: Array<[number, number]>,\n    items: Array<Item>;\n    guards: Array<Guard>;\n    playerStartPos: vec2;\n    totalLoot: number;\n}\n","export { createGameMap };\n\nimport { BooleanGrid, CellGrid, Int32Grid, ItemType, GameMap, TerrainType, invalidRegion, guardMoveCostForItemType } from './game-map';\nimport { Guard } from './guard';\nimport { vec2 } from './my-matrix';\n\nconst roomSizeX = 5;\nconst roomSizeY = 5;\nconst outerBorder = 3;\n\nenum RoomType\n{\n    Exterior,\n    PublicCourtyard,\n    PublicRoom,\n    PrivateCourtyard,\n    PrivateRoom,\n}\n\ntype Room = {\n    roomType: RoomType,\n    group: number,\n    depth: number,\n    posMin: vec2,\n    posMax: vec2,\n    edges: Array<number>,\n}\n\ntype Adjacency = {\n    origin: vec2,\n    dir: vec2,\n    length: number,\n    room_left: number,\n    room_right: number,\n    next_matching: number,\n    door: boolean,\n}\n\nfunction createGameMap(level: number): GameMap {\n    const sizeX = randomHouseWidth(level);\n    const sizeY = randomHouseDepth(level);\n\n    const inside = makeSiheyuanRoomGrid(sizeX, sizeY);\n\n    const mirrorX: boolean = true;\n    const mirrorY: boolean = false;\n\n    const [offsetX, offsetY] = offsetWalls(mirrorX, mirrorY, inside);\n\n    const cells = plotWalls(inside, offsetX, offsetY);\n\n    const map: GameMap = {\n        cells: cells,\n        patrolRegions: [],\n        patrolRoutes: [],\n        items: [],\n        guards: [],\n        playerStartPos: vec2.create(),\n        totalLoot: 0,\n    };\n\n    const [rooms, adjacencies, posStart] = createExits(level, mirrorX, mirrorY, inside, offsetX, offsetY, map);\n\n    vec2.copy(map.playerStartPos, posStart);\n\n    placeLoot(rooms, adjacencies, map);\n    placeExteriorBushes(map);\n    placeFrontPillars(map);\n    placeGuards(level, rooms, map);\n\n    markExteriorAsSeen(map);\n\n    cacheCellInfo(map);\n\n    map.totalLoot = map.items.reduce((totalLoot, item) => totalLoot + ((item.type == ItemType.Coin) ? 1 : 0), 0);\n\n    fixupWalls(cells);\n\n    return map;\n}\n\nfunction randomHouseWidth(level: number): number {\n    let sizeX = 0;\n    const c = Math.min(3, level);\n    for (let i = 0; i < c; ++i) {\n        sizeX += randomInRange(2);\n    }\n    return sizeX * 2 + 3;\n}\n\nfunction randomHouseDepth(level: number): number {\n    if (level === 0) {\n        return 2;\n    } else {\n        let sizeY = 3;\n        const c = Math.min(4, level - 1);\n        for (let i = 0; i < c; ++i) {\n            sizeY += randomInRange(2);\n        }\n        return sizeY;\n    }\n}\n\nfunction makeSiheyuanRoomGrid(sizeX: number, sizeY: number): BooleanGrid {\n    const inside = new BooleanGrid(sizeX, sizeY, true);\n\n    const halfX = Math.floor((sizeX + 1) / 2);\n\n    const numCourtyardRoomsHalf = Math.floor((sizeY * halfX) / 4);\n    for (let i = numCourtyardRoomsHalf; i > 0; --i) {\n        const x = randomInRange(halfX);\n        const y = randomInRange(sizeY);\n        inside.set(x, y, false);\n    }\n\n    for (let y = 0; y < sizeY; ++y) {\n        for (let x = halfX; x < sizeX; ++x) {\n            inside.set(x, y, inside.get((sizeX - 1) - x, y));\n        }\n    }\n\n    return inside;\n}\n\nfunction offsetWalls(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid): [offsetX: Int32Grid, offsetY: Int32Grid]\n{\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const offsetX = new Int32Grid(roomsX + 1, roomsY, 0);\n    const offsetY = new Int32Grid(roomsX, roomsY + 1, 0);\n\n    let i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(0, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(roomsX, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, 0, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, roomsY, i);\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            offsetX.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            offsetY.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            if (randomInRange(2) === 0) {\n                offsetX.set(x, y, offsetX.get(x, y-1));\n            } else {\n                offsetY.set(x, y, offsetY.get(x-1, y));\n            }\n        }\n    }\n\n    if (mirrorX) {\n        if ((roomsX & 1) === 0) {\n            const xMid = Math.floor(roomsX / 2);\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(xMid, y, 0);\n            }\n        }\n\n        for (let x = 0; x < Math.floor((roomsX + 1) / 2); ++x) {\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(roomsX - x, y, 1 - offsetX.get(x, y));\n            }\n        }\n\n        for (let x = 0; x < Math.floor(roomsX / 2); ++x) {\n            for (let y = 0; y < roomsY + 1; ++y) {\n                offsetY.set((roomsX - 1) - x, y, offsetY.get(x, y));\n            }\n        }\n    }\n\n    if (mirrorY) {\n        if ((roomsY & 1) === 0) {\n            const yMid = roomsY / 2;\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, yMid, 0);\n            }\n        }\n\n        for (let y = 0; y < Math.floor((roomsY + 1) / 2); ++y) {\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, roomsY - y, 1 - offsetY.get(x, y));\n            }\n        }\n\n        for (let y = 0; y < Math.floor(roomsY / 2); ++y) {\n            for (let x = 0; x < roomsX + 1; ++x) {\n                offsetX.set(x, (roomsY - 1) - y, offsetX.get(x, y));\n            }\n        }\n    }\n\n    let roomOffsetX = Number.MIN_SAFE_INTEGER;\n    let roomOffsetY = Number.MIN_SAFE_INTEGER;\n\n    for (let y = 0; y < roomsY; ++y) {\n        roomOffsetX = Math.max(roomOffsetX, -offsetX.get(0, y));\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        roomOffsetY = Math.max(roomOffsetY, -offsetY.get(x, 0));\n    }\n\n    roomOffsetX += outerBorder;\n    roomOffsetY += outerBorder;\n\n    for (let x = 0; x < roomsX + 1; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            const z = offsetX.get(x, y) + roomOffsetX + x * roomSizeX;\n            offsetX.set(x, y, z);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY + 1; ++y) {\n            offsetY.set(x, y, offsetY.get(x, y) + roomOffsetY + y * roomSizeY);\n        }\n    }\n\n    return [offsetX, offsetY];\n}\n\nfunction plotWalls(inside: BooleanGrid, offsetX: Int32Grid, offsetY: Int32Grid): CellGrid {\n    const cx = inside.sizeX;\n    const cy = inside.sizeY;\n\n    let mapSizeX = 0;\n    let mapSizeY = 0;\n\n    for (let y = 0; y < cy; ++y) {\n        mapSizeX = Math.max(mapSizeX, offsetX.get(cx, y));\n    }\n\n    for (let x = 0; x < cx; ++x) {\n        mapSizeY = Math.max(mapSizeY, offsetY.get(x, cy));\n    }\n\n    mapSizeX += outerBorder + 1;\n    mapSizeY += outerBorder + 1;\n\n    const map = new CellGrid(mapSizeX, mapSizeY);\n\n    // Super hacky: put down grass under all the rooms to plug holes, and light the interior.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry) + 1;\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1) + 1;\n\n            for (let x = x0; x < x1; ++x) {\n                for (let y = y0; y < y1; ++y) {\n                    const cell = map.at(x, y);\n                    cell.type = TerrainType.GroundGrass;\n                    cell.lit = true;\n                }\n            }\n        }\n    }\n\n    // Draw walls. Really this should be done in createExits, where the\n    //  walls are getting decorated with doors and windows.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const isInside = inside.get(rx, ry);\n\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry);\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1);\n\n            if (rx == 0 || isInside) {\n                plotNSWall(map, x0, y0, y1);\n            }\n            if (rx == cx - 1 || isInside) {\n                plotNSWall(map, x1, y0, y1);\n            }\n            if (ry == 0 || isInside) {\n                plotEWWall(map, x0, y0, x1);\n            }\n            if (ry == cy - 1 || isInside) {\n                plotEWWall(map, x0, y1, x1);\n            }\n        }\n    }\n\n    return map;\n}\n\nfunction plotNSWall(map: CellGrid, x0: number, y0: number, y1: number) {\n    for (let y = y0; y <= y1; ++y) {\n        map.at(x0, y).type = TerrainType.Wall0000;\n    }\n}\n\nfunction plotEWWall(map: CellGrid, x0: number, y0: number, x1: number) {\n    for (let x = x0; x <= x1; ++x) {\n        map.at(x, y0).type = TerrainType.Wall0000;\n    }\n}\n\nfunction createExits(\n    level: number,\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    map: GameMap\n): [Array<Room>, Array<Adjacency>, vec2] {\n    // Make a set of rooms.\n\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const roomIndex = new Int32Grid(roomsX, roomsY, 0);\n    const rooms: Array<Room> = [];\n\n    // This room represents the area surrounding the map.\n\n    rooms.push({\n        roomType: RoomType.Exterior,\n        group: 0,\n        depth: 0,\n        posMin: vec2.fromValues(0, 0), // not meaningful for this room\n        posMax: vec2.fromValues(0, 0), // not meaningful for this room\n        edges: [],\n    });\n\n    for (let rx = 0; rx < roomsX; ++rx) {\n        for (let ry = 0; ry < roomsY; ++ry) {\n            let group_index = rooms.length;\n\n            roomIndex.set(rx, ry, group_index);\n\n            rooms.push({\n                roomType: inside.get(rx, ry) ?  RoomType.PublicRoom : RoomType.PublicCourtyard,\n                group: group_index,\n                depth: 0,\n                posMin: vec2.fromValues(offsetX.get(rx, ry) + 1, offsetY.get(rx, ry) + 1),\n                posMax: vec2.fromValues(offsetX.get(rx + 1, ry), offsetY.get(rx, ry + 1)),\n                edges: [],\n            });\n        }\n    }\n\n    // Compute a list of room adjacencies.\n\n    const adjacencies = computeAdjacencies(mirrorX, mirrorY, offsetX, offsetY, roomIndex);\n    storeAdjacenciesInRooms(adjacencies, rooms);\n\n    // Connect rooms together.\n\n    let posStart = connectRooms(rooms, adjacencies);\n\n    // Assign types to the rooms.\n\n    assignRoomTypes(roomIndex, adjacencies, rooms);\n\n    // Generate pathing information.\n\n    generatePatrolRoutes(map, rooms, adjacencies);\n\n    // Render doors and windows.\n\n    renderWalls(rooms, adjacencies, map);\n\n    // Render floors.\n\n    renderRooms(level, rooms, map);\n\n    return [rooms, adjacencies, posStart];\n}\n\nfunction computeAdjacencies(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    roomIndex: Int32Grid\n): Array<Adjacency> {\n\n    let roomsX = roomIndex.sizeX;\n    let roomsY = roomIndex.sizeY;\n\n    const adjacencies: Array<Adjacency> = [];\n\n    {\n        const adjacencyRows: Array<Array<number>> = [];\n\n        {\n            const adjacencyRow = [];\n\n            let ry = 0;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry);\n                let x1 = offsetX.get(rx+1, ry);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: roomIndex.get(rx, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let ry = 1; ry < roomsY; ++ry) {\n            const adjacencyRow = [];\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0_upper = offsetX.get(rx, ry);\n                let x0_lower = offsetX.get(rx, ry-1);\n                let x1_upper = offsetX.get(rx+1, ry);\n                let x1_lower = offsetX.get(rx+1, ry-1);\n                let x0 = Math.max(x0_lower, x0_upper);\n                let x1 = Math.min(x1_lower, x1_upper);\n                let y = offsetY.get(rx, ry);\n\n                if (rx > 0 && x0_lower - x0_upper > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0_upper + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x0_lower - (x0_upper + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx - 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (x1 - x0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0 + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1 - (x0 + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (rx + 1 < roomsX && x1_upper - x1_lower > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x1_lower + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1_upper - (x1_lower + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx + 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let ry = roomsY;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry-1);\n                let x1 = offsetX.get(rx+1, ry-1);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry - 1),\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorX) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n\n                let i = 0;\n                let j = row.length - 1;\n                while (i < j) {\n                    let adj0 = row[i];\n                    let adj1 = row[j];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    // Flip edge a1 to point the opposite direction\n                    {\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n\n                    i += 1;\n                    j -= 1;\n                }\n            }\n        }\n\n        if (mirrorY) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                console.assert(row0.length == row1.length);\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    {\n        let adjacencyRows = [];\n\n        {\n            const adjacencyRow = [];\n\n            let rx = 0;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx, ry);\n                let y1 = offsetY.get(rx, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry),\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let rx = 1; rx < roomsX; ++rx) {\n            const adjacencyRow = [];\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0_left  = offsetY.get(rx-1, ry);\n                let y0_right = offsetY.get(rx, ry);\n                let y1_left  = offsetY.get(rx-1, ry+1);\n                let y1_right = offsetY.get(rx, ry+1);\n                let y0 = Math.max(y0_left, y0_right);\n                let y1 = Math.min(y1_left, y1_right);\n                let x = offsetX.get(rx, ry);\n\n                if (ry > 0 && y0_left - y0_right > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0_right + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y0_left - (y0_right + 1),\n                        room_left: roomIndex.get(rx - 1, ry - 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (y1 - y0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0 + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1 - (y0 + 1),\n                        room_left: roomIndex.get(rx - 1, ry),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (ry + 1 < roomsY && y1_right - y1_left > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y1_left + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1_right - (y1_left + 1),\n                        room_left: roomIndex.get(rx - 1, ry + 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let rx = roomsX;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx-1, ry);\n                let y1 = offsetY.get(rx-1, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: roomIndex.get(rx - 1, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                });\n                adjacencyRow.push(i);\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorY) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n                let n = Math.floor(row.length / 2);\n\n                for (let i = 0; i < n; ++i) {\n                    let adj0 = row[i];\n                    let adj1 = row[(row.length - 1) - i];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    {\n                        // Flip edge a1 to point the opposite direction\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n                }\n            }\n        }\n\n        if (mirrorX) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    return adjacencies;\n}\n\nfunction storeAdjacenciesInRooms(adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        rooms[i0].edges.push(i);\n        rooms[i1].edges.push(i);\n    }\n}\n\nfunction connectRooms(rooms: Array<Room>, adjacencies: Array<Adjacency>): vec2 {\n\n    // Collect sets of edges that are mirrors of each other\n\n    let edgeSets = getEdgeSets(adjacencies);\n\n    // Connect all adjacent courtyard rooms together.\n\n    for (const adj of adjacencies) {\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        if (rooms[i0].roomType != RoomType.PublicCourtyard || rooms[i1].roomType != RoomType.PublicCourtyard) {\n            continue;\n        }\n\n        adj.door = true;\n        let group0 = rooms[i0].group;\n        let group1 = rooms[i1].group;\n        joinGroups(rooms, group0, group1);\n    }\n\n    // Connect all the interior rooms with doors.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            if (rooms[i0].roomType != RoomType.PublicRoom || rooms[i1].roomType != RoomType.PublicRoom) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create doors between the interiors and the courtyard areas.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            let room_type0 = rooms[i0].roomType;\n            let room_type1 = rooms[i1].roomType;\n\n            if (room_type0 == room_type1) {\n                continue;\n            }\n\n            if (room_type0 == RoomType.Exterior || room_type1 == RoomType.Exterior) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create the door to the surrounding exterior. It must be on the south side.\n\n    let posStart = vec2.fromValues(0, 0);\n\n    {\n        let i = frontDoorAdjacencyIndex(rooms, adjacencies, edgeSets);\n\n        // Set the player's start position based on where the door is.\n\n        posStart[0] = adjacencies[i].origin[0] + adjacencies[i].dir[0] * Math.floor(adjacencies[i].length / 2);\n        posStart[1] = outerBorder - 1;\n\n        adjacencies[i].door = true;\n\n        // Break symmetry if the door is off center.\n\n        let j = adjacencies[i].next_matching;\n        if (j != i) {\n            adjacencies[j].next_matching = j;\n            adjacencies[i].next_matching = i;\n        }\n    }\n\n    return posStart;\n}\n\nfunction getEdgeSets(adjacencies: Array<Adjacency>): Array<Array<number>> {\n    const edgeSets = [];\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let j = adj.next_matching;\n        if (j >= i) {\n            if (j > i) {\n                edgeSets.push([i, j]);\n            } else {\n                edgeSets.push([i]);\n            }\n        }\n    }\n\n    shuffleArray(edgeSets);\n\n    return edgeSets;\n}\n\nfunction joinGroups(rooms: Array<Room>, groupFrom: number, groupTo: number) {\n    if (groupFrom != groupTo) {\n        for (const room of rooms) {\n            if (room.group == groupFrom) {\n                room.group = groupTo;\n            }\n        }\n    }\n}\n\nfunction frontDoorAdjacencyIndex(rooms: Array<Room>, adjacencies: Array<Adjacency>, edgeSets: Array<Array<number>>): number {\n    for (const edgeSet of edgeSets) {\n        for (const i of edgeSet) {\n            let adj = adjacencies[i];\n\n            if (adj.dir[0] == 0) {\n                continue;\n            }\n\n            if (adj.next_matching > i) {\n                continue;\n            }\n\n            if (adj.next_matching == i) {\n                if (rooms[adj.room_right].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            } else {\n                if (rooms[adj.room_left].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            }\n\n            return i;\n        }\n    }\n\n    // Should always return above...\n\n    return 0;\n}\n\nfunction assignRoomTypes(roomIndex: Int32Grid, adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n\n    // Assign rooms depth based on distance from the bottom row of rooms.\n\n    let unvisited = rooms.length;\n\n    rooms[0].depth = 0;\n\n    for (let i = 1; i < rooms.length; ++i) {\n        rooms[i].depth = unvisited;\n    }\n\n    const roomsToVisit: Array<number> = [];\n\n    for (let x = 0; x < roomIndex.sizeX; ++x) {\n        let iRoom = roomIndex.get(x, 0);\n        rooms[iRoom].depth = 1;\n        roomsToVisit.push(iRoom);\n    }\n\n    // Visit rooms in breadth-first order, assigning them distances from the seed rooms.\n\n    let iiRoom = 0;\n    while (iiRoom < roomsToVisit.length) {\n        let iRoom = roomsToVisit[iiRoom];\n\n        for (const iAdj of rooms[iRoom].edges) {\n            let adj = adjacencies[iAdj];\n\n            if (!adj.door) {\n                continue;\n            }\n\n            const iRoomNeighbor = (adj.room_left == iRoom) ? adj.room_right : adj.room_left;\n\n            if (rooms[iRoomNeighbor].depth == unvisited) {\n                rooms[iRoomNeighbor].depth = rooms[iRoom].depth + 1;\n                roomsToVisit.push(iRoomNeighbor);\n            }\n        }\n\n        iiRoom += 1;\n    }\n\n    // Assign master-suite room type to the inner rooms.\n\n    let maxDepth = 0;\n    for (const room of rooms) {\n        maxDepth = Math.max(maxDepth, room.depth);\n    }\n\n    const targetNumMasterRooms = Math.floor((roomIndex.sizeX * roomIndex.sizeY) / 4);\n\n    let numMasterRooms = 0;\n\n    let depth = maxDepth;\n    while (depth > 0) {\n        for (const room of rooms) {\n            if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            if (room.depth != depth) {\n                continue;\n            }\n\n            room.roomType = (room.roomType == RoomType.PublicRoom) ? RoomType.PrivateRoom : RoomType.PrivateCourtyard;\n            if (room.roomType == RoomType.PrivateRoom) {\n                numMasterRooms += 1;\n            }\n        }\n\n        if (numMasterRooms >= targetNumMasterRooms) {\n            break;\n        }\n\n        depth -= 1;\n    }\n\n    // Change any public courtyards that are adjacent to private courtyards into private courtyards\n\n    while (true) {\n        let changed = false;\n\n        for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n            if (rooms[iRoom].roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            for (const iAdj of rooms[iRoom].edges) {\n                const adj = adjacencies[iAdj];\n\n                let iRoomOther = (adj.room_left != iRoom) ? adj.room_left : adj.room_right;\n\n                if (rooms[iRoomOther].roomType == RoomType.PrivateCourtyard) {\n                    rooms[iRoom].roomType = RoomType.PrivateCourtyard;\n                    changed = true;\n                    break;\n                }\n            }\n        }\n\n        if (!changed) {\n            break;\n        }\n    }\n}\n\nfunction generatePatrolRoutes(map: GameMap, rooms: Array<Room>, adjacencies: Array<Adjacency>) {\n    const includeRoom = Array(rooms.length).fill(true);\n\n    // Exclude exterior rooms.\n\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        if (rooms[iRoom].roomType == RoomType.Exterior) {\n            includeRoom[iRoom] = false;\n        }\n    }\n\n    // Trim dead ends out repeatedly until no more can be trimmed.\n\n    while (true) {\n        let trimmed = false;\n\n        for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n            if (!includeRoom[iRoom]) {\n                continue;\n            }\n\n            const room = rooms[iRoom];\n\n            let numExits = 0;\n            for (const iAdj of room.edges) {\n                const adj = adjacencies[iAdj];\n\n                if (!adj.door) {\n                    continue;\n                }\n\n                let iRoomOther = (adj.room_left != iRoom) ? adj.room_left : adj.room_right;\n\n                if (includeRoom[iRoomOther]) {\n                    numExits += 1;\n                }\n            }\n\n            if (numExits < 2) {\n                includeRoom[iRoom] = false;\n                trimmed = true;\n            }\n        }\n\n        if (!trimmed) {\n            break;\n        }\n    }\n\n    // Generate patrol regions for included rooms.\n\n    const roomPatrolRegion = Array(rooms.length).fill(invalidRegion);\n\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        if (includeRoom[iRoom]) {\n            roomPatrolRegion[iRoom] = addPatrolRegion(map, rooms[iRoom].posMin, rooms[iRoom].posMax);\n        }\n    }\n\n    // Add connections between included rooms.\n\n    for (const adj of adjacencies) {\n        if (!adj.door) {\n            continue;\n        }\n\n        let region0 = roomPatrolRegion[adj.room_left];\n        let region1 = roomPatrolRegion[adj.room_right];\n\n        if (region0 == invalidRegion || region1 == invalidRegion) {\n            continue;\n        }\n\n        addPatrolRoute(map, region0, region1);\n    }\n}\n\nfunction addPatrolRegion(map: GameMap, posMin: vec2, posMax: vec2): number {\n    let iPatrolRegion = map.patrolRegions.length;\n\n    map.patrolRegions.push({ posMin, posMax });\n\n    // Plot the region into the map.\n\n    for (let x = posMin[0]; x < posMax[0]; ++x) {\n        for (let y = posMin[1]; y < posMax[1]; ++y) {\n            map.cells.at(x, y).region = iPatrolRegion;\n        }\n    }\n\n    return iPatrolRegion;\n}\n\nfunction addPatrolRoute(map: GameMap, region0: number, region1: number) {\n    console.assert(region0 < map.patrolRegions.length);\n    console.assert(region1 < map.patrolRegions.length);\n    map.patrolRoutes.push([region0, region1]);\n}\n\nconst oneWayWindowTerrainType: Array<TerrainType> = [\n    TerrainType.OneWayWindowS,\n    TerrainType.OneWayWindowE,\n    TerrainType.OneWayWindowN,\n    TerrainType.OneWayWindowW,\n];\n\nfunction oneWayWindowTerrainTypeFromDir(dir: vec2): number {\n    return oneWayWindowTerrainType[dir[0] + 2 * Math.max(0, dir[1]) + 1];\n}\n\nfunction renderWalls(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Render grass connecting courtyard rooms.\n\n    for (const adj of adjacencies) {\n        const type0 = rooms[adj.room_left].roomType;\n        const type1 = rooms[adj.room_right].roomType;\n\n        if (!isCourtyardRoomType(type0) || !isCourtyardRoomType(type1)) {\n            continue;\n        }\n\n        for (let j = 0; j < adj.length; ++j) {\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, adj.origin, adj.dir, j);\n            map.cells.at(p[0], p[1]).type = TerrainType.GroundGrass;\n        }\n    }\n\n    // Render doors and windows for the rest of the walls.\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj0 = adjacencies[i];\n\n        const type0 = rooms[adj0.room_left].roomType;\n        const type1 = rooms[adj0.room_right].roomType;\n\n        if (isCourtyardRoomType(type0) && isCourtyardRoomType(type1)) {\n            continue;\n        }\n\n        const j = adj0.next_matching;\n\n        if (j < i) {\n            continue;\n        }\n\n        let offset;\n        if (j == i) {\n            offset = Math.floor(adj0.length / 2);\n        } else if (adj0.length > 2) {\n            offset = 1 + randomInRange(adj0.length - 2);\n        } else {\n            offset = randomInRange(adj0.length);\n        }\n\n        let walls = [];\n        walls.push(adj0);\n\n        if (j != i) {\n            walls.push(adjacencies[j]);\n        }\n\n        if (!adj0.door && type0 != type1) {\n            if (type0 == RoomType.Exterior || type1 == RoomType.Exterior) {\n                if ((adj0.length & 1) != 0) {\n                    let k = Math.floor(adj0.length / 2);\n\n                    for (const a of walls) {\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n\n                        let dir = vec2.clone(a.dir);\n                        if (rooms[a.room_right].roomType == RoomType.Exterior) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        map.cells.at(p[0], p[1]).type = oneWayWindowTerrainTypeFromDir(dir);\n                    }\n                }\n            } else if (isCourtyardRoomType(type0) || isCourtyardRoomType(type1)) {\n                let k = randomInRange(2);\n                const k_end = Math.floor((adj0.length + 1) / 2);\n\n                while (k < k_end) {\n                    for (const a of walls) {\n                        let dir = vec2.clone(a.dir);\n                        if (isCourtyardRoomType(rooms[a.room_right].roomType)) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        let windowType = oneWayWindowTerrainTypeFromDir(dir);\n\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n                        const q = vec2.create();\n                        vec2.scaleAndAdd(q, a.origin, a.dir, a.length - (k + 1));\n\n                        map.cells.at(p[0], p[1]).type = windowType;\n                        map.cells.at(q[0], q[1]).type = windowType;\n                    }\n                    k += 2;\n                }\n            }\n        }\n\n        let installMasterSuiteDoor = Math.random() < 0.3333;\n\n        for (const a of walls) {\n            if (!a.door) {\n                continue;\n            }\n\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, a.origin, a.dir, offset);\n\n            let orientNS = (a.dir[0] == 0);\n\n            map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n\n            let roomTypeLeft = rooms[a.room_left].roomType;\n            let roomTypeRight = rooms[a.room_right].roomType;\n\n            if (roomTypeLeft == RoomType.Exterior || roomTypeRight == RoomType.Exterior) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.PortcullisNS : TerrainType.PortcullisEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.PortcullisNS : ItemType.PortcullisEW);\n            } else if (roomTypeLeft != RoomType.PrivateRoom || roomTypeRight != RoomType.PrivateRoom || installMasterSuiteDoor) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.DoorNS : ItemType.DoorEW);\n            }\n        }\n    }\n}\n\nfunction renderRooms(level: number, rooms: Array<Room>, map: GameMap) {\n    for (let iRoom = 1; iRoom < rooms.length; ++iRoom) {\n        const room = rooms[iRoom];\n\n        let cellType;\n        switch (room.roomType) {\n        case RoomType.Exterior: cellType = TerrainType.GroundNormal; break;\n        case RoomType.PublicCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PublicRoom: cellType = TerrainType.GroundWood; break;\n        case RoomType.PrivateCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PrivateRoom: cellType = TerrainType.GroundMarble; break;\n        }\n\n        for (let x = room.posMin[0]; x < room.posMax[0]; ++x) {\n            for (let y = room.posMin[1]; y < room.posMax[1]; ++y) {\n                map.cells.at(x, y).type = cellType;\n            }\n        }\n\n        let dx = room.posMax[0] - room.posMin[0];\n        let dy = room.posMax[1] - room.posMin[1];\n\n        if (isCourtyardRoomType(room.roomType)) {\n            if (dx >= 5 && dy >= 5) {\n                for (let x = room.posMin[0] + 1; x < room.posMax[0] - 1; ++x) {\n                    for (let y = room.posMin[1] + 1; y < room.posMax[1] - 1; ++y) {\n                        map.cells.at(x, y).type = TerrainType.GroundWater;\n                    }\n                }\n            } else if (dx >= 2 && dy >= 2) {\n                tryPlaceBush(map, room.posMin[0], room.posMin[1]);\n                tryPlaceBush(map, room.posMax[0] - 1, room.posMin[1]);\n                tryPlaceBush(map, room.posMin[0], room.posMax[1] - 1);\n                tryPlaceBush(map, room.posMax[0] - 1, room.posMax[1] - 1);\n            }\n        } else if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            if (dx >= 5 && dy >= 5) {\n                if (room.roomType == RoomType.PrivateRoom) {\n                    for (let x = 2; x < dx-2; ++x) {\n                        for (let y = 2; y < dy-2; ++y) {\n                            map.cells.at(room.posMin[0] + x, room.posMin[1] + y).type = TerrainType.GroundWater;\n                        }\n                    }\n                }\n\n                map.cells.at(room.posMin[0] + 1, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMin[0] + 1, room.posMax[1] - 2).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMax[1] - 2).type = TerrainType.Wall0000;\n            } else if (dx == 5 && dy >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                for (let y = 1; y < dy-1; ++y) {\n                    placeItem(map, room.posMin[0] + 1, room.posMin[1] + y, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + 2, room.posMin[1] + y, ItemType.Table);\n                    placeItem(map, room.posMin[0] + 3, room.posMin[1] + y, ItemType.Chair);\n                }\n            } else if (dy == 5 && dx >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                for (let x = 1; x < dx-1; ++x) {\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 1, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 2, ItemType.Table);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 3, ItemType.Chair);\n                }\n            } else if (dx > dy && (dy & 1) == 1 && Math.random() < 0.66667) {\n                let y = Math.floor(room.posMin[1] + dy / 2);\n\n                if (room.roomType == RoomType.PublicRoom) {\n                    tryPlaceTable(map, room.posMin[0] + 1, y);\n                    tryPlaceTable(map, room.posMax[0] - 2, y);\n                } else {\n                    tryPlaceChair(map, room.posMin[0] + 1, y);\n                    tryPlaceChair(map, room.posMax[0] - 2, y);\n                }\n            } else if (dy > dx && (dx & 1) == 1 && Math.random() < 0.66667) {\n                let x = Math.floor(room.posMin[0] + dx / 2);\n\n                if (room.roomType == RoomType.PublicRoom) {\n                    tryPlaceTable(map, x, room.posMin[1] + 1);\n                    tryPlaceTable(map, x, room.posMax[1] - 2);\n                } else {\n                    tryPlaceChair(map, x, room.posMin[1] + 1);\n                    tryPlaceChair(map, x, room.posMax[1] - 2);\n                }\n            } else if (dx > 3 && dy > 3) {\n                if (room.roomType == RoomType.PublicRoom) {\n                    tryPlaceTable(map, room.posMin[0], room.posMin[1]);\n                    tryPlaceTable(map, room.posMax[0] - 1, room.posMin[1]);\n                    tryPlaceTable(map, room.posMin[0], room.posMax[1] - 1);\n                    tryPlaceTable(map, room.posMax[0] - 1, room.posMax[1] - 1);\n                } else {\n                    tryPlaceChair(map, room.posMin[0], room.posMin[1]);\n                    tryPlaceChair(map, room.posMax[0] - 1, room.posMin[1]);\n                    tryPlaceChair(map, room.posMin[0], room.posMax[1] - 1);\n                    tryPlaceChair(map, room.posMax[0] - 1, room.posMax[1] - 1);\n                }\n            }\n        }\n    }\n}\n\nfunction tryPlaceBush(map: GameMap, x: number, y: number) {\n    if (map.cells.at(x, y).type != TerrainType.GroundGrass) {\n        return;\n    }\n\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, ItemType.Bush);\n}\n\nfunction tryPlaceTable(map: GameMap, x: number, y: number) {\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, ItemType.Table);\n}\n\nfunction tryPlaceChair(map: GameMap, x: number, y: number) {\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, ItemType.Chair);\n}\n\nfunction doorAdjacent(map: CellGrid, x: number, y: number): boolean {\n    if (map.at(x - 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x + 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y - 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y + 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction placeItem(map: GameMap, x: number, y: number, type: ItemType) {\n    map.items.push({\n        pos: vec2.fromValues(x, y),\n        type: type,\n    });\n}\n\nfunction placeLoot(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Count number of internal rooms.\n\n    let numRooms = 0;\n    for (const room of rooms) {\n        if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            numRooms += 1;\n        }\n    }\n\n    // Master-suite rooms get loot.\n\n    for (const room of rooms)  {\n        if (room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        if (Math.random() < 0.2) {\n            continue;\n        }\n\n        tryPlaceLoot(room.posMin, room.posMax, map);\n    }\n\n    // Dead-end rooms automatically get loot.\n\n    for (const room of rooms) {\n        if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        let numExits = 0;\n        for (const iAdj of room.edges) {\n            if (adjacencies[iAdj].door) {\n                numExits += 1;\n            }\n        }\n\n        if (numExits < 2) {\n            tryPlaceLoot(room.posMin, room.posMax, map);\n        }\n    }\n\n    // Place a bit of extra loot.\n\n    let posMin = vec2.fromValues(0, 0);\n    let posMax = vec2.fromValues(map.cells.sizeX, map.cells.sizeY);\n    for (let i = Math.floor(numRooms / 4 + randomInRange(4)); i > 0; --i) {\n        tryPlaceLoot(posMin, posMax, map);\n    }\n}\n\nfunction tryPlaceLoot(posMin: vec2, posMax: vec2, map: GameMap)\n{\n    let dx = posMax[0] - posMin[0];\n    let dy = posMax[1] - posMin[1];\n\n    for (let i = 1000; i > 0; --i) {\n        let pos = vec2.fromValues(posMin[0] + randomInRange(dx), posMin[1] + randomInRange(dy));\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        placeItem(map, pos[0], pos[1], ItemType.Coin);\n        break;\n    }\n}\n\nfunction placeExteriorBushes(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = sy - outerBorder + 1; y < sy; ++y) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if ((x & 1) == 0 && Math.random() < 0.8) {\n            placeItem(map, x, sy - 1, ItemType.Bush);\n        }\n    }\n\n    for (let y = outerBorder; y < sy - outerBorder + 1; ++y) {\n        for (let x = 0; x < outerBorder-1; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        for (let x = (sx - outerBorder + 1); x < sx; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if (((sy - y) & 1) != 0) {\n            if (Math.random() < 0.8) {\n                placeItem(map, 0, y, ItemType.Bush);\n            }\n            if (Math.random() < 0.8) {\n                placeItem(map, sx - 1, y, ItemType.Bush);\n            }\n        }\n    }\n}\n\nfunction placeFrontPillars(map: GameMap) {\n    let sx = map.cells.sizeX - 1;\n    let cx = Math.floor(map.cells.sizeX / 2);\n\n    for (let x = outerBorder; x < cx; x += 5) {\n        map.cells.at(x, 1).type = TerrainType.Wall0000;\n        map.cells.at(sx - x, 1).type = TerrainType.Wall0000;\n        map.cells.at(x, 1).lit = true;\n        map.cells.at(sx - x, 1).lit = true;\n    }\n}\n\nfunction isItemAtPos(map: GameMap, x: number, y: number): boolean {\n    for (const item of map.items) {\n        if (item.pos[0] == x && item.pos[1] == y) {\n            return true;\n        }\n    }\n    /*\n    for guard in &map.guards {\n        if guard.pos.0 == x && guard.pos.1 == y {\n            return true;\n        }\n    }\n    */\n    return false;\n}\n\nfunction isCourtyardRoomType(roomType: RoomType): boolean {\n    switch (roomType) {\n    case RoomType.Exterior: return false;\n    case RoomType.PublicCourtyard: return true;\n    case RoomType.PublicRoom: return false;\n    case RoomType.PrivateCourtyard: return true;\n    case RoomType.PrivateRoom: return false;\n    }\n}\n\nfunction placeGuards(level: number, rooms: Array<Room>, map: GameMap) {\n    if (level <= 0) {\n        return;\n    }\n\n    // Count number of internal rooms.\n\n    let numRooms = 0;\n    for (const room of rooms) {\n        if (room.roomType != RoomType.Exterior) {\n            numRooms += 1;\n        }\n    }\n\n    // Generate guards\n\n    let numGuards = (level == 1) ? 1 : Math.max(2, Math.floor((numRooms * Math.min(level + 18, 40)) / 100));\n\n    while (numGuards > 0) {\n        const pos = generateInitialGuardPos(map);\n        if (pos === undefined) {\n            break;\n        }\n        map.guards.push(new Guard(pos, map));\n        numGuards -= 1;\n    }\n}\n\nfunction generateInitialGuardPos(map: GameMap): vec2 | undefined {\n    let sizeX = map.cells.sizeX;\n    let sizeY = map.cells.sizeY;\n    for (let i = 0; i < 1000; ++i) {\n        let pos = vec2.fromValues(randomInRange(sizeX), randomInRange(sizeY));\n\n        if (vec2.squaredDistance(map.playerStartPos, pos) < 64) {\n            continue;\n        }\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        return pos;\n    }\n\n    return undefined;\n}\n\nfunction markExteriorAsSeen(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            if (map.cells.at(x, y).type == TerrainType.GroundNormal ||\n                (x > 0 && map.cells.at(x-1, y).type == TerrainType.GroundNormal) ||\n                (x > 0 && y > 0 && map.cells.at(x-1, y-1).type == TerrainType.GroundNormal) ||\n                (x > 0 && y+1 < sy && map.cells.at(x-1, y+1).type == TerrainType.GroundNormal) ||\n                (y > 0 && map.cells.at(x, y-1).type == TerrainType.GroundNormal) ||\n                (y+1 < sy && map.cells.at(x, y+1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && map.cells.at(x+1, y).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y > 0 && map.cells.at(x+1, y-1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y+1 < sy && map.cells.at(x+1, y+1).type == TerrainType.GroundNormal)) {\n                map.cells.at(x, y).seen = true;\n            }\n        }\n    }\n}\n\nfunction cacheCellInfo(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            const cell = map.cells.at(x, y);\n            const cellType = cell.type;\n            const isWall = cellType >= TerrainType.Wall0000 && cellType <= TerrainType.Wall1111;\n            const isWindow = cellType >= TerrainType.OneWayWindowE && cellType <= TerrainType.OneWayWindowS;\n            const isWater = cellType == TerrainType.GroundWater;\n            cell.moveCost = (isWall || isWindow) ? Infinity : isWater ? 4096 : 0;\n            cell.blocksPlayerMove = isWall;\n            cell.blocksPlayerSight = isWall;\n            cell.blocksSight = isWall || isWindow;\n            cell.blocksSound = isWall;\n            cell.hidesPlayer = false;\n        }\n    }\n\n    for (const item of map.items) {\n        let cell = map.cells.at(item.pos[0], item.pos[1]);\n        let itemType = item.type;\n        cell.moveCost = Math.max(cell.moveCost, guardMoveCostForItemType(itemType));\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW) {\n            cell.blocksPlayerSight = true;\n        }\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW || itemType == ItemType.PortcullisNS || itemType == ItemType.PortcullisEW || itemType == ItemType.Bush) {\n            cell.blocksSight = true;\n        }\n        if (itemType == ItemType.Table || itemType == ItemType.Bush) {\n            cell.hidesPlayer = true;\n        }\n    }\n}\n\nfunction fixupWalls(map: CellGrid) {\n    for (let x = 0; x < map.sizeX; ++x) {\n        for (let y = 0; y < map.sizeY; ++y) {\n            const terrainType = map.at(x, y).type;\n            if (terrainType == TerrainType.Wall0000) {\n                map.at(x, y).type = wallTypeFromNeighbors(neighboringWalls(map, x, y));\n            }\n        }\n    }\n}\n\nfunction wallTypeFromNeighbors(neighbors: number): TerrainType {\n    return TerrainType.Wall0000 + neighbors;\n}\n\nfunction isWall(terrainType: TerrainType): boolean {\n    return terrainType >= TerrainType.Wall0000;\n}\n\nfunction neighboringWalls(map: CellGrid, x: number, y: number): number {\n    const sizeX = map.sizeX;\n    const sizeY = map.sizeY;\n    let wallBits = 0;\n\n    if (y < sizeY-1 && isWall(map.at(x, y+1).type)) {\n        wallBits |= 8;\n    }\n    if (y > 0 && isWall(map.at(x, y-1).type)) {\n        wallBits |= 4;\n    }\n    if (x < sizeX-1 && isWall(map.at(x+1, y).type)) {\n        wallBits |= 2;\n    }\n    if (x > 0 && isWall(map.at(x-1, y).type)) {\n        wallBits |= 1;\n    }\n\n    return wallBits\n}\n\nfunction randomInRange(n: number): number {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleArray<T>(array: Array<T>) {\n    for (let i = array.length - 1; i > 0; --i) {\n        let j = randomInRange(i + 1);\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\ntype PriorityQueueElement = {\n    priority: number;\n}\n\ntype PriorityQueue<T> = Array<T>;\n\nfunction priorityQueuePop<T extends PriorityQueueElement>(q: PriorityQueue<T>): T {\n    const x = q[0];\n    q[0] = q[q.length - 1]; // q.at(-1);\n    q.pop();\n    let i = 0;\n    const c = q.length;\n    while (true) {\n        let iChild = i;\n        const iChild0 = 2*i + 1;\n        if (iChild0 < c && q[iChild0].priority < q[iChild].priority) {\n            iChild = iChild0;\n        }\n        const iChild1 = iChild0 + 1;\n        if (iChild1 < c && q[iChild1].priority < q[iChild].priority) {\n            iChild = iChild1;\n        }\n        if (iChild == i) {\n            break;\n        }\n        [q[i], q[iChild]] = [q[iChild], q[i]];\n        i = iChild;\n    }\n    return x;\n}\n\nfunction priorityQueuePush<T extends PriorityQueueElement>(q: PriorityQueue<T>, x: T) {\n    q.push(x);\n    let i = q.length - 1;\n    while (i > 0) {\n        const iParent = Math.floor((i - 1) / 2);\n        if (q[i].priority >= q[iParent].priority) {\n            break;\n        }\n        [q[i], q[iParent]] = [q[iParent], q[i]];\n        i = iParent;\n    }\n}\n","export { RenderGlyphs, Renderer, createRenderer };\n\nimport { vec2, mat4 } from './my-matrix';\n\ntype RenderGlyphs = {\n    start: (matScreenFromWorld: mat4, textureIndex: number) => void;\n    addGlyph: (x0: number, y0: number, x1: number, y1: number, glyphIndex: number, color: number) => void;\n    flush: () => void;\n}\n\ntype BeginFrame = (screenSize: vec2) => void;\n\ntype Renderer = {\n    beginFrame: BeginFrame;\n    renderGlyphs: RenderGlyphs;\n}\n\nfunction createRenderer(gl: WebGL2RenderingContext, images: Array<HTMLImageElement>): Renderer {\n    const textures = images.map((image) => createTextureFromImage(gl, image));\n\n    const renderer = {\n        beginFrame: createBeginFrame(gl),\n        renderGlyphs: createGlyphRenderer(gl, textures),\n    };\n\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.enable(gl.BLEND);\n    gl.clearColor(0, 0, 0, 1);\n\n    return renderer;\n}\n\nfunction createBeginFrame(gl: WebGL2RenderingContext): BeginFrame {\n    return (screenSize) => {\n        const canvas = gl.canvas as HTMLCanvasElement;\n\n        resizeCanvasToDisplaySize(canvas);\n\n        const screenX = canvas.clientWidth;\n        const screenY = canvas.clientHeight;\n    \n        gl.viewport(0, 0, screenX, screenY);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        vec2.set(screenSize, screenX, screenY);\n    }\n}\n\nfunction createGlyphRenderer(gl: WebGL2RenderingContext, textures: Array<WebGLTexture>): RenderGlyphs {\n    const vsSource = `#version 300 es\n        in vec2 vPosition;\n        in vec3 vTexcoord;\n        in vec4 vColor;\n\n        uniform mat4 uMatScreenFromWorld;\n\n        out highp vec3 fTexcoord;\n        out highp vec4 fColor;\n\n        void main() {\n            fTexcoord = vTexcoord;\n            fColor = vColor;\n            gl_Position = uMatScreenFromWorld * vec4(vPosition, 0, 1);\n        }\n    `;\n\n    const fsSource = `#version 300 es\n        in highp vec3 fTexcoord;\n        in highp vec4 fColor;\n\n        uniform highp sampler2DArray uOpacity;\n\n        out lowp vec4 fragColor;\n\n        void main() {\n            fragColor = fColor * texture(uOpacity, fTexcoord);\n        }\n    `;\n\n    const attribs = {\n        vPosition: 0,\n        vTexcoord: 1,\n        vColor: 2,\n    };\n\n    const program = initShaderProgram(gl, vsSource, fsSource, attribs);\n\n    const uProjectionMatrixLoc = gl.getUniformLocation(program, 'uMatScreenFromWorld');\n    const uOpacityLoc = gl.getUniformLocation(program, 'uOpacity');\n\n    const maxQuads = 64;\n    const numVertices = 4 * maxQuads;\n    const bytesPerVertex = 2 * Float32Array.BYTES_PER_ELEMENT + 2 * Uint32Array.BYTES_PER_ELEMENT;\n    const wordsPerQuad = bytesPerVertex; // divide by four bytes per word, but also multiply by four vertices per quad\n\n    const vertexData = new ArrayBuffer(numVertices * bytesPerVertex);\n    const vertexDataAsFloat32 = new Float32Array(vertexData);\n    const vertexDataAsUint32 = new Uint32Array(vertexData);\n\n    const vertexBuffer = gl.createBuffer();\n\n    let numQuads = 0;\n\n    const matScreenFromWorldCached = mat4.create();\n\n    const vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    gl.enableVertexAttribArray(attribs.vPosition);\n    gl.enableVertexAttribArray(attribs.vTexcoord);\n    gl.enableVertexAttribArray(attribs.vColor);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attribs.vPosition, 2, gl.FLOAT, false, bytesPerVertex, 0);\n    gl.vertexAttribPointer(attribs.vTexcoord, 3, gl.UNSIGNED_BYTE, false, bytesPerVertex, 8);\n    gl.vertexAttribPointer(attribs.vColor, 4, gl.UNSIGNED_BYTE, true, bytesPerVertex, 12);\n    gl.bufferData(gl.ARRAY_BUFFER, vertexData, gl.DYNAMIC_DRAW);\n    const indexBuffer = createGlyphIndexBuffer(gl, maxQuads);\n    gl.bindVertexArray(null);\n\n    function start(matScreenFromWorld: mat4, textureIndex: number) {\n        mat4.copy(matScreenFromWorldCached, matScreenFromWorld);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, textures[textureIndex]);\n    }\n\n    function addGlyph(x0: number, y0: number, x1: number, y1: number, glyphIndex: number, color: number) {\n        if (numQuads >= maxQuads) {\n            flushQuads();\n        }\n\n        const i = numQuads * wordsPerQuad;\n        const srcBase = glyphIndex << 16;\n\n        vertexDataAsFloat32[i+0] = x0;\n        vertexDataAsFloat32[i+1] = y0;\n        vertexDataAsUint32[i+2] = srcBase + 256;\n        vertexDataAsUint32[i+3] = color;\n\n        vertexDataAsFloat32[i+4] = x1;\n        vertexDataAsFloat32[i+5] = y0;\n        vertexDataAsUint32[i+6] = srcBase + 257;\n        vertexDataAsUint32[i+7] = color;\n\n        vertexDataAsFloat32[i+8] = x0;\n        vertexDataAsFloat32[i+9] = y1;\n        vertexDataAsUint32[i+10] = srcBase;\n        vertexDataAsUint32[i+11] = color;\n\n        vertexDataAsFloat32[i+12] = x1;\n        vertexDataAsFloat32[i+13] = y1;\n        vertexDataAsUint32[i+14] = srcBase + 1;\n        vertexDataAsUint32[i+15] = color;\n\n        ++numQuads;\n    }\n\n    function flushQuads() {\n        if (numQuads <= 0) {\n            return;\n        }\n\n        gl.useProgram(program);\n\n        gl.bindVertexArray(vao);\n\n        gl.uniform1i(uOpacityLoc, 0);\n\n        gl.uniformMatrix4fv(uProjectionMatrixLoc, false, matScreenFromWorldCached);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertexDataAsFloat32, 0);\n\n        gl.drawElements(gl.TRIANGLES, 6 * numQuads, gl.UNSIGNED_SHORT, 0);\n\n        gl.bindVertexArray(null);\n\n        numQuads = 0;\n    }\n\n    return {\n        start: start,\n        addGlyph: addGlyph,\n        flush: flushQuads,\n    };\n}\n\nfunction createGlyphIndexBuffer(gl: WebGL2RenderingContext, maxQuads: number): WebGLBuffer {\n    const indices = new Uint16Array(maxQuads * 6);\n\n    for (let i = 0; i < maxQuads; ++i) {\n        let j = 6*i;\n        let k = 4*i;\n        indices[j+0] = k+0;\n        indices[j+1] = k+1;\n        indices[j+2] = k+2;\n        indices[j+3] = k+2;\n        indices[j+4] = k+1;\n        indices[j+5] = k+3;\n    }\n\n    const indexBuffer = gl.createBuffer()!;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n    return indexBuffer;\n}\n\nfunction createTextureFromImage(gl: WebGL2RenderingContext, image: HTMLImageElement): WebGLTexture {\n    const numGlyphsX = 16;\n    const numGlyphsY = 16;\n    const numGlyphs = numGlyphsX * numGlyphsY;\n    const srcGlyphSizeX = image.naturalWidth / numGlyphsX;\n    const srcGlyphSizeY = image.naturalHeight / numGlyphsY;\n    const scaleFactor = 4;\n    const dstGlyphSizeX = srcGlyphSizeX * scaleFactor;\n    const dstGlyphSizeY = srcGlyphSizeY * scaleFactor;\n\n    // Rearrange the glyph data from a grid to a vertical array\n\n    const canvas = document.createElement('canvas');\n    canvas.width = dstGlyphSizeX;\n    canvas.height = dstGlyphSizeY * numGlyphs;\n    const ctx = canvas.getContext('2d')!;\n    ctx.imageSmoothingEnabled = false;\n    for (let y = 0; y < numGlyphsY; ++y) {\n        for (let x = 0; x < numGlyphsX; ++x) {\n            const sx = x * srcGlyphSizeX;\n            const sy = y * srcGlyphSizeY;\n            const dx = 0;\n            const dy = (numGlyphsX * y + x) * dstGlyphSizeY;\n            ctx.drawImage(image, sx, sy, srcGlyphSizeX, srcGlyphSizeY, dx, dy, dstGlyphSizeX, dstGlyphSizeY);\n        }\n    }\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const pixels = new Uint8Array(imageData.data.buffer);\n\n    const texture = gl.createTexture()!;\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, dstGlyphSizeX, dstGlyphSizeY, numGlyphs, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    gl.generateMipmap(gl.TEXTURE_2D_ARRAY);\n    return texture;\n}\n\nfunction loadShader(gl: WebGL2RenderingContext, type: number, source: string): WebGLShader {\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n    }\n\n    return shader;\n}\n\nfunction initShaderProgram(gl: WebGL2RenderingContext, vsSource: string, fsSource: string, attribs: Record<string, number>): WebGLProgram {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n    const program = gl.createProgram()!;\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n\n    for (const attrib in attribs) {\n        gl.bindAttribLocation(program, attribs[attrib], attrib);\n    }\n\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(program))!;\n    }\n\n    return program;\n}\n\nfunction resizeCanvasToDisplaySize(canvas: HTMLCanvasElement) {\n    const parentElement = canvas.parentNode as HTMLElement;\n    const rect = parentElement.getBoundingClientRect();\n    if (canvas.width !== rect.width || canvas.height !== rect.height) {\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n    }\n}\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"757gI\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fI7s2\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"64MsM\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fe6XQ\")).toString();","import {Howl} from 'howler';\n\nvar footstepWood = require('url:./sounds/footstep-wood.ogg');\nvar footstepTile = require('url:./sounds/footstep-tile.ogg');\nvar footstepWater = require('url:./sounds/footstep-water.ogg');\nvar footstepGravel = require('url:./sounds/footstep-gravel.ogg');\nvar footstepGrass = require('url:./sounds/footstep-grass.ogg');\n\nexport type Howls = { [id:string]: Howl };\n\nexport function setupSounds(sounds:Howls) {\n    sounds.footstepWood = new Howl({src: [footstepWood]})\n    sounds.footstepTile = new Howl({src: [footstepTile]})\n    sounds.footstepWater = new Howl({src: [footstepWater]})\n    sounds.footstepGravel = new Howl({src: [footstepGravel]})\n    sounds.footstepGrass = new Howl({src: [footstepGrass]})\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kPzFJ\")).toString();","export const black: number = 0xff000000;\nexport const darkBlue: number = 0xffa80000;\nexport const darkGreen: number = 0xff00a800;\nexport const darkCyan: number = 0xffa8a800;\nexport const darkRed: number = 0xff0000a8;\nexport const darkMagenta: number = 0xffa800a8;\nexport const darkBrown: number = 0xff0054a8;\nexport const lightGray: number = 0xffa8a8a8;\nexport const darkGray: number = 0xff545454;\nexport const lightBlue: number = 0xfffe5454;\nexport const lightGreen: number = 0xff54fe54;\nexport const lightCyan: number = 0xfffefe54;\nexport const lightRed: number = 0xff5454fe;\nexport const lightMagenta: number = 0xfffe54fe;\nexport const lightYellow: number = 0xff54fefe;\nexport const white: number = 0xfffefefe;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8FZzo\")).toString();","import { vec2, mat4 } from './my-matrix';\nimport { createGameMap } from './create-map';\nimport { GameMap, Player, TerrainType } from './game-map';\nimport { GuardMode } from './guard';\nimport { Renderer, createRenderer } from './render';\nimport { setupSounds, Howls } from './audio';\nimport * as colorPreset from './color-preset';\n\nvar fontImageRequire = require('./font.png');\nvar tilesImageRequire = require('./tiles.png');\n\nwindow.onload = loadResourcesThenRun;\n\ntype Camera = {\n    position: vec2;\n    velocity: vec2;\n}\n\ntype State = {\n    tLast: number | undefined;\n    shiftModifierActive: boolean;\n    shiftUpLastTimeStamp: number;\n    player: Player;\n    seeAll : boolean;\n    camera: Camera;\n    level: number;\n    gameMap: GameMap;\n    sounds: Howls;\n}\n\nfunction loadResourcesThenRun() {\n    Promise.all([\n        loadImage(fontImageRequire),\n        loadImage(tilesImageRequire),\n    ]).then(main);\n}\n\nfunction main(images: Array<HTMLImageElement>) {\n\n    const canvas = document.querySelector(\"#canvas\") as HTMLCanvasElement;\n    const gl = canvas.getContext(\"webgl2\", { alpha: false, depth: false }) as WebGL2RenderingContext;\n\n    if (gl == null) {\n        alert(\"Unable to initialize WebGL2. Your browser or machine may not support it.\");\n        return;\n    }\n\n    const renderer = createRenderer(gl, images);\n    const sounds:Howls = {};\n    const state = initState(sounds);\n\n    document.body.addEventListener('keydown', onKeyDown);\n    document.body.addEventListener('keyup', onKeyUp);\n\n    function onKeyDown(e: KeyboardEvent) {\n        if (Object.keys(state.sounds).length==0) setupSounds(state.sounds);\n        if (e.code == 'KeyF' || e.code == 'NumpadAdd') {\n            state.shiftModifierActive = true;\n            return;\n        }\n\n        if (e.code == 'KeyR') {\n            e.preventDefault();\n            resetState(state);\n        } else if (e.code == 'KeyA') {\n            e.preventDefault();\n            if (e.ctrlKey) {\n                state.seeAll = !state.seeAll;\n            } else {\n                const speed = (state.shiftModifierActive || e.shiftKey || (e.timeStamp - state.shiftUpLastTimeStamp) < 1.0) ? 2 : 1;\n                tryMovePlayer(state, -speed, 0);\n            }\n        } else {\n            const speed = (state.shiftModifierActive || e.shiftKey || (e.timeStamp - state.shiftUpLastTimeStamp) < 1.0) ? 2 : 1;\n            if (e.code == 'ArrowLeft' || e.code == 'Numpad4' || e.code == 'KeyA' || e.code == 'KeyH') {\n                e.preventDefault();\n                tryMovePlayer(state, -speed, 0);\n            } else if (e.code == 'ArrowRight' || e.code == 'Numpad6' || e.code == 'KeyD' || e.code == 'KeyL') {\n                e.preventDefault();\n                tryMovePlayer(state, speed, 0);\n            } else if (e.code == 'ArrowDown' || e.code == 'Numpad2' || e.code == 'KeyS' || e.code == 'KeyJ') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, -speed);\n            } else if (e.code == 'ArrowUp' || e.code == 'Numpad8' || e.code == 'KeyW' || e.code == 'KeyK') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, speed);\n            }\n        }\n\n        state.shiftModifierActive = false;\n    }\n\n    function onKeyUp(e: KeyboardEvent) {\n        if (e.code == 'ShiftLeft' || e.code == 'ShiftRight') {\n            state.shiftUpLastTimeStamp = e.timeStamp;\n        }\n    }\n\n    function requestUpdateAndRender() {\n        requestAnimationFrame(now => updateAndRender(now, renderer, state));\n    }\n\n    function onWindowResized() {\n        requestUpdateAndRender();\n    }\n\n    window.addEventListener('resize', onWindowResized);\n\n    requestUpdateAndRender();\n}\n\nfunction tryMovePlayer(state: State, dx: number, dy: number) {\n\n    const player = state.player;\n\n    // Can't move if you're dead.\n\n    if (player.health == 0) {\n        return;\n    }\n\n    // Are we trying to exit the level?\n\n    const posNew = vec2.fromValues(player.pos[0] + dx, player.pos[1] + dy);\n    if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= state.gameMap.cells.sizeX || posNew[1] >= state.gameMap.cells.sizeY) {\n        return;\n    }\n\n    // Is something in the way?\n\n    if (blocked(state.gameMap, player.pos, posNew)) {\n        return;\n    }\n\n    player.pos = posNew;\n\n    switch(state.gameMap.cells.at(...posNew).type) {\n        case TerrainType.GroundWood:\n            state.sounds[\"footstepWood\"].volume(0.15);\n            state.sounds[\"footstepWood\"].play();\n            break;\n        case TerrainType.GroundNormal:\n            state.sounds[\"footstepGravel\"].volume(0.03);\n            state.sounds[\"footstepGravel\"].play();\n            break;\n        case TerrainType.GroundGrass:\n            state.sounds[\"footstepGrass\"].volume(0.05);\n            state.sounds[\"footstepGrass\"].play();\n            break;\n        case TerrainType.GroundWater:\n            state.sounds[\"footstepWater\"].volume(0.05);\n            state.sounds[\"footstepWater\"].play();\n            break;\n        case TerrainType.GroundMarble:\n            state.sounds[\"footstepTile\"].volume(0.05);\n            state.sounds[\"footstepTile\"].play();\n            break;\n        default:\n            state.sounds[\"footstepTile\"].volume(0.02);\n            state.sounds[\"footstepTile\"].play();\n            break;\n        }\n}\n\nfunction blocked(map: GameMap, posOld: vec2, posNew: vec2): boolean {\n    if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= map.cells.sizeX || posNew[1] >= map.cells.sizeY) {\n        return true;\n    }\n\n    if (posOld[0] == posNew[0] && posOld[1] == posNew[1]) {\n        return false;\n    }\n\n    const cell = map.cells.at(posNew[0], posNew[1]);\n    const tileType = cell.type;\n\n    if (cell.blocksPlayerMove) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowE && posNew[0] <= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowW && posNew[0] >= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowN && posNew[1] <= posOld[1]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowS && posNew[1] >= posOld[1]) {\n        return true;\n    }\n\n    if (map.guards.find((guard) => guard.pos[0] == posNew[0] && guard.pos[1] == posNew[1]) !== undefined) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction loadImage(src: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.src = src;\n    });\n}\n\nconst tileIndexForTerrainType: Array<number> = [\n    112, // TerrainType.GroundNormal,\n    116, // TerrainType.GroundGrass,\n    118, // TerrainType.GroundWater,\n    120, // TerrainType.GroundMarble,\n    122, // TerrainType.GroundWood,\n    122, // TerrainType.GroundWoodCreaky,\n    64, // TerrainType.Wall0000,\n    65, // TerrainType.Wall0001,\n    65, // TerrainType.Wall0010,\n    65, // TerrainType.Wall0011,\n    66, // TerrainType.Wall0100,\n    67, // TerrainType.Wall0101,\n    70, // TerrainType.Wall0110,\n    73, // TerrainType.Wall0111,\n    66, // TerrainType.Wall1000,\n    68, // TerrainType.Wall1001,\n    69, // TerrainType.Wall1010,\n    72, // TerrainType.Wall1011,\n    66, // TerrainType.Wall1100,\n    74, // TerrainType.Wall1101,\n    71, // TerrainType.Wall1110,\n    75, // TerrainType.Wall1111,\n    52, // TerrainType.OneWayWindowE,\n    53, // TerrainType.OneWayWindowW,\n    54, // TerrainType.OneWayWindowN,\n    55, // TerrainType.OneWayWindowS,\n    50, // TerrainType.PortcullisNS,\n    50, // TerrainType.PortcullisEW,\n    77, // TerrainType.DoorNS,\n    76, // TerrainType.DoorEW,\n];\n\nconst colorForTerrainType: Array<number> = [\n    colorPreset.lightGray, // TerrainType.GroundNormal,\n    colorPreset.darkGreen, // TerrainType.GroundGrass,\n    colorPreset.lightBlue, // TerrainType.GroundWater,\n    colorPreset.darkCyan, // TerrainType.GroundMarble,\n    colorPreset.darkBrown, // TerrainType.GroundWood,\n    colorPreset.darkBrown, // TerrainType.GroundWoodCreaky,\n    colorPreset.lightGray, // TerrainType.Wall0000,\n    colorPreset.lightGray, // TerrainType.Wall0001,\n    colorPreset.lightGray, // TerrainType.Wall0010,\n    colorPreset.lightGray, // TerrainType.Wall0011,\n    colorPreset.lightGray, // TerrainType.Wall0100,\n    colorPreset.lightGray, // TerrainType.Wall0101,\n    colorPreset.lightGray, // TerrainType.Wall0110,\n    colorPreset.lightGray, // TerrainType.Wall0111,\n    colorPreset.lightGray, // TerrainType.Wall1000,\n    colorPreset.lightGray, // TerrainType.Wall1001,\n    colorPreset.lightGray, // TerrainType.Wall1010,\n    colorPreset.lightGray, // TerrainType.Wall1011,\n    colorPreset.lightGray, // TerrainType.Wall1100,\n    colorPreset.lightGray, // TerrainType.Wall1101,\n    colorPreset.lightGray, // TerrainType.Wall1110,\n    colorPreset.lightGray, // TerrainType.Wall1111,\n    colorPreset.lightGray, // TerrainType.OneWayWindowE,\n    colorPreset.lightGray, // TerrainType.OneWayWindowW,\n    colorPreset.lightGray, // TerrainType.OneWayWindowN,\n    colorPreset.lightGray, // TerrainType.OneWayWindowS,\n    colorPreset.lightGray, // TerrainType.PortcullisNS,\n    colorPreset.lightGray, // TerrainType.PortcullisEW,\n    colorPreset.lightGray, // TerrainType.DoorNS,\n    colorPreset.lightGray, // TerrainType.DoorEW,\n];\n\nconst tileIndexForItemType: Array<number> = [\n    100, // ItemType.Chair,\n    98, // ItemType.Table,\n    96, // ItemType.Bush,\n    110, // ItemType.Coin,\n    89, // ItemType.DoorNS,\n    87, // ItemType.DoorEW,\n    50, // ItemType.PortcullisNS,\n    50, // ItemType.PortcullisEW,\n];\n\nconst colorForItemType: Array<number> = [\n    colorPreset.darkBrown, // ItemType.Chair,\n    colorPreset.darkBrown, // ItemType.Table,\n    colorPreset.darkGreen, // ItemType.Bush,\n    colorPreset.lightYellow, // ItemType.Coin,\n    colorPreset.darkBrown, // ItemType.DoorNS,\n    colorPreset.darkBrown, // ItemType.DoorEW,\n    colorPreset.lightGray, // ItemType.PortcullisNS,\n    colorPreset.lightGray, // ItemType.PortcullisEW,\n]\n\nconst unlitColor: number = colorPreset.lightBlue;\n\ntype AddGlyph = (x0: number, y0: number, x1: number, y1: number, glyphIndex: number, color: number) => void;\n\nfunction renderWorld(state: State, addGlyph: AddGlyph) {\n    for (let x = 0; x < state.gameMap.cells.sizeX; ++x) {\n        for (let y = 0; y < state.gameMap.cells.sizeY; ++y) {\n            const cell = state.gameMap.cells.at(x, y);\n            if (!cell.seen && !state.seeAll) {\n                continue;\n            }\n            const terrainType = cell.type;\n            const tileIndex = tileIndexForTerrainType[terrainType];\n            const color = cell.lit ? colorForTerrainType[terrainType] : unlitColor;\n            addGlyph(x, y, x+1, y+1, tileIndex, color);\n        }\n    }\n\n    for (const item of state.gameMap.items) {\n        const cell = state.gameMap.cells.at(item.pos[0], item.pos[1]);\n        if (!cell.seen && !state.seeAll) {\n            continue;\n        }\n        const tileIndex = tileIndexForItemType[item.type];\n        const color = cell.lit ? colorForItemType[item.type] : unlitColor;\n        addGlyph(item.pos[0], item.pos[1], item.pos[0] + 1, item.pos[1] + 1, tileIndex, color);\n    }\n}\n\nfunction renderPlayer(state: State, addGlyph: AddGlyph) {\n    const player = state.player;\n    const x = player.pos[0];\n    const y = player.pos[1];\n    const lit = state.gameMap.cells.at(x, y).lit;\n    const hidden = player.hidden(state.gameMap);\n    const color =\n        player.damagedLastTurn ? 0xff0000ff :\n        player.noisy ? colorPreset.lightCyan :\n        hidden ? 0xd0101010 :\n        !lit ? colorPreset.lightBlue :\n        colorPreset.lightGray;\n\n    addGlyph(x, y, x+1, y+1, 32, color);\n}\n\nfunction renderGuards(state: State, addGlyph: AddGlyph) {\n    for (const guard of state.gameMap.guards) {\n        const tileIndex = 33 + tileIndexOffsetForDir(guard.dir);\n        const cell = state.gameMap.cells.at(guard.pos[0], guard.pos[1]);\n\n        const visible = state.seeAll || cell.seen || guard.speaking;\n\n        if (!visible && vec2.squaredDistance(state.player.pos, guard.pos) > 36) {\n            continue;\n        }\n\n        const color =\n            !visible ? colorPreset.darkGray :\n            (guard.mode == GuardMode.Patrol && !guard.speaking && !cell.lit) ? unlitColor :\n            colorPreset.lightMagenta;\n\n        addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, tileIndex, color);\n    }\n}\n\nfunction tileIndexOffsetForDir(dir: vec2): number {\n    if (dir[1] > 0) {\n        return 1;\n    } else if (dir[1] < 0) {\n        return 3;\n    } else if (dir[0] > 0) {\n        return 0;\n    } else if (dir[0] < 0) {\n        return 2;\n    } else {\n        return 3;\n    }\n}\n\nfunction createCamera(posPlayer: vec2): Camera {\n    const camera = {\n        position: vec2.create(),\n        velocity: vec2.create(),\n    };\n\n    vec2.copy(camera.position, posPlayer);\n    vec2.zero(camera.velocity);\n\n    return camera;\n}\n\nfunction initState(sounds:Howls): State {\n    const level = 3;\n    const gameMap = createGameMap(level);\n\n    return {\n        tLast: undefined,\n        shiftModifierActive: false,\n        shiftUpLastTimeStamp: -Infinity,\n        player: new Player(gameMap.playerStartPos),\n        seeAll : true,\n        camera: createCamera(gameMap.playerStartPos),\n        sounds: sounds,\n        level: level,\n        gameMap: gameMap,\n    };\n}\n\nfunction resetState(state: State) {\n    const gameMap = createGameMap(state.level);\n\n    state.player = new Player(gameMap.playerStartPos);\n    state.camera = createCamera(gameMap.playerStartPos);\n    state.gameMap = gameMap;\n}\n\nfunction updateAndRender(now: number, renderer: Renderer, state: State) {\n    const t = now / 1000;\n    const dt = (state.tLast === undefined) ? 0 : Math.min(1/30, t - state.tLast);\n    state.tLast = t;\n\n    if (dt > 0) {\n        updateState(state, dt);\n    }\n\n    renderScene(renderer, state);\n\n    requestAnimationFrame(now => updateAndRender(now, renderer, state));\n}\n\nfunction updateState(state: State, dt: number) {\n    updateCamera(state, dt);\n}\n\nfunction updateCamera(state: State, dt: number) {\n\n    // Update player follow\n\n    const posError = vec2.create();\n    vec2.subtract(posError, state.player.pos, state.camera.position);\n\n    const velError = vec2.create();\n    vec2.negate(velError, state.camera.velocity);\n\n    const kSpring = 8; // spring constant, radians/sec\n\n    const acc = vec2.create();\n    vec2.scale(acc, posError, kSpring**2);\n    vec2.scaleAndAdd(acc, acc, velError, 2*kSpring);\n\n    const velNew = vec2.create();\n    vec2.scaleAndAdd(velNew, state.camera.velocity, acc, dt);\n\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, state.camera.velocity, 0.5 * dt);\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, velNew, 0.5 * dt);\n    vec2.copy(state.camera.velocity, velNew);\n}\n\nfunction renderScene(renderer: Renderer, state: State) {\n    const screenSize = vec2.create();\n    renderer.beginFrame(screenSize);\n\n    const matScreenFromWorld = mat4.create();\n    setupViewMatrix(state, screenSize, matScreenFromWorld);\n\n    renderer.renderGlyphs.start(matScreenFromWorld, 1);\n    renderWorld(state, renderer.renderGlyphs.addGlyph);\n    renderPlayer(state, renderer.renderGlyphs.addGlyph);\n    renderGuards(state, renderer.renderGlyphs.addGlyph);\n    renderer.renderGlyphs.flush();\n}\n\nfunction setupViewMatrix(state: State, screenSize: vec2, matScreenFromWorld: mat4) {\n    const cxGame = state.camera.position[0];\n    const cyGame = state.camera.position[1];\n    const rGame = 18;\n    let rxGame: number, ryGame: number;\n    if (screenSize[0] < screenSize[1]) {\n        rxGame = rGame;\n        ryGame = rGame * screenSize[1] / screenSize[0];\n    } else {\n        ryGame = rGame;\n        rxGame = rGame * screenSize[0] / screenSize[1];\n    }\n\n    mat4.ortho(matScreenFromWorld, cxGame - rxGame, cxGame + rxGame, cyGame - ryGame, cyGame + ryGame, 1, -1);\n}\n\nfunction renderTextLines(renderer: Renderer, screenSize: vec2, lines: Array<string>) {\n    let maxLineLength = 0;\n    for (const line of lines) {\n        maxLineLength = Math.max(maxLineLength, line.length);\n    }\n\n    const minCharsX = 40;\n    const minCharsY = 22;\n    const scaleLargestX = Math.max(1, Math.floor(screenSize[0] / (8 * minCharsX)));\n    const scaleLargestY = Math.max(1, Math.floor(screenSize[1] / (16 * minCharsY)));\n    const scaleFactor = Math.min(scaleLargestX, scaleLargestY);\n    const pixelsPerCharX = 8 * scaleFactor;\n    const pixelsPerCharY = 16 * scaleFactor;\n    const linesPixelSizeX = maxLineLength * pixelsPerCharX;\n    const numCharsX = screenSize[0] / pixelsPerCharX;\n    const numCharsY = screenSize[1] / pixelsPerCharY;\n    const offsetX = Math.floor((screenSize[0] - linesPixelSizeX) / -2) / pixelsPerCharX;\n    const offsetY = (lines.length + 2) - numCharsY;\n\n    const matScreenFromTextArea = mat4.create();\n    mat4.ortho(\n        matScreenFromTextArea,\n        offsetX,\n        offsetX + numCharsX,\n        offsetY,\n        offsetY + numCharsY,\n        1,\n        -1);\n    renderer.renderGlyphs.start(matScreenFromTextArea, 0);\n\n    const colorText = 0xffeeeeee;\n    const colorBackground = 0xe0555555;\n\n    // Draw a stretched box to make a darkened background for the text.\n    renderer.renderGlyphs.addGlyph(\n        -1, -1, maxLineLength + 1, lines.length + 1,\n        219,\n        colorBackground\n    );\n\n    for (let i = 0; i < lines.length; ++i) {\n        const row = lines.length - (1 + i);\n        for (let j = 0; j < lines[i].length; ++j) {\n            const col = j;\n            const ch = lines[i];\n            if (ch === ' ') {\n                continue;\n            }\n            const glyphIndex = lines[i].charCodeAt(j);\n            renderer.renderGlyphs.addGlyph(\n                col, row, col + 1, row + 1,\n                glyphIndex,\n                colorText\n            );\n        }\n    }\n\n    renderer.renderGlyphs.flush();\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lW8yX\")).toString();"],"names":["$962dfe94de155236$export$e9830bc863290a54","$962dfe94de155236$export$d2b4acf069bf09f5","$9b54a0058cb4baa9$export$4d0734ad15726738","GuardMode","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","create","clone","v","fromValues","x0","x1","copy","result","set","add","a","b","subtract","multiply","scale","scaleAndAdd","distance","x","y","Math","hypot","squaredDistance","squaredLength","negate","dot","lerp","t","zero","ortho","left","right","bottom","top","near","far","lr","bt","nf","$9b54a0058cb4baa9$export$aaedb44a0fd0f42b","constructor","pos","map","this","dir","mode","Patrol","speaking","hasMoved","heardThief","hearingGuard","heardGuard","heardGuardPos","goal","modeTimeout","regionGoal","$10c35e7c2a1f8a6c$export$1b965bd728e66949","regionPrev","setupGoalRegion","cells","at","region","$10c35e7c2a1f8a6c$export$47dc3946656b4c14","sizeX","sizeY","initialValue","values","Uint8Array","fill","value","get","$10c35e7c2a1f8a6c$export$1baa12a9812549c7","Int32Array","$10c35e7c2a1f8a6c$export$1bd3aab7cfc60670","TerrainType","$10c35e7c2a1f8a6c$export$6b828f5d89445818","size","Array","type","GroundNormal","moveCost","Infinity","blocksPlayerMove","blocksPlayerSight","blocksSight","blocksSound","hidesPlayer","lit","seen","console","assert","$10c35e7c2a1f8a6c$export$1fc8f52ad1810e52","ItemType","$10c35e7c2a1f8a6c$export$af86814533211557","itemType","Chair","Table","Bush","Coin","DoorNS","DoorEW","PortcullisNS","PortcullisEW","$10c35e7c2a1f8a6c$export$2616165974278734","health","gold","noisy","damagedLastTurn","turnsRemainingUnderwater","applyDamage","d","min","hidden","undefined","guards","find","guard","ChaseVisibleTarget","GroundWater","$7defb8b0b8d2cc00$var$roomSizeX","$7defb8b0b8d2cc00$var$roomSizeY","$7defb8b0b8d2cc00$var$outerBorder","$7defb8b0b8d2cc00$var$RoomType","RoomType","$7defb8b0b8d2cc00$export$c6e04b122d41de8c","level","c","$7defb8b0b8d2cc00$var$randomInRange","$7defb8b0b8d2cc00$var$randomHouseWidth","$7defb8b0b8d2cc00$var$randomHouseDepth","inside","halfX","floor","$7defb8b0b8d2cc00$var$makeSiheyuanRoomGrid","offsetX","offsetY","mirrorX","mirrorY","roomsX","roomsY","xMid","yMid","roomOffsetX","Number","MIN_SAFE_INTEGER","roomOffsetY","max","z","$7defb8b0b8d2cc00$var$offsetWalls","cx","cy","mapSizeX","mapSizeY","rx","ry","y0","y1","cell","GroundGrass","isInside","$7defb8b0b8d2cc00$var$plotNSWall","$7defb8b0b8d2cc00$var$plotEWWall","$7defb8b0b8d2cc00$var$plotWalls","patrolRegions","patrolRoutes","items","playerStartPos","totalLoot","rooms","adjacencies","posStart","roomIndex","push","roomType","Exterior","group","depth","posMin","posMax","edges","group_index","PublicRoom","PublicCourtyard","adjacencyRows","adjacencyRow","origin","room_left","room_right","next_matching","door","x0_upper","x0_lower","x1_upper","x1_lower","row","j","adj0","adj1","a1","ry0","ry1","row0","row1","y0_left","y0_right","y1_left","y1_right","n","$7defb8b0b8d2cc00$var$computeAdjacencies","adj","i0","i1","$7defb8b0b8d2cc00$var$storeAdjacenciesInRooms","edgeSets","array","temp","$7defb8b0b8d2cc00$var$shuffleArray","$7defb8b0b8d2cc00$var$getEdgeSets","$7defb8b0b8d2cc00$var$joinGroups","edgeSet","addedDoor","group0","group1","random","room_type0","room_type1","$7defb8b0b8d2cc00$var$frontDoorAdjacencyIndex","$7defb8b0b8d2cc00$var$connectRooms","unvisited","roomsToVisit","iRoom","iiRoom","iAdj","iRoomNeighbor","maxDepth","room","targetNumMasterRooms","numMasterRooms","PrivateRoom","PrivateCourtyard","changed","$7defb8b0b8d2cc00$var$assignRoomTypes","includeRoom","trimmed","numExits","roomPatrolRegion","$7defb8b0b8d2cc00$var$addPatrolRegion","region0","region1","$7defb8b0b8d2cc00$var$addPatrolRoute","$7defb8b0b8d2cc00$var$generatePatrolRoutes","type0","type1","$7defb8b0b8d2cc00$var$isCourtyardRoomType","p","offset","walls","k","$7defb8b0b8d2cc00$var$oneWayWindowTerrainTypeFromDir","k_end","windowType","q","installMasterSuiteDoor","orientNS","roomTypeLeft","roomTypeRight","$7defb8b0b8d2cc00$var$placeItem","$7defb8b0b8d2cc00$var$renderWalls","cellType","GroundWood","GroundMarble","dx","dy","$7defb8b0b8d2cc00$var$tryPlaceBush","Wall0000","$7defb8b0b8d2cc00$var$tryPlaceTable","$7defb8b0b8d2cc00$var$tryPlaceChair","$7defb8b0b8d2cc00$var$renderRooms","$7defb8b0b8d2cc00$var$createExits","numRooms","$7defb8b0b8d2cc00$var$tryPlaceLoot","$7defb8b0b8d2cc00$var$placeLoot","sx","sy","$7defb8b0b8d2cc00$var$placeExteriorBushes","$7defb8b0b8d2cc00$var$placeFrontPillars","numGuards","$7defb8b0b8d2cc00$var$generateInitialGuardPos","$7defb8b0b8d2cc00$var$placeGuards","$7defb8b0b8d2cc00$var$markExteriorAsSeen","isWall","Wall1111","isWindow","OneWayWindowE","OneWayWindowS","isWater","item","$7defb8b0b8d2cc00$var$cacheCellInfo","reduce","$7defb8b0b8d2cc00$var$wallTypeFromNeighbors","$7defb8b0b8d2cc00$var$neighboringWalls","$7defb8b0b8d2cc00$var$fixupWalls","groupFrom","groupTo","iPatrolRegion","$7defb8b0b8d2cc00$var$oneWayWindowTerrainType","OneWayWindowN","OneWayWindowW","$7defb8b0b8d2cc00$var$doorAdjacent","$7defb8b0b8d2cc00$var$isItemAtPos","neighbors","$7defb8b0b8d2cc00$var$isWall","terrainType","wallBits","$e3d6ee63ed1479b9$export$53ae2f996c64e9a","gl","images","textures","image","numGlyphsX","numGlyphsY","numGlyphs","srcGlyphSizeX","naturalWidth","srcGlyphSizeY","naturalHeight","scaleFactor","dstGlyphSizeX","dstGlyphSizeY","canvas","document","createElement","width","height","ctx","getContext","imageSmoothingEnabled","drawImage","imageData","getImageData","pixels","data","buffer","texture","createTexture","bindTexture","TEXTURE_2D_ARRAY","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","NEAREST","texImage3D","RGBA","UNSIGNED_BYTE","generateMipmap","$e3d6ee63ed1479b9$var$createTextureFromImage","renderer","beginFrame","$e3d6ee63ed1479b9$var$createBeginFrame","renderGlyphs","$e3d6ee63ed1479b9$var$createGlyphRenderer","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","clearColor","screenSize","parentElement","parentNode","rect","getBoundingClientRect","$e3d6ee63ed1479b9$var$resizeCanvasToDisplaySize","screenX","clientWidth","screenY","clientHeight","viewport","clear","COLOR_BUFFER_BIT","attribs","vPosition","vTexcoord","vColor","program","vsSource","fsSource","vertexShader","$e3d6ee63ed1479b9$var$loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","attrib","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","$e3d6ee63ed1479b9$var$initShaderProgram","uProjectionMatrixLoc","getUniformLocation","uOpacityLoc","maxQuads","numVertices","bytesPerVertex","Float32Array","BYTES_PER_ELEMENT","Uint32Array","wordsPerQuad","vertexData","ArrayBuffer","vertexDataAsFloat32","vertexDataAsUint32","vertexBuffer","createBuffer","numQuads","matScreenFromWorldCached","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","bufferData","DYNAMIC_DRAW","indices","Uint16Array","indexBuffer","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","$e3d6ee63ed1479b9$var$createGlyphIndexBuffer","flushQuads","useProgram","uniform1i","uniformMatrix4fv","bufferSubData","drawElements","TRIANGLES","UNSIGNED_SHORT","start","matScreenFromWorld","textureIndex","activeTexture","TEXTURE0","addGlyph","glyphIndex","color","srcBase","flush","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","$f89d8ffbdc18f2ab$export$b791fe48eec8032a","HowlerGlobal1","init","prototype","self","Howler1","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","createBufferSource","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl1","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound1","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","index","splice","remCache","cache","on","events","off","isId","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","Howler","Howl","$parcel$global","HowlerGlobal","Sound","_super","_pos","_orientation","stereo","pan","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","$2932c1ccb152d82b$exports","URL","resolve","import","meta","toString","$8978dcab5771f3ee$exports","$8ced2edf4937d357$exports","$ff8f6f78d583cfcc$exports","$523e85573fbedc7e$export$e501447ddb8932e4","footstepWood","footstepTile","footstepWater","footstepGravel","footstepGrass","$7623f4cf7321701d$exports","$42c3db1e5be65f46$export$430774e3f59aae50","$42c3db1e5be65f46$export$7faf1229eaed2d5a","$42c3db1e5be65f46$export$45287c80362236a","$42c3db1e5be65f46$export$8e7e4e76fd842548","$42c3db1e5be65f46$export$7b0d29b70b435c21","$42c3db1e5be65f46$export$f7bd452d85438018","$42c3db1e5be65f46$export$ce3d146c023b50e3","$735190d7854f71d4$exports","$e46db5192eb49d53$var$main","querySelector","alpha","gameMap","tLast","shiftModifierActive","shiftUpLastTimeStamp","player","seeAll","camera","$e46db5192eb49d53$var$createCamera","$e46db5192eb49d53$var$initState","requestUpdateAndRender","requestAnimationFrame","$e46db5192eb49d53$var$updateAndRender","body","preventDefault","$e46db5192eb49d53$var$resetState","ctrlKey","speed","shiftKey","timeStamp","$e46db5192eb49d53$var$tryMovePlayer","posNew","posOld","tileType","$e46db5192eb49d53$var$blocked","$e46db5192eb49d53$var$loadImage","reject","img","Image","$010dd75d1c964311$exports","all","$e46db5192eb49d53$var$tileIndexForTerrainType","$e46db5192eb49d53$var$colorForTerrainType","$e46db5192eb49d53$var$tileIndexForItemType","$e46db5192eb49d53$var$colorForItemType","$e46db5192eb49d53$var$unlitColor","$e46db5192eb49d53$var$tileIndexOffsetForDir","posPlayer","position","velocity","dt","posError","velError","kSpring","acc","velNew","$e46db5192eb49d53$var$updateCamera","$e46db5192eb49d53$var$updateState","cxGame","cyGame","rGame","rxGame","ryGame","$e46db5192eb49d53$var$setupViewMatrix","tileIndex","$e46db5192eb49d53$var$renderWorld","$e46db5192eb49d53$var$renderPlayer","visible","$e46db5192eb49d53$var$renderGuards","$e46db5192eb49d53$var$renderScene"],"version":3,"file":"index.95607383.js.map"}