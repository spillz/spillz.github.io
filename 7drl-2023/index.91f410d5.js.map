{"mappings":"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","sources":["src/my-matrix.ts","src/random.ts","src/guard.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-94f534554daddb1e.js","src/game-map.ts","src/create-map.ts","src/render.ts","src/color-preset.ts","node_modules/@parcel/runtime-js/lib/runtime-54fa5cc5c5b21ef8.js","node_modules/@parcel/runtime-js/lib/runtime-08923b31c80c9c62.js","node_modules/@parcel/runtime-js/lib/runtime-42ce7658e8d716bf.js","node_modules/@parcel/runtime-js/lib/runtime-9ed7e425779df8a2.js","src/tilesets.ts","node_modules/@parcel/runtime-js/lib/runtime-c77295b30a9e24d3.js","node_modules/howler/dist/howler.js","node_modules/@parcel/runtime-js/lib/runtime-7e314aed8a58a3df.js","node_modules/@parcel/runtime-js/lib/runtime-73c8758edd316493.js","node_modules/@parcel/runtime-js/lib/runtime-e40b32cc89bf704f.js","node_modules/@parcel/runtime-js/lib/runtime-6703f2d72ecfdf7d.js","node_modules/@parcel/runtime-js/lib/runtime-6f27d5afa459649e.js","src/audio.ts","node_modules/@parcel/runtime-js/lib/runtime-68f120033ac9da6d.js","node_modules/@parcel/runtime-js/lib/runtime-d2f6f4647ad9e44d.js","node_modules/@parcel/runtime-js/lib/runtime-9cec34d20b4aab0a.js","node_modules/@parcel/runtime-js/lib/runtime-6fe88d2b5ac74157.js","node_modules/@parcel/runtime-js/lib/runtime-4eb9517684e2af85.js","node_modules/@parcel/runtime-js/lib/runtime-abfb1e207e722598.js","node_modules/@parcel/runtime-js/lib/runtime-a1cadea98cb67996.js","node_modules/@parcel/runtime-js/lib/runtime-852ed8125d855fbc.js","node_modules/@parcel/runtime-js/lib/runtime-2da0f777b190ea67.js","node_modules/@parcel/runtime-js/lib/runtime-e163fa2f17243e1b.js","node_modules/@parcel/runtime-js/lib/runtime-971172cab312c2fa.js","node_modules/@parcel/runtime-js/lib/runtime-0e5f11700219fb57.js","node_modules/@parcel/runtime-js/lib/runtime-f0f1ec00eca64d86.js","node_modules/@parcel/runtime-js/lib/runtime-11ab6e7bb45eca49.js","node_modules/@parcel/runtime-js/lib/runtime-4f7c6fed8bee8407.js","node_modules/@parcel/runtime-js/lib/runtime-1d2820d80b2021c4.js","node_modules/@parcel/runtime-js/lib/runtime-a2f3a4e6791f4154.js","node_modules/@parcel/runtime-js/lib/runtime-9f119f4c4656feff.js","node_modules/@parcel/runtime-js/lib/runtime-2d393255581ccbcc.js","node_modules/@parcel/runtime-js/lib/runtime-3f13c2cd17c95c7d.js","node_modules/@parcel/runtime-js/lib/runtime-78f57f60fe27b0bf.js","node_modules/@parcel/runtime-js/lib/runtime-7bc92d4628b5ccfb.js","node_modules/@parcel/runtime-js/lib/runtime-e536d66872cd45b5.js","node_modules/@parcel/runtime-js/lib/runtime-13c1a49b4a31a7fc.js","node_modules/@parcel/runtime-js/lib/runtime-2c2e8cb40a3d46b9.js","node_modules/@parcel/runtime-js/lib/runtime-293579d08e0fe2fd.js","node_modules/@parcel/runtime-js/lib/runtime-497e41ea7ceddf02.js","node_modules/@parcel/runtime-js/lib/runtime-a247b3993449974f.js","src/game.ts"],"sourcesContent":["export { vec2, mat4 };\n\ntype vec2 = [number, number];\ntype mat4 =\n    [number, number, number, number,\n     number, number, number, number,\n     number, number, number, number,\n     number, number, number, number];\n\nnamespace vec2 {\n    export function create(): vec2 {\n        return [0, 0];\n    }\n\n    export function clone(v: vec2): vec2 {\n        return [v[0], v[1]];\n    }\n\n    export function fromValues(x0: number, x1: number): vec2 {\n        return [x0, x1];\n    }\n\n    export function copy(result: vec2, v: vec2) {\n        result[0] = v[0];\n        result[1] = v[1];\n    }\n\n    export function set(result: vec2, x0: number, x1: number) {\n        result[0] = x0;\n        result[1] = x1;\n    }\n\n    export function add(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] + b[0];\n        result[1] = a[1] + b[1];\n    }\n\n    export function subtract(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] - b[0];\n        result[1] = a[1] - b[1];\n    }\n\n    export function multiply(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] * b[0];\n        result[1] = a[1] * b[1];\n    }\n\n    export function scale(result: vec2, a: vec2, scale: number) {\n        result[0] = a[0] * scale;\n        result[1] = a[1] * scale;\n    }\n\n    export function scaleAndAdd(result: vec2, a: vec2, b: vec2, scale: number) {\n        result[0] = a[0] + b[0] * scale;\n        result[1] = a[1] + b[1] * scale;\n    }\n\n    export function distance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return Math.hypot(x, y);\n    }\n\n    export function squaredDistance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return x * x + y * y;\n    }\n\n    export function length(a: vec2): number {\n        return Math.hypot(a[0], a[1]);\n    }\n\n    export function squaredLength(a: vec2): number {\n        const x = a[0];\n        const y = a[1];\n        return x * x + y * y;\n    }\n\n    export function negate(result: vec2, a: vec2) {\n        result[0] = -a[0];\n        result[1] = -a[1];\n    }\n\n    export function dot(a: vec2, b: vec2): number {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n\n    export function lerp(result: vec2, a: vec2, b: vec2, t: number) {\n        result[0] = a[0] + t * (b[0] - a[0]);\n        result[1] = a[1] + t * (b[1] - a[1]);\n    }\n\n    export function zero(result: vec2) {\n        result[0] = 0;\n        result[1] = 0;\n    }\n}\n\nnamespace mat4 {\n    export function create(): mat4 {\n        return [\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n        ];\n    }\n\n    export function copy(result: mat4, a: mat4) {\n        result[0] = a[0];\n        result[1] = a[1];\n        result[2] = a[2];\n        result[3] = a[3];\n        result[4] = a[4];\n        result[5] = a[5];\n        result[6] = a[6];\n        result[7] = a[7];\n        result[8] = a[8];\n        result[9] = a[9];\n        result[10] = a[10];\n        result[11] = a[11];\n        result[12] = a[12];\n        result[13] = a[13];\n        result[14] = a[14];\n        result[15] = a[15];\n    }\n\n    export function ortho(result: mat4, left: number, right: number, bottom: number, top: number, near: number, far: number) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        result[0] = -2 * lr;\n        result[1] = 0;\n        result[2] = 0;\n        result[3] = 0;\n        result[4] = 0;\n        result[5] = -2 * bt;\n        result[6] = 0;\n        result[7] = 0;\n        result[8] = 0;\n        result[9] = 0;\n        result[10] = 2 * nf;\n        result[11] = 0;\n        result[12] = (left + right) * lr;\n        result[13] = (top + bottom) * bt;\n        result[14] = (far + near) * nf;\n        result[15] = 1;\n    }\n}\n","export { randomInRange, shuffleArray };\n\nfunction randomInRange(n: number): number {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleArray<T>(array: Array<T>) {\n    for (let i = array.length - 1; i > 0; --i) {\n        let j = randomInRange(i + 1);\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n","export { Guard, GuardMode, guardActAll, lineOfSight };\n\nimport { Float64Grid, GameMap, Item, ItemType, Player, TerrainType, GuardStates } from './game-map';\nimport { vec2 } from './my-matrix';\nimport { randomInRange } from './random';\nimport { Howls } from './audio';\n\nenum MoveResult {\n    StoodStill,\n    Moved,\n    BumpedPlayer,\n}\n\nenum GuardMode {\n    Patrol,\n    Look,\n    Listen,\n    ChaseVisibleTarget,\n    MoveToLastSighting,\n    MoveToLastSound,\n    MoveToGuardShout,\n    RelightTorch,\n    PostRelightTorch,\n}\n\nclass Guard {\n    pos: vec2;\n    dir: vec2;\n    mode: GuardMode;\n    hasTorch: boolean;\n    speaking: boolean;\n    hasMoved: boolean;\n    heardThief: boolean;\n    hearingGuard: boolean;\n    heardGuard: boolean;\n    heardGuardPos: vec2;\n\n    // Chase\n    goal: vec2;\n    modeTimeout: number;\n\n    // Patrol\n    patrolPath: Array<vec2>;\n    patrolPathIndex: number;\n    patrolReverse: boolean;\n    patrolLoops: boolean;\n\n    constructor(patrolPath: Array<vec2>, map: GameMap) {\n        const pathIndexStart = randomInRange(patrolPath.length);\n        const posStart = patrolPath[pathIndexStart];\n        this.pos = vec2.clone(posStart);\n        this.dir = vec2.fromValues(1, 0);\n        this.mode = GuardMode.Patrol;\n        this.hasTorch = false;\n        this.speaking = false;\n        this.hasMoved = false;\n        this.heardThief = false;\n        this.hearingGuard = false;\n        this.heardGuard = false;\n        this.heardGuardPos = vec2.clone(posStart);\n        this.goal = vec2.clone(posStart);\n        this.modeTimeout = 0;\n        this.patrolPath = patrolPath;\n        this.patrolPathIndex = pathIndexStart;\n        this.patrolReverse = false;\n        this.patrolLoops = patrolPathLoops(patrolPath);\n\n        this.updateDirInitial();\n    }\n\n    overheadIcon(): number {\n        if (isRelaxedGuardMode(this.mode)) {\n            return GuardStates.Relaxed;\n        }\n    \n        return (this.mode == GuardMode.ChaseVisibleTarget) ? GuardStates.Chasing : GuardStates.Alerted;\n    }\n\n    act(/* popups: Popups, lines: Lines, */ sounds:Howls, player: Player, map: GameMap, shouts: Array<Shout>) {\n        const modePrev = this.mode;\n        const posPrev = vec2.clone(this.pos);\n    \n        // See if senses will kick us into a new mode\n\n        if (!isRelaxedGuardMode(this.mode)) {\n            if (this.seesThief(map, player)) {\n                vec2.copy(this.goal, player.pos);\n                this.mode = GuardMode.ChaseVisibleTarget;\n            } else if (this.mode === GuardMode.ChaseVisibleTarget) {\n                vec2.copy(this.goal, player.pos);\n                this.mode = GuardMode.MoveToLastSighting;\n                this.modeTimeout = 3;\n            }\n        }\n\n        if (this.mode !== GuardMode.ChaseVisibleTarget) {\n            if (this.heardGuard) {\n                this.mode = GuardMode.MoveToGuardShout;\n                this.modeTimeout = 2 + randomInRange(4);\n                vec2.copy(this.goal, this.heardGuardPos);\n            }\n    \n            if (this.heardThief) {\n                if (this.adjacentTo(player.pos)) {\n                    this.mode = GuardMode.ChaseVisibleTarget;\n                    vec2.copy(this.goal, player.pos);\n                    sounds[\"guardChasing\"].play(0.6);\n                } else if (isRelaxedGuardMode(this.mode)) {\n                    this.mode = GuardMode.Listen;\n                    this.modeTimeout = 2 + randomInRange(4);\n                    updateDir(this.dir, this.pos, player.pos);\n                    sounds[\"guardAlert\"].play(0.6);\n                } else {\n                    this.mode = GuardMode.MoveToLastSound;\n                    this.modeTimeout = 2 + randomInRange(4);\n                    vec2.copy(this.goal, player.pos);\n                }\n            }\n        }\n    \n        // Pass time in the current mode\n    \n        switch (this.mode) {\n        case GuardMode.Patrol:\n            this.patrolStep(map, player);\n            break;\n\n        case GuardMode.Look:\n        case GuardMode.Listen:\n            this.modeTimeout -= 1;\n            if (this.modeTimeout == 0) {\n                this.mode = GuardMode.Patrol;\n                sounds[\"guardStopAlert\"].play(0.6);\n            }\n            break;\n\n        case GuardMode.ChaseVisibleTarget:\n            if (this.adjacentTo(player.pos)) {\n                updateDir(this.dir, this.pos, this.goal);\n                if (modePrev == GuardMode.ChaseVisibleTarget) {\n                    if (!player.damagedLastTurn) {\n                        /* TODO\n                        popups.damage(this.pos, lines.damage.next());\n                        */\n                    }\n                    player.applyDamage(1);\n                }\n            } else {\n                this.moveTowardPosition(this.goal, map, player);\n            }\n            break;\n\n        case GuardMode.MoveToLastSighting:\n        case GuardMode.MoveToLastSound:\n        case GuardMode.MoveToGuardShout:\n            if (this.moveTowardPosition(this.goal, map, player) !== MoveResult.Moved) {\n                this.modeTimeout -= 1;\n            }\n\n            if (this.modeTimeout == 0) {\n                this.mode = GuardMode.Patrol;\n            }\n            break;\n\n        case GuardMode.RelightTorch:\n            if (this.adjacentTo(this.goal)) {\n                relightTorchAt(map, this.goal);\n                this.mode = GuardMode.PostRelightTorch;\n                this.modeTimeout = 3;\n            } else if (this.moveTowardPosition(this.goal, map, player) !== MoveResult.Moved) {\n                this.modeTimeout -= 1;\n                if (this.modeTimeout === 0) {\n                    this.mode = GuardMode.Patrol;\n                }\n            }\n            break;\n\n        case GuardMode.PostRelightTorch:\n            --this.modeTimeout;\n            if (this.modeTimeout <= 0) {\n                this.mode = GuardMode.Patrol;\n            }\n            break;\n        }\n    \n        // Update state based on target visibility from new position\n\n        if (this.seesThief(map, player)) {\n            if (isRelaxedGuardMode(this.mode) && !this.adjacentTo(player.pos)) {\n                this.mode = GuardMode.Look;\n                this.modeTimeout = 2 + randomInRange(4);\n                sounds[\"guardAlert\"].play(0.6);\n            } else {\n                vec2.copy(this.goal, player.pos);\n                updateDir(this.dir, this.pos, this.goal);\n                this.mode = GuardMode.ChaseVisibleTarget;\n                sounds[\"guardChasing\"].play(0.6);\n            }\n        } else if (this.mode == GuardMode.ChaseVisibleTarget) {\n            vec2.copy(this.goal, player.pos);\n            this.mode = GuardMode.MoveToLastSighting;\n            this.modeTimeout = 3;\n        } else if (this.mode === GuardMode.Patrol) {\n            const torch = torchNeedingRelighting(map, this.pos);\n            if (torch !== undefined) {\n                vec2.copy(this.goal, torch.pos);\n                this.mode = GuardMode.RelightTorch;\n                this.modeTimeout = 3;\n            } else if (posPrev[0] === this.pos[0] && posPrev[1] === this.pos[1]) {\n                const posLookAt = this.tryGetPosLookAt(map);\n                if (posLookAt !== undefined) {\n                    updateDir(this.dir, this.pos, posLookAt);\n                }\n            }\n        }\n    \n        // Clear heard-thief flag\n    \n        this.heardThief = false;\n    \n        // Say something to indicate state changes\n\n        /* TODO\n        if (let Some(line_iter) = lines_for_state_change(lines, modePrev, this.mode)) {\n            this.say(popups, player, see_all, line_iter.next());\n        }\n        */\n    \n        if (this.mode == GuardMode.ChaseVisibleTarget && modePrev != GuardMode.ChaseVisibleTarget) {\n            shouts.push({pos_shouter: this.pos, pos_target: player.pos});\n        }\n    }\n\n    adjacentTo(pos: vec2): boolean {\n        const dx = pos[0] - this.pos[0];\n        const dy = pos[1] - this.pos[1];\n        return Math.abs(dx) < 2 && Math.abs(dy) < 2;\n    }\n\n    seesThief(map: GameMap, player: Player): boolean {\n        const d = vec2.create();\n        vec2.subtract(d, player.pos, this.pos);\n        if (vec2.dot(this.dir, d) < 0) {\n            return false;\n        }\n    \n        let playerIsLit = map.cells.at(player.pos[0], player.pos[1]).lit;\n    \n        let d2 = vec2.squaredLength(d);\n        if (d2 >= this.sightCutoff(playerIsLit)) {\n            return false;\n        }\n    \n        if (!player.hidden(map) && lineOfSight(map, this.pos, player.pos)) {\n            return true;\n        }\n    \n        if (!isRelaxedGuardMode(this.mode) && Math.abs(d[0]) < 2 && Math.abs(d[1]) < 2) {\n            return true;\n        }\n    \n        return false;\n    }\n\n    cutoffLit(): number {\n        return (isRelaxedGuardMode(this.mode)) ? 40 : 75;\n    }\n    \n    cutoffUnlit(): number {\n        return (isRelaxedGuardMode(this.mode)) ? 3 : 33;\n    }\n    \n    sightCutoff(litTarget: boolean): number {\n        return litTarget ? this.cutoffLit() : this.cutoffUnlit();\n    }\n\n    patrolStep(map: GameMap, player: Player) {\n        let moveResult;\n\n        const onPatrolPath = this.patrolPath[this.patrolPathIndex][0] === this.pos[0] &&\n                             this.patrolPath[this.patrolPathIndex][1] === this.pos[1];\n\n        if (onPatrolPath) {\n            if (this.patrolReverse) {\n                if (this.patrolPathIndex === 0) {\n                    if (this.patrolLoops) {\n                        this.patrolPathIndex = this.patrolPath.length - 1;\n                    } else {\n                        this.patrolReverse = false;\n                        this.patrolPathIndex = 1;\n                    }\n                } else {\n                    --this.patrolPathIndex;\n                }\n            } else {\n                if (this.patrolPathIndex >= this.patrolPath.length - 1) {\n                    if (this.patrolLoops) {\n                        this.patrolPathIndex = 0;\n                    } else {\n                        this.patrolReverse = true;\n                        this.patrolPathIndex = this.patrolPath.length - 2;\n                    }\n                } else {\n                    ++this.patrolPathIndex;\n                }\n            }\n\n            moveResult = this.moveTowardPosition(this.patrolPath[this.patrolPathIndex], map, player);\n        } else {\n            moveResult = this.moveTowardPatrolPath(map, player);\n            this.findPatrolPathIndex();\n        }\n\n        if (moveResult === MoveResult.BumpedPlayer) {\n            this.mode = GuardMode.ChaseVisibleTarget;\n            vec2.copy(this.goal, player.pos);\n            updateDir(this.dir, this.pos, this.goal);\n        }\n\n        // TODO: Plot the back-and-forth paths explicitly, as well as the delays\n        // at the ends. When standing still, look for a window, torch, or table\n        // to face.\n    }\n\n    updateDirInitial()\n    {\n        let patrolPathIndexNext;\n        if (this.patrolReverse) {\n            if (this.patrolPathIndex === 0) {\n                if (this.patrolLoops) {\n                    patrolPathIndexNext = this.patrolPath.length - 1;\n                } else {\n                    patrolPathIndexNext = 1;\n                }\n            } else {\n                patrolPathIndexNext = this.patrolPathIndex - 1;\n            }\n        } else {\n            if (this.patrolPathIndex >= this.patrolPath.length - 1) {\n                if (this.patrolLoops) {\n                    patrolPathIndexNext = 0;\n                } else {\n                    patrolPathIndexNext = this.patrolPath.length - 2;\n                }\n            } else {\n                patrolPathIndexNext = this.patrolPathIndex + 1;\n            }\n        }\n\n        updateDir(this.dir, this.pos, this.patrolPath[patrolPathIndexNext]);\n    }\n\n    moveTowardPosition(posGoal: vec2, map: GameMap, player: Player): MoveResult {\n        const distanceField = map.computeDistancesToPosition(posGoal);\n        const posNext = posNextBest(map, distanceField, this.pos);\n\n        if (posNext[0] == this.pos[0] && posNext[1] == this.pos[1]) {\n            return MoveResult.StoodStill;\n        }\n\n        updateDir(this.dir, this.pos, posNext);\n\n        if (player.pos[0] == posNext[0] && player.pos[1] == posNext[1]) {\n            return MoveResult.BumpedPlayer;\n        }\n\n        vec2.copy(this.pos, posNext);\n        return MoveResult.Moved;\n    }\n\n    moveTowardPatrolPath(map: GameMap, player: Player): MoveResult {\n        const distanceField = map.computeDistancesToPatrolPath(this.patrolPath);\n        const posNext = posNextBest(map, distanceField, this.pos);\n\n        if (posNext[0] == this.pos[0] && posNext[1] == this.pos[1]) {\n            return MoveResult.StoodStill;\n        }\n\n        updateDir(this.dir, this.pos, posNext);\n\n        if (player.pos[0] == posNext[0] && player.pos[1] == posNext[1]) {\n            return MoveResult.BumpedPlayer;\n        }\n\n        vec2.copy(this.pos, posNext);\n        return MoveResult.Moved;\n    }\n\n    findPatrolPathIndex(): boolean {\n        // Search forward from guard's current path index\n        for (let iPatrolPos = this.patrolPathIndex; iPatrolPos < this.patrolPath.length; ++iPatrolPos) {\n            const posPath = this.patrolPath[iPatrolPos];\n            if (posPath[0] === this.pos[0] && posPath[1] === this.pos[1]) {\n                this.patrolPathIndex = iPatrolPos;\n                return true;\n            }\n        }\n        // Search backward from guard's current path index\n        for (let iPatrolPos = this.patrolPathIndex - 1; iPatrolPos >= 0; --iPatrolPos) {\n            const posPath = this.patrolPath[iPatrolPos];\n            if (posPath[0] === this.pos[0] && posPath[1] === this.pos[1]) {\n                this.patrolPathIndex = iPatrolPos;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    tryGetPosLookAt(map: GameMap): vec2 | undefined {\n        const x = this.pos[0];\n        const y = this.pos[1];\n        if (x > 0 && map.cells.at(x - 1, y).type == TerrainType.OneWayWindowW) {\n            return vec2.fromValues(x - 1, y);\n        } else if (x < map.cells.sizeX - 1 && map.cells.at(x + 1, y).type == TerrainType.OneWayWindowE) {\n            return vec2.fromValues(x + 1, y);\n        } else if (y > 0 && map.cells.at(x, y - 1).type == TerrainType.OneWayWindowS) {\n            return vec2.fromValues(x, y - 1);\n        } else if (y < map.cells.sizeY - 1 && map.cells.at(x, y + 1).type == TerrainType.OneWayWindowN) {\n            return vec2.fromValues(x, y + 1);\n        }\n\n        return undefined;\n    }\n}\n\nfunction isRelaxedGuardMode(guardMode: GuardMode): boolean {\n    return guardMode === GuardMode.Patrol ||\n        guardMode === GuardMode.RelightTorch ||\n        guardMode === GuardMode.PostRelightTorch;\n}\n\ntype Shout = {\n    pos_shouter: vec2; // where is the person shouting?\n    pos_target: vec2; // where are they reporting the player is?\n}\n\nfunction guardActAll(/* popups: Popups, lines: Lines, */sounds:Howls, map: GameMap, player: Player) {\n\n    // Mark if we heard a guard last turn, and clear the speaking flag.\n\n    for (const guard of map.guards) {\n        guard.heardGuard = guard.hearingGuard;\n        guard.hearingGuard = false;\n        guard.speaking = false;\n        guard.hasMoved = false;\n    }\n\n    // Update each guard for this turn.\n\n    const shouts: Array<Shout> = [];\n    for (const guard of map.guards) {\n        guard.act(/* popups, lines, */ sounds, player, map, shouts);\n        guard.hasMoved = true;\n    }\n\n    // Process shouts\n\n    for (const shout of shouts) {\n        alertNearbyGuards(map, shout);\n    }\n}\n\nfunction alertNearbyGuards(map: GameMap, shout: Shout) {\n    for (const guard of map.guardsInEarshot(shout.pos_shouter, 25)) {\n        if (guard.pos[0] != shout.pos_shouter[0] || guard.pos[1] != shout.pos_shouter[1]) {\n            guard.hearingGuard = true;\n            vec2.copy(guard.heardGuardPos, shout.pos_shouter);\n        }\n    }\n}\n\nfunction posNextBest(map: GameMap, distanceField: Float64Grid, posFrom: vec2): vec2 {\n    let costBest = Infinity;\n    let posBest = posFrom;\n\n    const posMin = vec2.fromValues(Math.max(0, posFrom[0] - 1), Math.max(0, posFrom[1] - 1));\n    const posMax = vec2.fromValues(Math.min(map.cells.sizeX, posFrom[0] + 2), Math.min(map.cells.sizeY, posFrom[1] + 2));\n\n    for (let x = posMin[0]; x < posMax[0]; ++x) {\n        for (let y = posMin[1]; y < posMax[1]; ++y) {\n            const cost = distanceField.get(x, y);\n            if (cost == Infinity) {\n                continue;\n            }\n\n            let pos = vec2.fromValues(x, y);\n            if (map.guardMoveCost(posFrom, pos) == Infinity) {\n                continue;\n            }\n\n            if (map.cells.at(pos[0], pos[1]).type == TerrainType.GroundWater) {\n                continue;\n            }\n\n            if (map.isGuardAt(pos[0], pos[1])) {\n                continue;\n            }\n\n            if (cost < costBest) {\n                costBest = cost;\n                posBest = pos;\n            }\n        }\n    }\n\n    return posBest;\n}\n\nfunction updateDir(dir: vec2, pos: vec2, posTarget: vec2) {\n    const dirTarget = vec2.create();\n    vec2.subtract(dirTarget, posTarget, pos);\n\n    const dirLeft = vec2.fromValues(-dir[1], dir[0]);\n\n    let dotForward = vec2.dot(dir, dirTarget);\n    let dotLeft = vec2.dot(dirLeft, dirTarget);\n\n    if (Math.abs(dotForward) >= Math.abs(dotLeft)) {\n        if (dotForward >= 0) {\n            // leave dir unchanged\n        } else {\n            vec2.negate(dir, dir);\n        }\n    } else if (Math.abs(dotLeft) > Math.abs(dotForward)) {\n        if (dotLeft >= 0) {\n            vec2.copy(dir, dirLeft);\n        } else {\n            vec2.negate(dir, dirLeft);\n        }\n    } else if (dotForward > 0) {\n        // leave dir unchanged\n    } else if (dotLeft >= 0) {\n        vec2.copy(dir, dirLeft);\n    } else {\n        vec2.negate(dir, dirLeft);\n    }\n}\n\nfunction torchNeedingRelighting(map: GameMap, posViewer: vec2): Item | undefined {\n    let bestItem = undefined;\n    let bestDistSquared = Infinity;\n    for (const item of map.items) {\n        if (item.type === ItemType.TorchUnlit) {\n            const distSquared = vec2.squaredDistance(item.pos, posViewer);\n            if (distSquared >= bestDistSquared) {\n                continue;\n            }\n            if (!lineOfSight(map, posViewer, item.pos)) {\n                continue;\n            }\n            bestDistSquared = distSquared;\n            bestItem = item;\n        }\n    }\n    return bestItem;\n}\n\nfunction relightTorchAt(map: GameMap, posTorch: vec2) {\n    for (const item of map.items) {\n        if (item.type === ItemType.TorchUnlit && item.pos[0] === posTorch[0] && item.pos[1] === posTorch[1]) {\n            item.type = ItemType.TorchLit;\n        }\n    }\n    map.computeLighting();\n}\n\nfunction lineOfSight(map: GameMap, from: vec2, to: vec2): boolean {\n    let x = from[0];\n    let y = from[1];\n\n    const dx = to[0] - x;\n    const dy = to[1] - y;\n\n    let ax = Math.abs(dx);\n    let ay = Math.abs(dy);\n\n    const x_inc = (dx > 0) ? 1 : -1;\n    const y_inc = (dy > 0) ? 1 : -1;\n\n    let error = ay - ax;\n\n    let n = ax + ay - 1;\n\n    ax *= 2;\n    ay *= 2;\n\n    while (n > 0) {\n        if (error > 0) {\n            y += y_inc;\n            error -= ax;\n        } else {\n            x += x_inc;\n            error += ay;\n        }\n\n        if (map.cells.at(x, y).blocksSight) {\n            return false;\n        }\n\n        --n;\n    }\n\n    return true;\n}\n\nfunction patrolPathLoops(patrolPath: Array<vec2>): boolean {\n    const dx = patrolPath[0][0] - patrolPath[patrolPath.length - 1][0];\n    const dy = patrolPath[0][1] - patrolPath[patrolPath.length - 1][1];\n    return (dx != 0 || dy != 0) && Math.abs(dx) < 2 && Math.abs(dy) < 2;\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"17fSe\\\":\\\"index.91f410d5.js\\\",\\\"k57aN\\\":\\\"tiles34.9ed4eaf2.png\\\",\\\"dwPvt\\\":\\\"tiles31color.e421b9f6.png\\\",\\\"7FSnQ\\\":\\\"tiles-sincity.0e9634a5.png\\\",\\\"8dSx0\\\":\\\"tiles.60aa3fc2.png\\\",\\\"kDrfW\\\":\\\"font.84b63647.png\\\",\\\"9HrbR\\\":\\\"footstep-wood.8da8b302.ogg\\\",\\\"2fyQO\\\":\\\"footstep-tile.ed285432.ogg\\\",\\\"4qSI0\\\":\\\"footstep-water.41ed0f5b.ogg\\\",\\\"3kwMs\\\":\\\"footstep-gravel.2ecfc65f.ogg\\\",\\\"3zakP\\\":\\\"footstep-grass.46fcb678.ogg\\\",\\\"9NYDb\\\":\\\"creak.49fa6d13.ogg\\\",\\\"hUD0w\\\":\\\"creak-2.8f57f1fb.ogg\\\",\\\"eV2HF\\\":\\\"creak-3.1e4b5faa.ogg\\\",\\\"ihcZV\\\":\\\"creak-4.3e291d2a.ogg\\\",\\\"l7al6\\\":\\\"creak-5.f876c9bf.ogg\\\",\\\"4m20I\\\":\\\"creak-6.ae516408.ogg\\\",\\\"l8Gs4\\\":\\\"squeak1.463f9d1d.wav\\\",\\\"91j7m\\\":\\\"squeak2.be5c76a8.wav\\\",\\\"dyBrj\\\":\\\"squeak3.f084da55.wav\\\",\\\"kO5BQ\\\":\\\"squeak4.f2ef2e0b.wav\\\",\\\"6DRtk\\\":\\\"whistle.5918f766.ogg\\\",\\\"8UIiY\\\":\\\"whistle-2.32e5d6d8.ogg\\\",\\\"dc6kq\\\":\\\"quiet out.2ef189b8.ogg\\\",\\\"giL0r\\\":\\\"ahh.ff9206c1.ogg\\\",\\\"1LirQ\\\":\\\"ahh-2.33246ada.ogg\\\",\\\"kcwN9\\\":\\\"rest me bones.b68e0578.ogg\\\",\\\"fr6SK\\\":\\\"Hmm.03ae5fff.ogg\\\",\\\"13ZtD\\\":\\\"hey.c2dc10b1.ogg\\\",\\\"cIW1u\\\":\\\"hey-2.cba2b90e.ogg\\\",\\\"8VThJ\\\":\\\"hey-3.740a622e.ogg\\\",\\\"dGACl\\\":\\\"What.4eb988df.ogg\\\",\\\"34VHX\\\":\\\"jumpin shadows.6d49b9a7.ogg\\\",\\\"8KwSJ\\\":\\\"jumpy.b035ac7c.ogg\\\",\\\"hRKbg\\\":\\\"oh well.f80735a4.ogg\\\",\\\"7P7XB\\\":\\\"get em.5382c5b9.ogg\\\",\\\"2eySC\\\":\\\"intruder.93636836.ogg\\\",\\\"61M6l\\\":\\\"lost em.684867cf.ogg\\\",\\\"bigld\\\":\\\"must have run.07dc197d.ogg\\\"}\"));","export {\n    BooleanGrid,\n    Cell,\n    CellGrid,\n    Float64Grid,\n    Int32Grid,\n    Item,\n    ItemType,\n    GameMap,\n    Player,\n    TerrainType,\n    GuardStates,\n    guardMoveCostForItemType,\n    maxPlayerHealth,\n};\n\nimport { Guard, GuardMode } from './guard';\nimport { vec2 } from './my-matrix';\n\nconst cardinalDirections: Array<vec2> = [\n    vec2.fromValues(-1, 0),\n    vec2.fromValues(1, 0),\n    vec2.fromValues(0, -1),\n    vec2.fromValues(0, 1),\n];\n\n// TODO: Figure out how to make a generic grid data structure\n\nclass BooleanGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Uint8Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: boolean) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Uint8Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: boolean) {\n        this.values.fill(value ? 1 : 0);\n    }\n\n    get(x: number, y: number): boolean {\n        return this.values[this.sizeX * y + x] !== 0;\n    }\n\n    set(x: number, y: number, value: boolean) {\n        this.values[this.sizeX * y + x] = value ? 1 : 0;\n    }\n}\n\nclass Int32Grid {\n    sizeX: number;\n    sizeY: number;\n    values: Int32Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Int32Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: number) {\n        this.values.fill(value);\n    }\n\n    get(x: number, y: number): number {\n        return this.values[this.sizeX * y + x];\n    }\n\n    set(x: number, y: number, value: number) {\n        this.values[this.sizeX * y + x] = value;\n    }\n}\n\nclass Float64Grid {\n    sizeX: number;\n    sizeY: number;\n    values: Float64Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Float64Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: number) {\n        this.values.fill(value);\n    }\n\n    get(x: number, y: number): number {\n        return this.values[this.sizeX * y + x];\n    }\n\n    set(x: number, y: number, value: number) {\n        this.values[this.sizeX * y + x] = value;\n    }\n}\n\nenum TerrainType {\n    GroundNormal,\n    GroundGrass,\n    GroundWater,\n    GroundMarble,\n    GroundWood,\n    GroundWoodCreaky,\n\n    //  NSEW\n    Wall0000,\n    Wall0001,\n    Wall0010,\n    Wall0011,\n    Wall0100,\n    Wall0101,\n    Wall0110,\n    Wall0111,\n    Wall1000,\n    Wall1001,\n    Wall1010,\n    Wall1011,\n    Wall1100,\n    Wall1101,\n    Wall1110,\n    Wall1111,\n\n    OneWayWindowE,\n    OneWayWindowW,\n    OneWayWindowN,\n    OneWayWindowS,\n    PortcullisNS,\n    PortcullisEW,\n    DoorNS,\n    DoorEW,\n    GardenDoorNS,\n    GardenDoorEW,\n}\n\ntype Cell = {\n    type: TerrainType;\n    moveCost: number;\n    blocksPlayerMove: boolean;\n    blocksPlayerSight: boolean;\n    blocksSight: boolean;\n    blocksSound: boolean;\n    hidesPlayer: boolean;\n    lit: boolean;\n    seen: boolean;\n}\n\nclass CellGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Array<Cell>;\n\n    constructor(sizeX: number, sizeY: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        const size = sizeX * sizeY;\n        this.values = new Array<Cell>(size);\n        for (let i = 0; i < size; ++i) {\n            this.values[i] = {\n                type: TerrainType.GroundNormal,\n                moveCost: Infinity,\n                blocksPlayerMove: false,\n                blocksPlayerSight: false,\n                blocksSight: false,\n                blocksSound: false,\n                hidesPlayer: false,\n                lit: false,\n                seen: false,\n            };\n        }\n    }\n\n    at(x: number, y: number): Cell {\n        const i = this.sizeX * y + x;\n        console.assert(i >= 0);\n        console.assert(i < this.values.length);\n        return this.values[i];\n    }\n\n    index(x: number, y:number): number {\n        return this.sizeX * y + x;\n    }\n}\n\nenum GuardStates {\n    Relaxed,\n    Alerted,\n    Chasing,\n}\n\nenum ItemType {\n    Chair,\n    Table,\n    Bush,\n    Coin,\n    DoorNS,\n    DoorEW,\n    PortcullisNS,\n    PortcullisEW,\n    TorchUnlit,\n    TorchLit,\n}\n\ntype Item = {\n    pos: vec2;\n    type: ItemType;\n}\n\nfunction guardMoveCostForItemType(itemType: ItemType): number {\n    switch (itemType) {\n        case ItemType.Chair: return 4;\n        case ItemType.Table: return 10;\n        case ItemType.Bush: return 10;\n        case ItemType.Coin: return 0;\n        case ItemType.DoorNS: return 0;\n        case ItemType.DoorEW: return 0;\n        case ItemType.PortcullisNS: return 0;\n        case ItemType.PortcullisEW: return 0;\n        case ItemType.TorchUnlit: return Infinity;\n        case ItemType.TorchLit: return Infinity;\n    }\n}\n\nconst maxPlayerHealth: number = 5;\n\nclass Player {\n    pos: vec2;\n    dir: vec2;\n    health: number;\n    gold: number;\n    noisy: boolean; // did the player make noise last turn?\n    damagedLastTurn: boolean;\n    turnsRemainingUnderwater: number;\n\n    constructor(pos: vec2) {\n        this.pos = vec2.clone(pos);\n        this.dir = vec2.fromValues(0, -1);\n        this.health = maxPlayerHealth;\n        this.gold = 0;\n        this.noisy = false;\n        this.damagedLastTurn = false;\n        this.turnsRemainingUnderwater = 0;\n    }\n\n    applyDamage(d: number) {\n        this.health -= Math.min(d, this.health);\n        this.damagedLastTurn = true;\n    }\n\n    hidden(map: GameMap): boolean {\n        if (map.guards.find((guard) => guard.mode == GuardMode.ChaseVisibleTarget) !== undefined) {\n            return false;\n        }\n\n        if (map.cells.at(this.pos[0], this.pos[1]).hidesPlayer) {\n            return true;\n        }\n\n        let cellType = map.cells.at(this.pos[0], this.pos[1]).type;\n\n        if (cellType == TerrainType.GroundWater && this.turnsRemainingUnderwater > 0) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\ntype Rect = {\n    posMin: vec2;\n    posMax: vec2;\n}\n\ntype PortalInfo = {\n    // offset of left corner of portal relative to lower-left corner of cell:\n    lx: number;\n    ly: number;\n    // offset of right corner of portal relative to lower-left-corner of cell:\n    rx: number;\n    ry: number;\n    // offset of neighboring cell relative to this cell's coordinates:\n    nx: number;\n    ny: number;\n}\n\nconst portals: Array<PortalInfo> = [\n    { lx: -1, ly: -1, rx: -1, ry:  1, nx: -1, ny:  0 },\n    { lx: -1, ly:  1, rx:  1, ry:  1, nx:  0, ny:  1 },\n    { lx:  1, ly:  1, rx:  1, ry: -1, nx:  1, ny:  0 },\n    { lx:  1, ly: -1, rx: -1, ry: -1, nx:  0, ny: -1 },\n];\n\nfunction aRightOfB(ax: number, ay: number, bx: number, by: number): boolean {\n    return ax * by > ay * bx;\n}\n\nfunction allowedDirection(terrainType: TerrainType, dx: number, dy: number): boolean {\n    switch (terrainType) {\n    case TerrainType.OneWayWindowE: return dx > 0;\n    case TerrainType.OneWayWindowW: return dx < 0;\n    case TerrainType.OneWayWindowN: return dy > 0;\n    case TerrainType.OneWayWindowS: return dy < 0;\n    default: return true;\n    }\n}\n\ntype AdjacentMove = {\n    dx: number;\n    dy: number;\n    cost: number;\n}\n\nconst adjacentMoves: Array<AdjacentMove> = [\n    { dx:  1, dy:  0, cost: 2 },\n    { dx: -1, dy:  0, cost: 2 },\n    { dx:  0, dy:  1, cost: 2 },\n    { dx:  0, dy: -1, cost: 2 },\n    { dx: -1, dy: -1, cost: 3 },\n    { dx:  1, dy: -1, cost: 3 },\n    { dx: -1, dy:  1, cost: 3 },\n    { dx:  1, dy:  1, cost: 3 },\n];\n\ntype DistPos = {\n    priority: number; // = distance; needs to be named priority for PriorityQueueElement\n    pos: vec2;\n}\n\nclass GameMap {\n    cells: CellGrid;\n    patrolRegions: Array<Rect>;\n    patrolRoutes: Array<[number, number]>;\n    items: Array<Item>;\n    guards: Array<Guard>;\n    playerStartPos: vec2;\n    totalLoot: number;\n\n    constructor(cells: CellGrid) {\n        this.cells = cells;\n        this.patrolRegions = [];\n        this.patrolRoutes = [];\n        this.items = [];\n        this.guards = [];\n        this.playerStartPos = vec2.create();\n        this.totalLoot = 0;\n    }\n\n    collectLootAt(x: number, y: number): number {\n        let gold = 0;\n        this.items = this.items.filter((item) => {\n            if (item.type == ItemType.Coin && item.pos[0] == x && item.pos[1] == y) {\n                ++gold;\n                return false;\n            } else {\n                return true;\n            }\n        });\n        return gold;\n    }\n    \n    collectAllLoot(): number {\n        let gold = 0;\n        this.items = this.items.filter((item) => {\n            if (item.type == ItemType.Coin) {\n                ++gold;\n                return true;\n            } else {\n                return false;\n            }\n        });\n        return gold;\n    }\n\n    allSeen(): boolean {\n        for (const cell of this.cells.values) {\n            if (!cell.seen) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    percentSeen(): number {\n        let numSeen = 0;\n        for (const cell of this.cells.values) {\n            if (cell.seen) {\n                ++numSeen;\n            }\n        }\n    \n        return Math.floor((numSeen * 100) / this.cells.values.length);\n    }\n    \n    markAllSeen() {\n        for (const cell of this.cells.values) {\n            cell.seen = true;\n        }\n    }\n    \n    markAllUnseen() {\n        for (const cell of this.cells.values) {\n            cell.seen = false;\n        }\n    }\n\n    recomputeVisibility(posViewer: vec2) {\n        this.recomputeVisibilityFromPos(posViewer);\n\n        const pos = vec2.create();\n\n        for (const dir of cardinalDirections) {\n            if (this.playerCanSeeInDirection(posViewer, dir)) {\n                vec2.add(pos, posViewer, dir);\n                this.recomputeVisibilityFromPos(pos);\n            }\n        }\n    }\n\n    recomputeVisibilityFromPos(posViewer: vec2) {\n        for (const portal of portals) {\n            this.computeVisibility\n            (\n                posViewer[0], posViewer[1],\n                posViewer[0], posViewer[1],\n                portal.lx, portal.ly,\n                portal.rx, portal.ry\n            );\n        }\n    }\n    \n    playerCanSeeInDirection(posViewer: vec2, dir: vec2): boolean {\n        const posTarget = vec2.create();\n        vec2.add(posTarget, posViewer, dir);\n        if (posTarget[0] < 0 ||\n            posTarget[1] < 0 ||\n            posTarget[0] >= this.cells.sizeX ||\n            posTarget[1] >= this.cells.sizeY) {\n            return true;\n        }\n    \n        if (!allowedDirection(this.cells.at(posTarget[0], posTarget[1]).type, dir[0], dir[1])) {\n            return false;\n        }\n\n        return !this.cells.at(posTarget[0], posTarget[1]).blocksPlayerSight;\n    }\n\n    computeVisibility(\n        // Viewer map coordinates:\n        viewerX: number,\n        viewerY: number,\n        // Target cell map coordinates:\n        targetX: number,\n        targetY: number,\n        // Left edge of current view frustum (relative to viewer):\n        ldx: number,\n        ldy: number,\n        // Right edge of current view frustum (relative to viewer):\n        rdx: number,\n        rdy: number\n    ) {\n        // End recursion if the target cell is out of bounds.\n        if (targetX < 0 || targetY < 0 || targetX >= this.cells.sizeX || targetY >= this.cells.sizeY) {\n            return;\n        }\n    \n        // End recursion if the target square is too far away.\n        const dx = 2 * (targetX - viewerX);\n        const dy = 2 * (targetY - viewerY);\n    \n        if (dx*dx + dy*dy > 1600) {\n            return;\n        }\n    \n        // End recursion if the incoming direction is not allowed by the current cell type.\n        if (!allowedDirection(this.cells.at(targetX, targetY).type, dx, dy)) {\n            return;\n        }\n    \n        // This square is visible.\n        this.cells.at(targetX, targetY).seen = true;\n    \n        // End recursion if the target square occludes the view.\n        if (this.cells.at(targetX, targetY).blocksPlayerSight) {\n            return;\n        }\n    \n        // Mark diagonally-adjacent squares as visible if their corners are visible\n        for (let x = 0; x < 2; ++x) {\n            for (let y = 0; y < 2; ++y) {\n                let nx = targetX + 2*x - 1;\n                let ny = targetY + 2*y - 1;\n                let cdx = dx + 2*x - 1;\n                let cdy = dy + 2*y - 1;\n                \n                if (nx >= 0 &&\n                    ny >= 0 &&\n                    nx < this.cells.sizeX &&\n                    ny < this.cells.sizeY &&\n                    !aRightOfB(ldx, ldy, cdx, cdy) &&\n                    !aRightOfB(cdx, cdy, rdx, rdy)) {\n                    this.cells.at(nx, ny).seen = true;\n                }\n            }\n        }\n    \n        // Clip portals to adjacent squares and recurse through the visible portions\n        for (const portal of portals) {\n            // Relative positions of the portal's left and right endpoints:\n            const pldx = dx + portal.lx;\n            const pldy = dy + portal.ly;\n            const prdx = dx + portal.rx;\n            const prdy = dy + portal.ry;\n    \n            // Clip portal against current view frustum:\n            const [cldx, cldy] = aRightOfB(ldx, ldy, pldx, pldy) ? [ldx, ldy] : [pldx, pldy];\n            const [crdx, crdy] = aRightOfB(rdx, rdy, prdx, prdy) ? [prdx, prdy] : [rdx, rdy];\n    \n            // If we can see through the clipped portal, recurse through it.\n            if (aRightOfB(crdx, crdy, cldx, cldy)) {\n                this.computeVisibility\n                (\n                    viewerX, viewerY,\n                    targetX + portal.nx, targetY + portal.ny,\n                    cldx, cldy,\n                    crdx, crdy\n                );\n            }\n        }\n    }\n\n    computeLighting() {\n        for (const cell of this.cells.values) {\n            cell.lit = false;\n        }\n        for (const item of this.items) {\n            if (item.type == ItemType.TorchLit) {\n                this.castLight(item.pos, 180);\n            }\n        }\n        for (const guard of this.guards) {\n            if (guard.hasTorch) {\n                this.castLight(guard.pos, 60);\n            }\n        }\n    }\n\n    castLight(posLight: vec2, radiusSquared: number) {\n        this.cells.at(posLight[0], posLight[1]).lit = true;\n        for (const portal of portals) {\n            this.castLightRecursive(\n                posLight[0], posLight[1],\n                posLight[0] + portal.nx, posLight[1] + portal.ny,\n                portal.lx, portal.ly,\n                portal.rx, portal.ry,\n                radiusSquared\n            );\n        }\n    }\n\n    castLightRecursive(\n        // Light source map coordinates:\n        lightX: number,\n        lightY: number,\n        // Target cell map coordinates:\n        targetX: number,\n        targetY: number,\n        // Left edge of current view frustum (relative to viewer):\n        ldx: number,\n        ldy: number,\n        // Right edge of current view frustum (relative to viewer):\n        rdx: number,\n        rdy: number,\n        // Max radius of light source\n        radiusSquared: number) {\n        // End recursion if the target cell is out of bounds.\n        if (targetX < 0 || targetY < 0 || targetX >= this.cells.sizeX || targetY >= this.cells.sizeY) {\n            return;\n        }\n    \n        // End recursion if the target square is too far away.\n        const dx = 2 * (targetX - lightX);\n        const dy = 2 * (targetY - lightY);\n    \n        if (dx**2 + dy**2 > radiusSquared) {\n            return;\n        }\n\n        // The cell is lit\n        const cell = this.cells.at(targetX, targetY);\n        cell.lit = true;\n\n        // A solid target square blocks all further light through it.\n        if (cell.blocksSight) {\n            return;\n        }\n    \n        // Mark diagonally-adjacent squares as lit if their corners are lit\n        for (let x = 0; x < 2; ++x) {\n            for (let y = 0; y < 2; ++y) {\n                let nx = targetX + 2*x - 1;\n                let ny = targetY + 2*y - 1;\n                let cdx = dx + 2*x - 1;\n                let cdy = dy + 2*y - 1;\n                \n                if (nx >= 0 &&\n                    ny >= 0 &&\n                    nx < this.cells.sizeX &&\n                    ny < this.cells.sizeY &&\n                    !aRightOfB(ldx, ldy, cdx, cdy) &&\n                    !aRightOfB(cdx, cdy, rdx, rdy)) {\n                    this.cells.at(nx, ny).lit = true;\n                }\n            }\n        }\n    \n        // Clip portals to adjacent squares and recurse through the visible portions\n        for (const portal of portals) {\n            // Relative positions of the portal's left and right endpoints:\n            const pldx = dx + portal.lx;\n            const pldy = dy + portal.ly;\n            const prdx = dx + portal.rx;\n            const prdy = dy + portal.ry;\n    \n            // Clip portal against current view frustum:\n            const [cldx, cldy] = aRightOfB(ldx, ldy, pldx, pldy) ? [ldx, ldy] : [pldx, pldy];\n            const [crdx, crdy] = aRightOfB(rdx, rdy, prdx, prdy) ? [prdx, prdy] : [rdx, rdy];\n    \n            // If we can see through the clipped portal, recurse through it.\n            if (aRightOfB(crdx, crdy, cldx, cldy)) {\n                this.castLightRecursive(\n                    lightX, lightY,\n                    targetX + portal.nx, targetY + portal.ny,\n                    cldx, cldy,\n                    crdx, crdy,\n                    radiusSquared\n                );\n            }\n        }\n    }\n    \n    allLootCollected(): boolean {\n        return this.items.find((item) => item.type == ItemType.Coin) === undefined;\n    }\n\n    isGuardAt(x: number, y: number): boolean {\n        return this.guards.find((guard) => guard.hasMoved && guard.pos[0] == x && guard.pos[1] == y) != undefined;\n    }\n\n    guardMoveCost(posOld: vec2, posNew: vec2): number {\n        const cost = this.cells.at(posNew[0], posNew[1]).moveCost;\n    \n        if (cost === Infinity) {\n            return cost;\n        }\n    \n        // Guards are not allowed to move diagonally around corners.\n    \n        if (posOld[0] != posNew[0] &&\n            posOld[1] != posNew[1] &&\n            (this.cells.at(posOld[0], posNew[1]).moveCost === Infinity ||\n             this.cells.at(posNew[0], posOld[1]).moveCost === Infinity)) {\n            return Infinity;\n        }\n    \n        return cost;\n    }\n\n    computeDistancesToPatrolPath(patrolPositions: Array<vec2>): Float64Grid {\n        const goal = [];\n    \n        for (const pos of patrolPositions) {\n            const cost = this.cells.at(pos[0], pos[1]).moveCost;\n            goal.push({ priority: cost, pos: pos });\n        }\n    \n        return this.computeDistanceField(goal);\n    }\n\n    computeDistancesToPosition(pos_goal: vec2): Float64Grid {\n        console.assert(pos_goal[0] >= 0);\n        console.assert(pos_goal[1] >= 0);\n        console.assert(pos_goal[0] < this.cells.sizeX);\n        console.assert(pos_goal[1] < this.cells.sizeY);\n    \n        return this.computeDistanceField([{ priority: 0, pos: pos_goal }]);\n    }\n\n    computeDistanceField(initialDistances: Array<DistPos>): Float64Grid {\n        let sizeX = this.cells.sizeX;\n        let sizeY = this.cells.sizeY;\n\n        const toVisit: PriorityQueue<DistPos> = [];\n        const distField = new Float64Grid(sizeX, sizeY, Infinity);\n    \n        for (const distPos of initialDistances) {\n            priorityQueuePush(toVisit, distPos);\n        }\n    \n        while (toVisit.length > 0) {\n            const distPos = priorityQueuePop(toVisit);\n            if (distPos.priority >= distField.get(distPos.pos[0], distPos.pos[1])) {\n                continue;\n            }\n    \n            distField.set(distPos.pos[0], distPos.pos[1], distPos.priority);\n    \n            for (const adjacentMove of adjacentMoves) {\n                const posNew = vec2.fromValues(distPos.pos[0] + adjacentMove.dx, distPos.pos[1] + adjacentMove.dy);\n                if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= sizeX || posNew[1] >= sizeY) {\n                    continue;\n                }\n    \n                const moveCost = this.guardMoveCost(distPos.pos, posNew);\n                if (moveCost == Infinity) {\n                    continue;\n                }\n    \n                const distNew = distPos.priority + moveCost + adjacentMove.cost;\n    \n                if (distNew < distField.get(posNew[0], posNew[1])) {\n                    priorityQueuePush(toVisit, { priority: distNew, pos: posNew });\n                }\n            }\n        }\n    \n        return distField;\n    }\n\n    guardsInEarshot(soundPos: vec2, radius: number): Array<Guard> {\n        const coords = this.coordsInEarshot(soundPos, radius);\n        return this.guards.filter(guard => coords.has(this.cells.sizeX * guard.pos[1] + guard.pos[0]));\n    }\n\n    coordsInEarshot(soundPos: vec2, costCutoff: number): Set<number> {\n        let sizeX = this.cells.sizeX;\n        let sizeY = this.cells.sizeY;\n    \n        const toVisit: PriorityQueue<DistPos> = [];\n        const distField = new Float64Grid(sizeX, sizeY, Infinity);\n        const coordsVisited: Set<number> = new Set();\n    \n        priorityQueuePush(toVisit, { priority: 0, pos: soundPos });\n    \n        while (toVisit.length > 0) {\n            const distPos = priorityQueuePop(toVisit);\n            if (distPos.priority >= distField.get(distPos.pos[0], distPos.pos[1])) {\n                continue;\n            }\n    \n            distField.set(distPos.pos[0], distPos.pos[1], distPos.priority);\n            coordsVisited.add(sizeX * distPos.pos[1] + distPos.pos[0]);\n    \n            for (const adjacentMove of adjacentMoves) {\n                const posNew = vec2.fromValues(distPos.pos[0] + adjacentMove.dx, distPos.pos[1] + adjacentMove.dy);\n                if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= sizeX || posNew[1] >= sizeY) {\n                    continue;\n                }\n    \n                const costNew = distPos.priority + adjacentMove.cost;\n                if (costNew > costCutoff) {\n                    continue;\n                }\n    \n                if (this.cells.at(posNew[0], posNew[1]).blocksSound) {\n                    continue;\n                }\n    \n                if (costNew >= distField.get(posNew[0], posNew[1])) {\n                    continue;\n                }\n    \n                priorityQueuePush(toVisit, { priority: costNew, pos: posNew });\n            }\n        }\n    \n        return coordsVisited;\n    }\n}\n\ntype PriorityQueueElement = {\n    priority: number;\n}\n\ntype PriorityQueue<T> = Array<T>;\n\nfunction priorityQueuePop<T extends PriorityQueueElement>(q: PriorityQueue<T>): T {\n    const x = q[0];\n    q[0] = q[q.length - 1]; // q.at(-1);\n    q.pop();\n    let i = 0;\n    const c = q.length;\n    while (true) {\n        let iChild = i;\n        const iChild0 = 2*i + 1;\n        if (iChild0 < c && q[iChild0].priority < q[iChild].priority) {\n            iChild = iChild0;\n        }\n        const iChild1 = iChild0 + 1;\n        if (iChild1 < c && q[iChild1].priority < q[iChild].priority) {\n            iChild = iChild1;\n        }\n        if (iChild == i) {\n            break;\n        }\n        [q[i], q[iChild]] = [q[iChild], q[i]];\n        i = iChild;\n    }\n    return x;\n}\n\nfunction priorityQueuePush<T extends PriorityQueueElement>(q: PriorityQueue<T>, x: T) {\n    q.push(x);\n    let i = q.length - 1;\n    while (i > 0) {\n        const iParent = Math.floor((i - 1) / 2);\n        if (q[i].priority >= q[iParent].priority) {\n            break;\n        }\n        [q[i], q[iParent]] = [q[iParent], q[i]];\n        i = iParent;\n    }\n}\n","export { createGameMap };\n\nimport { BooleanGrid, CellGrid, Int32Grid, ItemType, Float64Grid, GameMap, TerrainType, guardMoveCostForItemType } from './game-map';\nimport { Guard } from './guard';\nimport { vec2 } from './my-matrix';\nimport { randomInRange, shuffleArray } from './random';\n\nconst roomSizeX = 5;\nconst roomSizeY = 5;\nconst outerBorder = 3;\n\nenum RoomType\n{\n    Exterior,\n    PublicCourtyard,\n    PublicRoom,\n    PrivateCourtyard,\n    PrivateRoom,\n}\n\ntype Room = {\n    roomType: RoomType,\n    group: number,\n    depth: number,\n    posMin: vec2,\n    posMax: vec2,\n    edges: Array<number>,\n}\n\ntype Adjacency = {\n    origin: vec2,\n    dir: vec2,\n    length: number,\n    room_left: number,\n    room_right: number,\n    next_matching: number,\n    door: boolean,\n    doorOffset: number,\n}\n\nfunction createGameMap(level: number): GameMap {\n    let map = createGameMapInternal(level);\n    map.computeLighting();\n    map.recomputeVisibility(map.playerStartPos);\n\n    return map;\n}\n\nfunction createGameMapInternal(level: number): GameMap {\n    const sizeX = randomHouseWidth(level);\n    const sizeY = randomHouseDepth(level);\n\n    const inside = makeSiheyuanRoomGrid(sizeX, sizeY);\n\n    const mirrorX: boolean = true;\n    const mirrorY: boolean = false;\n\n    const [offsetX, offsetY] = offsetWalls(mirrorX, mirrorY, inside);\n\n    const cells = plotWalls(inside, offsetX, offsetY);\n\n    const map = new GameMap(cells);\n\n    const [rooms, adjacencies, posStart] = createExits(level, mirrorX, mirrorY, inside, offsetX, offsetY, map);\n\n    vec2.copy(map.playerStartPos, posStart);\n\n    placeExteriorBushes(map);\n    placeFrontPillars(map);\n    placeLoot(rooms, adjacencies, map);\n\n    fixupWalls(cells);\n    cacheCellInfo(map);\n\n    const patrolRoutes = placePatrolRoutes(map, rooms, adjacencies);\n\n    placeGuards(level, map, patrolRoutes);\n\n    markExteriorAsSeen(map);\n\n    map.totalLoot = map.items.reduce((totalLoot, item) => totalLoot + ((item.type == ItemType.Coin) ? 1 : 0), 0);\n\n    return map;\n}\n\nfunction randomHouseWidth(level: number): number {\n    let sizeX = 0;\n    const c = Math.min(3, level);\n    for (let i = 0; i < c; ++i) {\n        sizeX += randomInRange(2);\n    }\n    return sizeX * 2 + 3;\n}\n\nfunction randomHouseDepth(level: number): number {\n    if (level === 0) {\n        return 2;\n    } else {\n        let sizeY = 3;\n        const c = Math.min(4, level - 1);\n        for (let i = 0; i < c; ++i) {\n            sizeY += randomInRange(2);\n        }\n        return sizeY;\n    }\n}\n\nfunction makeSiheyuanRoomGrid(sizeX: number, sizeY: number): BooleanGrid {\n    const inside = new BooleanGrid(sizeX, sizeY, true);\n\n    const halfX = Math.floor((sizeX + 1) / 2);\n\n    const numCourtyardRoomsHalf = Math.floor((sizeY * halfX) / 4);\n    for (let i = numCourtyardRoomsHalf; i > 0; --i) {\n        const x = randomInRange(halfX);\n        const y = randomInRange(sizeY);\n        inside.set(x, y, false);\n    }\n\n    for (let y = 0; y < sizeY; ++y) {\n        for (let x = halfX; x < sizeX; ++x) {\n            inside.set(x, y, inside.get((sizeX - 1) - x, y));\n        }\n    }\n\n    return inside;\n}\n\nfunction offsetWalls(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid): [offsetX: Int32Grid, offsetY: Int32Grid]\n{\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const offsetX = new Int32Grid(roomsX + 1, roomsY, 0);\n    const offsetY = new Int32Grid(roomsX, roomsY + 1, 0);\n\n    let i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(0, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(roomsX, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, 0, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, roomsY, i);\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            offsetX.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            offsetY.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            if (randomInRange(2) === 0) {\n                offsetX.set(x, y, offsetX.get(x, y-1));\n            } else {\n                offsetY.set(x, y, offsetY.get(x-1, y));\n            }\n        }\n    }\n\n    if (mirrorX) {\n        if ((roomsX & 1) === 0) {\n            const xMid = Math.floor(roomsX / 2);\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(xMid, y, 0);\n            }\n        }\n\n        for (let x = 0; x < Math.floor((roomsX + 1) / 2); ++x) {\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(roomsX - x, y, 1 - offsetX.get(x, y));\n            }\n        }\n\n        for (let x = 0; x < Math.floor(roomsX / 2); ++x) {\n            for (let y = 0; y < roomsY + 1; ++y) {\n                offsetY.set((roomsX - 1) - x, y, offsetY.get(x, y));\n            }\n        }\n    }\n\n    if (mirrorY) {\n        if ((roomsY & 1) === 0) {\n            const yMid = roomsY / 2;\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, yMid, 0);\n            }\n        }\n\n        for (let y = 0; y < Math.floor((roomsY + 1) / 2); ++y) {\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, roomsY - y, 1 - offsetY.get(x, y));\n            }\n        }\n\n        for (let y = 0; y < Math.floor(roomsY / 2); ++y) {\n            for (let x = 0; x < roomsX + 1; ++x) {\n                offsetX.set(x, (roomsY - 1) - y, offsetX.get(x, y));\n            }\n        }\n    }\n\n    let roomOffsetX = Number.MIN_SAFE_INTEGER;\n    let roomOffsetY = Number.MIN_SAFE_INTEGER;\n\n    for (let y = 0; y < roomsY; ++y) {\n        roomOffsetX = Math.max(roomOffsetX, -offsetX.get(0, y));\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        roomOffsetY = Math.max(roomOffsetY, -offsetY.get(x, 0));\n    }\n\n    roomOffsetX += outerBorder;\n    roomOffsetY += outerBorder;\n\n    for (let x = 0; x < roomsX + 1; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            const z = offsetX.get(x, y) + roomOffsetX + x * roomSizeX;\n            offsetX.set(x, y, z);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY + 1; ++y) {\n            offsetY.set(x, y, offsetY.get(x, y) + roomOffsetY + y * roomSizeY);\n        }\n    }\n\n    return [offsetX, offsetY];\n}\n\nfunction plotWalls(inside: BooleanGrid, offsetX: Int32Grid, offsetY: Int32Grid): CellGrid {\n    const cx = inside.sizeX;\n    const cy = inside.sizeY;\n\n    let mapSizeX = 0;\n    let mapSizeY = 0;\n\n    for (let y = 0; y < cy; ++y) {\n        mapSizeX = Math.max(mapSizeX, offsetX.get(cx, y));\n    }\n\n    for (let x = 0; x < cx; ++x) {\n        mapSizeY = Math.max(mapSizeY, offsetY.get(x, cy));\n    }\n\n    mapSizeX += outerBorder + 1;\n    mapSizeY += outerBorder + 1;\n\n    const map = new CellGrid(mapSizeX, mapSizeY);\n\n    // Super hacky: put down grass under all the rooms to plug holes.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry) + 1;\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1) + 1;\n\n            for (let x = x0; x < x1; ++x) {\n                for (let y = y0; y < y1; ++y) {\n                    const cell = map.at(x, y);\n                    cell.type = TerrainType.GroundGrass;\n                }\n            }\n        }\n    }\n\n    // Draw walls. Really this should be done in createExits, where the\n    //  walls are getting decorated with doors and windows.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const isInside = inside.get(rx, ry);\n\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry);\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1);\n\n            if (rx == 0 || isInside) {\n                plotNSWall(map, x0, y0, y1);\n            }\n            if (rx == cx - 1 || isInside) {\n                plotNSWall(map, x1, y0, y1);\n            }\n            if (ry == 0 || isInside) {\n                plotEWWall(map, x0, y0, x1);\n            }\n            if (ry == cy - 1 || isInside) {\n                plotEWWall(map, x0, y1, x1);\n            }\n        }\n    }\n\n    return map;\n}\n\nfunction plotNSWall(map: CellGrid, x0: number, y0: number, y1: number) {\n    for (let y = y0; y <= y1; ++y) {\n        map.at(x0, y).type = TerrainType.Wall0000;\n    }\n}\n\nfunction plotEWWall(map: CellGrid, x0: number, y0: number, x1: number) {\n    for (let x = x0; x <= x1; ++x) {\n        map.at(x, y0).type = TerrainType.Wall0000;\n    }\n}\n\nfunction createExits(\n    level: number,\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    map: GameMap\n): [Array<Room>, Array<Adjacency>, vec2] {\n    // Make a set of rooms.\n\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const roomIndex = new Int32Grid(roomsX, roomsY, 0);\n    const rooms: Array<Room> = [];\n\n    // This room represents the area surrounding the map.\n\n    rooms.push({\n        roomType: RoomType.Exterior,\n        group: 0,\n        depth: 0,\n        posMin: vec2.fromValues(0, 0), // not meaningful for this room\n        posMax: vec2.fromValues(0, 0), // not meaningful for this room\n        edges: [],\n    });\n\n    for (let rx = 0; rx < roomsX; ++rx) {\n        for (let ry = 0; ry < roomsY; ++ry) {\n            let group_index = rooms.length;\n\n            roomIndex.set(rx, ry, group_index);\n\n            rooms.push({\n                roomType: inside.get(rx, ry) ?  RoomType.PublicRoom : RoomType.PublicCourtyard,\n                group: group_index,\n                depth: 0,\n                posMin: vec2.fromValues(offsetX.get(rx, ry) + 1, offsetY.get(rx, ry) + 1),\n                posMax: vec2.fromValues(offsetX.get(rx + 1, ry), offsetY.get(rx, ry + 1)),\n                edges: [],\n            });\n        }\n    }\n\n    // Compute a list of room adjacencies.\n\n    const adjacencies = computeAdjacencies(mirrorX, mirrorY, offsetX, offsetY, roomIndex);\n    storeAdjacenciesInRooms(adjacencies, rooms);\n\n    // Connect rooms together.\n\n    let posStart = connectRooms(rooms, adjacencies);\n\n    // Assign types to the rooms.\n\n    assignRoomTypes(roomIndex, adjacencies, rooms);\n\n    // Render doors and windows.\n\n    renderWalls(rooms, adjacencies, map);\n\n    // Render floors.\n\n    renderRooms(level, rooms, map);\n\n    return [rooms, adjacencies, posStart];\n}\n\nfunction computeAdjacencies(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    roomIndex: Int32Grid\n): Array<Adjacency> {\n\n    let roomsX = roomIndex.sizeX;\n    let roomsY = roomIndex.sizeY;\n\n    const adjacencies: Array<Adjacency> = [];\n\n    {\n        const adjacencyRows: Array<Array<number>> = [];\n\n        {\n            const adjacencyRow = [];\n\n            let ry = 0;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry);\n                let x1 = offsetX.get(rx+1, ry);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: roomIndex.get(rx, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                    doorOffset: 0,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let ry = 1; ry < roomsY; ++ry) {\n            const adjacencyRow = [];\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0_upper = offsetX.get(rx, ry);\n                let x0_lower = offsetX.get(rx, ry-1);\n                let x1_upper = offsetX.get(rx+1, ry);\n                let x1_lower = offsetX.get(rx+1, ry-1);\n                let x0 = Math.max(x0_lower, x0_upper);\n                let x1 = Math.min(x1_lower, x1_upper);\n                let y = offsetY.get(rx, ry);\n\n                if (rx > 0 && x0_lower - x0_upper > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0_upper + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x0_lower - (x0_upper + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx - 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                        doorOffset: 0,\n                    });\n                }\n\n                if (x1 - x0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0 + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1 - (x0 + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx, ry - 1),\n                        next_matching: i,\n                        door: false,\n                        doorOffset: 0,\n                    });\n                }\n\n                if (rx + 1 < roomsX && x1_upper - x1_lower > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x1_lower + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1_upper - (x1_lower + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx + 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                        doorOffset: 0,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let ry = roomsY;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry-1);\n                let x1 = offsetX.get(rx+1, ry-1);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry - 1),\n                    next_matching: i,\n                    door: false,\n                    doorOffset: 0,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorX) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n\n                let i = 0;\n                let j = row.length - 1;\n                while (i < j) {\n                    let adj0 = row[i];\n                    let adj1 = row[j];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    // Flip edge a1 to point the opposite direction\n                    {\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n\n                    i += 1;\n                    j -= 1;\n                }\n            }\n        }\n\n        if (mirrorY) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                console.assert(row0.length == row1.length);\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    {\n        let adjacencyRows = [];\n\n        {\n            const adjacencyRow = [];\n\n            let rx = 0;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx, ry);\n                let y1 = offsetY.get(rx, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry),\n                    next_matching: i,\n                    door: false,\n                    doorOffset: 0,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let rx = 1; rx < roomsX; ++rx) {\n            const adjacencyRow = [];\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0_left  = offsetY.get(rx-1, ry);\n                let y0_right = offsetY.get(rx, ry);\n                let y1_left  = offsetY.get(rx-1, ry+1);\n                let y1_right = offsetY.get(rx, ry+1);\n                let y0 = Math.max(y0_left, y0_right);\n                let y1 = Math.min(y1_left, y1_right);\n                let x = offsetX.get(rx, ry);\n\n                if (ry > 0 && y0_left - y0_right > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0_right + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y0_left - (y0_right + 1),\n                        room_left: roomIndex.get(rx - 1, ry - 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                        doorOffset: 0,\n                    });\n                }\n\n                if (y1 - y0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0 + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1 - (y0 + 1),\n                        room_left: roomIndex.get(rx - 1, ry),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                        doorOffset: 0,\n                    });\n                }\n\n                if (ry + 1 < roomsY && y1_right - y1_left > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y1_left + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1_right - (y1_left + 1),\n                        room_left: roomIndex.get(rx - 1, ry + 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                        doorOffset: 0,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let rx = roomsX;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx-1, ry);\n                let y1 = offsetY.get(rx-1, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: roomIndex.get(rx - 1, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                    doorOffset: 0,\n                });\n                adjacencyRow.push(i);\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorY) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n                let n = Math.floor(row.length / 2);\n\n                for (let i = 0; i < n; ++i) {\n                    let adj0 = row[i];\n                    let adj1 = row[(row.length - 1) - i];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    {\n                        // Flip edge a1 to point the opposite direction\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n                }\n            }\n        }\n\n        if (mirrorX) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    return adjacencies;\n}\n\nfunction storeAdjacenciesInRooms(adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        rooms[i0].edges.push(i);\n        rooms[i1].edges.push(i);\n    }\n}\n\nfunction connectRooms(rooms: Array<Room>, adjacencies: Array<Adjacency>): vec2 {\n\n    // Collect sets of edges that are mirrors of each other\n\n    let edgeSets = getEdgeSets(adjacencies);\n\n    // Connect all adjacent courtyard rooms together.\n\n    for (const adj of adjacencies) {\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        if (rooms[i0].roomType != RoomType.PublicCourtyard || rooms[i1].roomType != RoomType.PublicCourtyard) {\n            continue;\n        }\n\n        adj.door = true;\n        let group0 = rooms[i0].group;\n        let group1 = rooms[i1].group;\n        joinGroups(rooms, group0, group1);\n    }\n\n    // Connect all the interior rooms with doors.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            if (rooms[i0].roomType != RoomType.PublicRoom || rooms[i1].roomType != RoomType.PublicRoom) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create doors between the interiors and the courtyard areas.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            let room_type0 = rooms[i0].roomType;\n            let room_type1 = rooms[i1].roomType;\n\n            if (room_type0 == room_type1) {\n                continue;\n            }\n\n            if (room_type0 == RoomType.Exterior || room_type1 == RoomType.Exterior) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create the door to the surrounding exterior. It must be on the south side.\n\n    let posStart = vec2.fromValues(0, 0);\n\n    {\n        let i = frontDoorAdjacencyIndex(rooms, adjacencies, edgeSets);\n\n        // Set the player's start position based on where the door is.\n\n        posStart[0] = adjacencies[i].origin[0] + adjacencies[i].dir[0] * Math.floor(adjacencies[i].length / 2);\n        posStart[1] = outerBorder - 1;\n\n        adjacencies[i].door = true;\n\n        // Break symmetry if the door is off center.\n\n        let j = adjacencies[i].next_matching;\n        if (j != i) {\n            adjacencies[j].next_matching = j;\n            adjacencies[i].next_matching = i;\n        }\n    }\n\n    return posStart;\n}\n\nfunction getEdgeSets(adjacencies: Array<Adjacency>): Array<Array<number>> {\n    const edgeSets = [];\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let j = adj.next_matching;\n        if (j >= i) {\n            if (j > i) {\n                edgeSets.push([i, j]);\n            } else {\n                edgeSets.push([i]);\n            }\n        }\n    }\n\n    shuffleArray(edgeSets);\n\n    return edgeSets;\n}\n\nfunction joinGroups(rooms: Array<Room>, groupFrom: number, groupTo: number) {\n    if (groupFrom != groupTo) {\n        for (const room of rooms) {\n            if (room.group == groupFrom) {\n                room.group = groupTo;\n            }\n        }\n    }\n}\n\nfunction frontDoorAdjacencyIndex(rooms: Array<Room>, adjacencies: Array<Adjacency>, edgeSets: Array<Array<number>>): number {\n    for (const edgeSet of edgeSets) {\n        for (const i of edgeSet) {\n            let adj = adjacencies[i];\n\n            if (adj.dir[0] == 0) {\n                continue;\n            }\n\n            if (adj.next_matching > i) {\n                continue;\n            }\n\n            if (adj.next_matching == i) {\n                if (rooms[adj.room_right].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            } else {\n                if (rooms[adj.room_left].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            }\n\n            return i;\n        }\n    }\n\n    // Should always return above...\n\n    return 0;\n}\n\nfunction assignRoomTypes(roomIndex: Int32Grid, adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n\n    // Assign rooms depth based on distance from the bottom row of rooms.\n\n    let unvisited = rooms.length;\n\n    rooms[0].depth = 0;\n\n    for (let i = 1; i < rooms.length; ++i) {\n        rooms[i].depth = unvisited;\n    }\n\n    const roomsToVisit: Array<number> = [];\n\n    for (let x = 0; x < roomIndex.sizeX; ++x) {\n        let iRoom = roomIndex.get(x, 0);\n        rooms[iRoom].depth = 1;\n        roomsToVisit.push(iRoom);\n    }\n\n    // Visit rooms in breadth-first order, assigning them distances from the seed rooms.\n\n    let iiRoom = 0;\n    while (iiRoom < roomsToVisit.length) {\n        let iRoom = roomsToVisit[iiRoom];\n\n        for (const iAdj of rooms[iRoom].edges) {\n            let adj = adjacencies[iAdj];\n\n            if (!adj.door) {\n                continue;\n            }\n\n            const iRoomNeighbor = (adj.room_left == iRoom) ? adj.room_right : adj.room_left;\n\n            if (rooms[iRoomNeighbor].depth == unvisited) {\n                rooms[iRoomNeighbor].depth = rooms[iRoom].depth + 1;\n                roomsToVisit.push(iRoomNeighbor);\n            }\n        }\n\n        iiRoom += 1;\n    }\n\n    // Assign master-suite room type to the inner rooms.\n\n    let maxDepth = 0;\n    for (const room of rooms) {\n        maxDepth = Math.max(maxDepth, room.depth);\n    }\n\n    const targetNumMasterRooms = Math.floor((roomIndex.sizeX * roomIndex.sizeY) / 4);\n\n    let numMasterRooms = 0;\n\n    let depth = maxDepth;\n    while (depth > 0) {\n        for (const room of rooms) {\n            if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            if (room.depth != depth) {\n                continue;\n            }\n\n            room.roomType = (room.roomType == RoomType.PublicRoom) ? RoomType.PrivateRoom : RoomType.PrivateCourtyard;\n            if (room.roomType == RoomType.PrivateRoom) {\n                numMasterRooms += 1;\n            }\n        }\n\n        if (numMasterRooms >= targetNumMasterRooms) {\n            break;\n        }\n\n        depth -= 1;\n    }\n\n    // Change any public courtyards that are adjacent to private courtyards into private courtyards\n\n    while (true) {\n        let changed = false;\n\n        for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n            if (rooms[iRoom].roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            for (const iAdj of rooms[iRoom].edges) {\n                const adj = adjacencies[iAdj];\n\n                let iRoomOther = (adj.room_left != iRoom) ? adj.room_left : adj.room_right;\n\n                if (rooms[iRoomOther].roomType == RoomType.PrivateCourtyard) {\n                    rooms[iRoom].roomType = RoomType.PrivateCourtyard;\n                    changed = true;\n                    break;\n                }\n            }\n        }\n\n        if (!changed) {\n            break;\n        }\n    }\n}\n\nfunction placePatrolRoutes(gameMap: GameMap, rooms: Array<Room>, adjacencies: Array<Adjacency>): Array<Array<vec2>> {\n    const roomIncluded = Array(rooms.length).fill(false);\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        const roomType = rooms[iRoom].roomType;\n        if (roomType !== RoomType.Exterior) {\n            roomIncluded[iRoom] = true;\n        }\n    }\n\n    const iRoomNext = Array(rooms.length);\n    const iRoomPrev = Array(rooms.length);\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        iRoomNext[iRoom] = -1;\n        iRoomPrev[iRoom] = -1;\n    }\n\n    const adjacenciesShuffled = [...adjacencies];\n    shuffleArray(adjacenciesShuffled);\n\n    for (const adj of adjacenciesShuffled) {\n        if (!adj.door) {\n            continue;\n        }\n        const iRoom0 = adj.room_left;\n        const iRoom1 = adj.room_right;\n        if (!roomIncluded[iRoom0] || !roomIncluded[iRoom1]) {\n            continue;\n        }\n        if (iRoomNext[iRoom0] == -1 && iRoomPrev[iRoom1] == -1) {\n            iRoomNext[iRoom0] = iRoom1;\n            iRoomPrev[iRoom1] = iRoom0;\n        } else if (iRoomNext[iRoom1] == -1 && iRoomPrev[iRoom0] == -1) {\n            iRoomNext[iRoom1] = iRoom0;\n            iRoomPrev[iRoom0] = iRoom1;\n        } else if (iRoomNext[iRoom0] == -1 && iRoomNext[iRoom1] == -1) {\n            flipReverse(iRoomNext, iRoomPrev, iRoom1);\n            iRoomNext[iRoom0] = iRoom1;\n            iRoomPrev[iRoom1] = iRoom0;\n        } else if (iRoomPrev[iRoom0] == -1 && iRoomPrev[iRoom1] == -1) {\n            flipForward(iRoomNext, iRoomPrev, iRoom0);\n            iRoomNext[iRoom0] = iRoom1;\n            iRoomPrev[iRoom1] = iRoom0;\n        }\n    }\n\n    const posInRoom = [];\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        if (!roomIncluded[iRoom]) {\n            posInRoom.push(rooms[iRoom].posMin);\n            continue;\n        }\n        const pos = posVacantInRoom(gameMap, rooms[iRoom]);\n        posInRoom.push(pos);\n    }\n\n    // Generate sub-paths within each room along the paths\n    // Each room is responsible for the path from the\n    // incoming door to the outgoing door, including the\n    // incoming door but not the outgoing door. If there\n    // is no incoming door, the path starts next to the\n    // outgoing door, and if there is no outgoing door,\n    // the path ends next to the incoming door.\n\n    const roomHandled = Array(rooms.length).fill(false);\n    const patrolRoutes = [];\n\n    for (let iRoomIter = 0; iRoomIter < rooms.length; ++iRoomIter) {\n        if (!roomIncluded[iRoomIter]) {\n            continue;\n        }\n        if (roomHandled[iRoomIter]) {\n            continue;\n        }\n\n        if (iRoomNext[iRoomIter] == -1 && iRoomPrev[iRoomIter] == -1) {\n            roomHandled[iRoomIter] = true;\n            continue;\n        }\n\n        const iRoomStart = startingRoomIndex(iRoomPrev, iRoomIter);\n\n        const patrolPositions = [];\n        for (let iRoom = iRoomStart; iRoom != -1; iRoom = iRoomNext[iRoom]) {\n            if (roomHandled[iRoom]) {\n                break;\n            }\n            roomHandled[iRoom] = true;\n\n            const iNext = iRoomNext[iRoom];\n            const iPrev = iRoomPrev[iRoom];\n\n            const posStart = vec2.create();\n            const posEnd = vec2.create();\n\n            if (iPrev === -1) {\n                const positions = activityStationPositions(gameMap, rooms[iRoom]);\n                if (positions.length > 0) {\n                    vec2.copy(posStart, positions[randomInRange(positions.length)]);\n                } else {\n                    posBesideDoor(posStart, rooms, adjacencies, iRoom, iNext);\n                }\n                posInDoor(posEnd, rooms, adjacencies, iRoom, iNext);\n\n                patrolPositions.push(vec2.clone(posStart));\n            } else if (iNext === -1) {\n                posInDoor(posStart, rooms, adjacencies, iRoom, iPrev);\n                const positions = activityStationPositions(gameMap, rooms[iRoom]);\n                if (positions.length > 0) {\n                    vec2.copy(posEnd, positions[randomInRange(positions.length)]);\n                } else {\n                    posBesideDoor(posEnd, rooms, adjacencies, iRoom, iPrev);\n                }\n            } else {\n                posInDoor(posStart, rooms, adjacencies, iRoom, iPrev);\n                posInDoor(posEnd, rooms, adjacencies, iRoom, iNext);\n            }\n    \n            const path = pathBetweenPoints(gameMap, posStart, posEnd);\n            for (const pos of path) {\n                patrolPositions.push(pos);\n            }\n\n            if (iNext === -1) {\n                patrolPositions.push(vec2.clone(posEnd));\n                patrolPositions.push(vec2.clone(posEnd));\n            }\n        }\n\n        patrolRoutes.push(patrolPositions);\n    }\n\n    return patrolRoutes;\n}\n\nfunction startingRoomIndex(iRoomPrev: Array<number>, iRoom: number) {\n    let iRoomStart = iRoom;\n    while (iRoomPrev[iRoomStart] != -1) {\n        iRoomStart = iRoomPrev[iRoomStart];\n        if (iRoomStart == iRoom) {\n            break;\n        }\n    }\n    return iRoomStart;\n}\n\nfunction flipReverse(iRoomNext: Array<number>, iRoomPrev: Array<number>, iRoom: number) {\n    let iRoomVisited = -1;\n    while (iRoom != -1) {\n        const iRoomToVisit = iRoomPrev[iRoom];\n        iRoomNext[iRoom] = iRoomToVisit;\n        iRoomPrev[iRoom] = iRoomVisited;\n        iRoomVisited = iRoom;\n        iRoom = iRoomToVisit;\n    }\n}\n\nfunction flipForward(iRoomNext: Array<number>, iRoomPrev: Array<number>, iRoom: number) {\n    let iRoomVisited = -1;\n    while (iRoom != -1) {\n        const iRoomToVisit = iRoomNext[iRoom];\n        iRoomPrev[iRoom] = iRoomToVisit;\n        iRoomNext[iRoom] = iRoomVisited;\n        iRoomVisited = iRoom;\n        iRoom = iRoomToVisit;\n    }\n}\n\nfunction posInDoor(pos: vec2, rooms: Array<Room>, adjacencies: Array<Adjacency>, iRoom0: number, iRoom1: number) {\n    for (const iAdj of rooms[iRoom0].edges) {\n        const adj = adjacencies[iAdj];\n        if ((adj.room_left === iRoom0 && adj.room_right === iRoom1) ||\n            (adj.room_left === iRoom1 && adj.room_right === iRoom0)) {\n            vec2.scaleAndAdd(pos, adj.origin, adj.dir, adj.doorOffset);\n            return;\n        }\n    }\n    vec2.zero(pos);\n}\n\nfunction posBesideDoor(pos: vec2, rooms: Array<Room>, adjacencies: Array<Adjacency>, iRoom: number, iRoomNext: number) {\n    for (const iAdj of rooms[iRoom].edges) {\n        const adj = adjacencies[iAdj];\n        if ((adj.room_left === iRoom && adj.room_right === iRoomNext)) {\n            vec2.scaleAndAdd(pos, adj.origin, adj.dir, adj.doorOffset);\n            const dirCross = vec2.fromValues(-adj.dir[1], adj.dir[0]);\n            vec2.add(pos, pos, dirCross);\n            return;\n        } else if (adj.room_left === iRoomNext && adj.room_right === iRoom) {\n            vec2.scaleAndAdd(pos, adj.origin, adj.dir, adj.doorOffset);\n            const dirCross = vec2.fromValues(adj.dir[1], -adj.dir[0]);\n            vec2.add(pos, pos, dirCross);\n            return;\n        }\n    }\n    vec2.zero(pos);\n}\n\nfunction activityStationPositions(gameMap: GameMap, room: Room): Array<vec2> {\n    const positions = [];\n    // Search for positions with adjacent windows\n    if (!isCourtyardRoomType(room.roomType)) {\n        for (let x = room.posMin[0]; x < room.posMax[0]; ++x) {\n            if (room.posMin[1] > 0) {\n                const terrainType = gameMap.cells.at(x, room.posMin[1] - 1).type;\n                if (isWindowTerrainType(terrainType) && gameMap.cells.at(x, room.posMin[1]).moveCost === 0) {\n                    positions.push(vec2.fromValues(x, room.posMin[1]));\n                }\n            }\n            if (room.posMax[1] < gameMap.cells.sizeY) {\n                const terrainType = gameMap.cells.at(x, room.posMax[1]).type;\n                if (isWindowTerrainType(terrainType) && gameMap.cells.at(x, room.posMax[1] - 1).moveCost === 0) {\n                    positions.push(vec2.fromValues(x, room.posMax[1] - 1));\n                }\n            }\n        }\n        for (let y = room.posMin[1]; y < room.posMax[1]; ++y) {\n            if (room.posMin[0] > 0) {\n                const terrainType = gameMap.cells.at(room.posMin[0] - 1, y).type;\n                if (isWindowTerrainType(terrainType) && gameMap.cells.at(room.posMin[0], y).moveCost === 0) {\n                    positions.push(vec2.fromValues(room.posMin[0], y));\n                }\n            }\n            if (room.posMax[0] < gameMap.cells.sizeX) {\n                const terrainType = gameMap.cells.at(room.posMax[0], y).type;\n                if (isWindowTerrainType(terrainType) && gameMap.cells.at(room.posMax[0] - 1, y).moveCost === 0) {\n                    positions.push(vec2.fromValues(room.posMax[0] - 1, y));\n                }\n            }\n        }\n        if (positions.length > 0) {\n            return positions;\n        }\n    }\n\n    // Search for chairs to sit on\n    for (const item of gameMap.items) {\n        if (item.type == ItemType.Chair &&\n            item.pos[0] >= room.posMin[0] &&\n            item.pos[1] >= room.posMin[1] &&\n            item.pos[0] < room.posMax[0] &&\n            item.pos[1] < room.posMax[1]) {\n            positions.push(vec2.clone(item.pos));\n        }\n    }\n\n    return positions;\n}\n\nfunction isWindowTerrainType(terrainType: TerrainType): boolean {\n    return terrainType >= TerrainType.OneWayWindowE && terrainType <= TerrainType.OneWayWindowS;\n}\n\nfunction posVacantInRoom(gameMap: GameMap, room: Room): vec2 {\n    const positions = [];\n    for (let x = room.posMin[0]; x < room.posMax[0]; ++x) {\n        for (let y = room.posMin[1]; y < room.posMax[1]; ++y) {\n            if (gameMap.cells.at(x, y).moveCost === 0) {\n                positions.push(vec2.fromValues(x, y));\n            }\n        }\n    }\n    if (positions.length <= 0) {\n        return room.posMin;\n    }\n    const centerX = (room.posMin[0] + room.posMax[0] - 1) / 2;\n    const centerY = (room.posMin[1] + room.posMax[1] - 1) / 2;\n    positions.sort((a, b) => ((a[0] - centerX)**2 + (a[1] - centerY)**2) - ((b[0] - centerX)**2 + (b[1] - centerY)**2));\n    return positions[0];\n}\n\nfunction pathBetweenPoints(gameMap: GameMap, pos0: vec2, pos1: vec2): Array<vec2> {\n    const distanceField = gameMap.computeDistancesToPosition(pos1);\n    const pos = vec2.clone(pos0);\n    const path = [];\n    while (pos[0] !== pos1[0] || pos[1] !== pos1[1]) {\n        path.push(vec2.clone(pos));\n        const posNext = posNextBest(gameMap, distanceField, pos);\n        if (posNext[0] === pos[0] && posNext[1] === pos[1]) {\n            break;\n        }\n        vec2.copy(pos, posNext);\n    }\n    return path;\n}\n\nfunction posNextBest(gameMap: GameMap, distanceField: Float64Grid, posFrom: vec2): vec2 {\n    let costBest = Infinity;\n    let posBest = vec2.clone(posFrom);\n\n    const posMin = vec2.fromValues(Math.max(0, posFrom[0] - 1), Math.max(0, posFrom[1] - 1));\n    const posMax = vec2.fromValues(Math.min(gameMap.cells.sizeX, posFrom[0] + 2), Math.min(gameMap.cells.sizeY, posFrom[1] + 2));\n\n    for (let x = posMin[0]; x < posMax[0]; ++x) {\n        for (let y = posMin[1]; y < posMax[1]; ++y) {\n            const cost = distanceField.get(x, y);\n            if (cost == Infinity) {\n                continue;\n            }\n\n            let pos = vec2.fromValues(x, y);\n            if (gameMap.guardMoveCost(posFrom, pos) == Infinity) {\n                continue;\n            }\n\n            if (gameMap.cells.at(pos[0], pos[1]).type == TerrainType.GroundWater) {\n                continue;\n            }\n\n            if (cost < costBest) {\n                costBest = cost;\n                posBest = pos;\n            }\n        }\n    }\n\n    if (posBest[0] === posFrom[0] && posBest[1] === posFrom[1]) {\n        console.log('failed to proceed');\n        for (let x = posMin[0]; x < posMax[0]; ++x) {\n            for (let y = posMin[1]; y < posMax[1]; ++y) {\n                const cost = distanceField.get(x, y);\n                console.log(x, y, cost);\n            }\n        }\n    }\n    return posBest;\n}\n\nconst oneWayWindowTerrainType: Array<TerrainType> = [\n    TerrainType.OneWayWindowS,\n    TerrainType.OneWayWindowE,\n    TerrainType.OneWayWindowN,\n    TerrainType.OneWayWindowW,\n];\n\nfunction oneWayWindowTerrainTypeFromDir(dir: vec2): number {\n    return oneWayWindowTerrainType[dir[0] + 2 * Math.max(0, dir[1]) + 1];\n}\n\nfunction renderWalls(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Render grass connecting courtyard rooms.\n\n    for (const adj of adjacencies) {\n        const type0 = rooms[adj.room_left].roomType;\n        const type1 = rooms[adj.room_right].roomType;\n\n        if (!isCourtyardRoomType(type0) || !isCourtyardRoomType(type1)) {\n            continue;\n        }\n\n        for (let j = 0; j < adj.length; ++j) {\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, adj.origin, adj.dir, j);\n            map.cells.at(p[0], p[1]).type = TerrainType.GroundGrass;\n        }\n    }\n\n    // Render doors and windows for the rest of the walls.\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj0 = adjacencies[i];\n\n        const type0 = rooms[adj0.room_left].roomType;\n        const type1 = rooms[adj0.room_right].roomType;\n\n        const j = adj0.next_matching;\n\n        if (j < i) {\n            continue;\n        }\n\n        let offset;\n        if (j == i) {\n            offset = Math.floor(adj0.length / 2);\n        } else if (adj0.length > 2) {\n            offset = 1 + randomInRange(adj0.length - 2);\n        } else {\n            offset = randomInRange(adj0.length);\n        }\n\n        let walls = [];\n        walls.push(adj0);\n\n        if (j != i) {\n            walls.push(adjacencies[j]);\n        }\n\n        if (!adj0.door && type0 != type1) {\n            if (type0 == RoomType.Exterior || type1 == RoomType.Exterior) {\n                if ((adj0.length & 1) != 0) {\n                    let k = Math.floor(adj0.length / 2);\n\n                    for (const a of walls) {\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n\n                        let dir = vec2.clone(a.dir);\n                        if (rooms[a.room_right].roomType == RoomType.Exterior) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        map.cells.at(p[0], p[1]).type = oneWayWindowTerrainTypeFromDir(dir);\n                    }\n                }\n            } else if (isCourtyardRoomType(type0) || isCourtyardRoomType(type1)) {\n                let k = randomInRange(2);\n                const k_end = Math.floor((adj0.length + 1) / 2);\n\n                while (k < k_end) {\n                    for (const a of walls) {\n                        let dir = vec2.clone(a.dir);\n                        if (isCourtyardRoomType(rooms[a.room_right].roomType)) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        let windowType = oneWayWindowTerrainTypeFromDir(dir);\n\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n                        const q = vec2.create();\n                        vec2.scaleAndAdd(q, a.origin, a.dir, a.length - (k + 1));\n\n                        map.cells.at(p[0], p[1]).type = windowType;\n                        map.cells.at(q[0], q[1]).type = windowType;\n                    }\n                    k += 2;\n                }\n            }\n        }\n\n        let installMasterSuiteDoor = Math.random() < 0.3333;\n\n        for (const a of walls) {\n            if (!a.door) {\n                continue;\n            }\n\n            a.doorOffset = offset;\n\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, a.origin, a.dir, offset);\n\n            let orientNS = (a.dir[0] == 0);\n\n            let roomTypeLeft = rooms[a.room_left].roomType;\n            let roomTypeRight = rooms[a.room_right].roomType;\n\n            if (roomTypeLeft == RoomType.Exterior || roomTypeRight == RoomType.Exterior) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.PortcullisNS : TerrainType.PortcullisEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.PortcullisNS : ItemType.PortcullisEW);\n            } else if (isCourtyardRoomType(roomTypeLeft) && isCourtyardRoomType(roomTypeRight)) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.GardenDoorNS : TerrainType.GardenDoorEW;\n            } else if (roomTypeLeft != RoomType.PrivateRoom || roomTypeRight != RoomType.PrivateRoom || installMasterSuiteDoor) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.DoorNS : ItemType.DoorEW);\n            } else {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n            }\n        }\n    }\n}\n\nfunction renderRooms(level: number, rooms: Array<Room>, map: GameMap) {\n    for (let iRoom = 1; iRoom < rooms.length; ++iRoom) {\n        const room = rooms[iRoom];\n\n        let cellType;\n        switch (room.roomType) {\n        case RoomType.Exterior: cellType = TerrainType.GroundNormal; break;\n        case RoomType.PublicCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PublicRoom: cellType = TerrainType.GroundWood; break;\n        case RoomType.PrivateCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PrivateRoom: cellType = TerrainType.GroundMarble; break;\n        }\n\n        for (let x = room.posMin[0]; x < room.posMax[0]; ++x) {\n            for (let y = room.posMin[1]; y < room.posMax[1]; ++y) {\n                if (cellType == TerrainType.GroundWood && level > 3 && Math.random() < 0.02) {\n                    map.cells.at(x, y).type = TerrainType.GroundWoodCreaky;\n                } else {\n                    map.cells.at(x, y).type = cellType;\n                }\n            }\n        }\n\n        let dx = room.posMax[0] - room.posMin[0];\n        let dy = room.posMax[1] - room.posMin[1];\n\n        if (isCourtyardRoomType(room.roomType)) {\n            if (dx >= 5 && dy >= 5) {\n                for (let x = room.posMin[0] + 1; x < room.posMax[0] - 1; ++x) {\n                    for (let y = room.posMin[1] + 1; y < room.posMax[1] - 1; ++y) {\n                        map.cells.at(x, y).type = TerrainType.GroundWater;\n                    }\n                }\n            } else if (dx >= 2 && dy >= 2) {\n                const torchType = randomlyLitTorch();\n                const itemTypes = [torchType, ItemType.Bush, ItemType.Bush, ItemType.Bush, ItemType.Bush];\n                shuffleArray(itemTypes);\n                const itemPositions = [\n                    [room.posMin[0], room.posMin[1]],\n                    [room.posMax[0] - 1, room.posMin[1]],\n                    [room.posMin[0], room.posMax[1] - 1],\n                    [room.posMax[0] - 1, room.posMax[1] - 1],\n                ];\n                for (let i = 0; i < itemPositions.length; ++i) {\n                    const [x, y] = itemPositions[i];\n                    if (map.cells.at(x, y).type != TerrainType.GroundGrass) {\n                        continue;\n                    }\n                \n                    tryPlaceItem(map, x, y, itemTypes[i]);\n                }\n            }\n        } else if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            if (dx >= 5 && dy >= 5) {\n                if (room.roomType == RoomType.PrivateRoom) {\n                    for (let x = 2; x < dx-2; ++x) {\n                        for (let y = 2; y < dy-2; ++y) {\n                            map.cells.at(room.posMin[0] + x, room.posMin[1] + y).type = TerrainType.GroundWater;\n                        }\n                    }\n                }\n\n                map.cells.at(room.posMin[0] + 1, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMin[0] + 1, room.posMax[1] - 2).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMax[1] - 2).type = TerrainType.Wall0000;\n            } else if (dx == 5 && dy >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                const itemTypes = new Array(dy - 2).fill(ItemType.Table);\n                itemTypes.push(randomlyLitTorch());\n                shuffleArray(itemTypes);\n                for (let y = 1; y < dy-1; ++y) {\n                    placeItem(map, room.posMin[0] + 1, room.posMin[1] + y, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + 2, room.posMin[1] + y, itemTypes[y - 1]);\n                    placeItem(map, room.posMin[0] + 3, room.posMin[1] + y, ItemType.Chair);\n                }\n            } else if (dy == 5 && dx >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                const itemTypes = new Array(dx - 2).fill(ItemType.Table);\n                itemTypes.push(randomlyLitTorch());\n                shuffleArray(itemTypes);\n                for (let x = 1; x < dx-1; ++x) {\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 1, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 2, itemTypes[x - 1]);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 3, ItemType.Chair);\n                }\n            } else if (dx > dy && (dy & 1) == 1 && Math.random() < 0.66667) {\n                let y = Math.floor(room.posMin[1] + dy / 2);\n                const furnitureType = (room.roomType == RoomType.PublicRoom) ? ItemType.Table : ItemType.Chair;\n                const torchType = randomlyLitTorch();\n                const itemTypes = [torchType, furnitureType];\n                shuffleArray(itemTypes);\n                tryPlaceItem(map, room.posMin[0] + 1, y, itemTypes[0]);\n                tryPlaceItem(map, room.posMax[0] - 2, y, itemTypes[1]);\n            } else if (dy > dx && (dx & 1) == 1 && Math.random() < 0.66667) {\n                let x = Math.floor(room.posMin[0] + dx / 2);\n                const furnitureType = (room.roomType == RoomType.PublicRoom) ? ItemType.Table : ItemType.Chair;\n                const torchType = randomlyLitTorch();\n                const itemTypes = [torchType, furnitureType];\n                shuffleArray(itemTypes);\n                tryPlaceItem(map, x, room.posMin[1] + 1, itemTypes[0]);\n                tryPlaceItem(map, x, room.posMax[1] - 2, itemTypes[1]);\n            } else if (dx > 3 && dy > 3) {\n                const furnitureType = (room.roomType == RoomType.PublicRoom) ? ItemType.Table : ItemType.Chair;\n                const torchType = randomlyLitTorch();\n                const itemTypes = [torchType, furnitureType, furnitureType, furnitureType];\n                shuffleArray(itemTypes);\n                tryPlaceItem(map, room.posMin[0], room.posMin[1], itemTypes[0]);\n                tryPlaceItem(map, room.posMax[0] - 1, room.posMin[1], itemTypes[1]);\n                tryPlaceItem(map, room.posMin[0], room.posMax[1] - 1, itemTypes[2]);\n                tryPlaceItem(map, room.posMax[0] - 1, room.posMax[1] - 1, itemTypes[3]);\n            }\n        }\n    }\n}\n\nfunction randomlyLitTorch(): ItemType {\n    return (Math.random() < 0.5) ? ItemType.TorchUnlit : ItemType.TorchLit;\n}\n\nfunction tryPlaceItem(map: GameMap, x: number, y: number, itemType: ItemType) {\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, itemType);\n}\n\nfunction doorAdjacent(map: CellGrid, x: number, y: number): boolean {\n    if (map.at(x - 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x + 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y - 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y + 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction placeItem(map: GameMap, x: number, y: number, type: ItemType) {\n    map.items.push({\n        pos: vec2.fromValues(x, y),\n        type: type,\n    });\n}\n\nfunction placeLoot(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Count number of internal rooms.\n\n    let numRooms = 0;\n    for (const room of rooms) {\n        if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            numRooms += 1;\n        }\n    }\n\n    // Master-suite rooms get loot.\n\n    for (const room of rooms)  {\n        if (room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        if (Math.random() < 0.2) {\n            continue;\n        }\n\n        tryPlaceLoot(room.posMin, room.posMax, map);\n    }\n\n    // Dead-end rooms automatically get loot.\n\n    for (const room of rooms) {\n        if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        let numExits = 0;\n        for (const iAdj of room.edges) {\n            if (adjacencies[iAdj].door) {\n                numExits += 1;\n            }\n        }\n\n        if (numExits < 2) {\n            tryPlaceLoot(room.posMin, room.posMax, map);\n        }\n    }\n\n    // Place a bit of extra loot.\n\n    let posMin = vec2.fromValues(0, 0);\n    let posMax = vec2.fromValues(map.cells.sizeX, map.cells.sizeY);\n    for (let i = Math.floor(numRooms / 4 + randomInRange(4)); i > 0; --i) {\n        tryPlaceLoot(posMin, posMax, map);\n    }\n}\n\nfunction tryPlaceLoot(posMin: vec2, posMax: vec2, map: GameMap)\n{\n    let dx = posMax[0] - posMin[0];\n    let dy = posMax[1] - posMin[1];\n\n    for (let i = 1000; i > 0; --i) {\n        let pos = vec2.fromValues(posMin[0] + randomInRange(dx), posMin[1] + randomInRange(dy));\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        placeItem(map, pos[0], pos[1], ItemType.Coin);\n        break;\n    }\n}\n\nfunction placeExteriorBushes(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = sy - outerBorder + 1; y < sy; ++y) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if ((x & 1) == 0 && Math.random() < 0.8) {\n            placeItem(map, x, sy - 1, ItemType.Bush);\n        }\n    }\n\n    for (let y = outerBorder; y < sy - outerBorder + 1; ++y) {\n        for (let x = 0; x < outerBorder-1; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        for (let x = (sx - outerBorder + 1); x < sx; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if (((sy - y) & 1) != 0) {\n            if (Math.random() < 0.8) {\n                placeItem(map, 0, y, ItemType.Bush);\n            }\n            if (Math.random() < 0.8) {\n                placeItem(map, sx - 1, y, ItemType.Bush);\n            }\n        }\n    }\n}\n\nfunction placeFrontPillars(map: GameMap) {\n    let sx = map.cells.sizeX - 1;\n    let cx = Math.floor(map.cells.sizeX / 2);\n\n    for (let x = outerBorder; x < cx; x += 5) {\n        map.cells.at(x, 1).type = TerrainType.Wall0000;\n        map.cells.at(sx - x, 1).type = TerrainType.Wall0000;\n    }\n}\n\nfunction isItemAtPos(map: GameMap, x: number, y: number): boolean {\n    for (const item of map.items) {\n        if (item.pos[0] == x && item.pos[1] == y) {\n            return true;\n        }\n    }\n    for (const guard of map.guards) {\n        if (guard.pos[0] == x && guard.pos[1] == y) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction isCourtyardRoomType(roomType: RoomType): boolean {\n    switch (roomType) {\n    case RoomType.Exterior: return false;\n    case RoomType.PublicCourtyard: return true;\n    case RoomType.PublicRoom: return false;\n    case RoomType.PrivateCourtyard: return true;\n    case RoomType.PrivateRoom: return false;\n    }\n}\n\nfunction placeGuards(level: number, map: GameMap, patrolRoutes: Array<Array<vec2>>) {\n    if (level <= 0) {\n        return;\n    }\n\n    // Old math for desired number of guards\n\n//    let numGuards = (level == 1) ? 1 : Math.max(2, Math.floor((numRooms * Math.min(level + 18, 40)) / 100));\n\n    // Generate guards\n\n    for (const patrolPath of patrolRoutes) {\n        const guard = new Guard(patrolPath, map);\n        if (map.guards.length < 1) {\n            guard.hasTorch = true;\n        }\n        map.guards.push(guard);\n    }\n}\n\nfunction generateInitialGuardPos(map: GameMap): vec2 | undefined {\n    let sizeX = map.cells.sizeX;\n    let sizeY = map.cells.sizeY;\n    for (let i = 0; i < 1000; ++i) {\n        let pos = vec2.fromValues(randomInRange(sizeX), randomInRange(sizeY));\n\n        if (vec2.squaredDistance(map.playerStartPos, pos) < 64) {\n            continue;\n        }\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        return pos;\n    }\n\n    return undefined;\n}\n\nfunction markExteriorAsSeen(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            if (map.cells.at(x, y).type == TerrainType.GroundNormal ||\n                (x > 0 && map.cells.at(x-1, y).type == TerrainType.GroundNormal) ||\n                (x > 0 && y > 0 && map.cells.at(x-1, y-1).type == TerrainType.GroundNormal) ||\n                (x > 0 && y+1 < sy && map.cells.at(x-1, y+1).type == TerrainType.GroundNormal) ||\n                (y > 0 && map.cells.at(x, y-1).type == TerrainType.GroundNormal) ||\n                (y+1 < sy && map.cells.at(x, y+1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && map.cells.at(x+1, y).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y > 0 && map.cells.at(x+1, y-1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y+1 < sy && map.cells.at(x+1, y+1).type == TerrainType.GroundNormal)) {\n                map.cells.at(x, y).seen = true;\n            }\n        }\n    }\n}\n\nfunction cacheCellInfo(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            const cell = map.cells.at(x, y);\n            const cellType = cell.type;\n            const isWall = cellType >= TerrainType.Wall0000 && cellType <= TerrainType.Wall1111;\n            const isWindow = isWindowTerrainType(cellType);\n            const isWater = cellType == TerrainType.GroundWater;\n            cell.moveCost = (isWall || isWindow) ? Infinity : isWater ? 4096 : 0;\n            cell.blocksPlayerMove = isWall;\n            cell.blocksPlayerSight = isWall;\n            cell.blocksSight = isWall || isWindow;\n            cell.blocksSound = isWall;\n            cell.hidesPlayer = false;\n        }\n    }\n\n    for (const item of map.items) {\n        let cell = map.cells.at(item.pos[0], item.pos[1]);\n        let itemType = item.type;\n        cell.moveCost = Math.max(cell.moveCost, guardMoveCostForItemType(itemType));\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW) {\n            cell.blocksPlayerSight = true;\n        }\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW || itemType == ItemType.PortcullisNS || itemType == ItemType.PortcullisEW || itemType == ItemType.Bush) {\n            cell.blocksSight = true;\n        }\n        if (itemType == ItemType.Table || itemType == ItemType.Bush) {\n            cell.hidesPlayer = true;\n        }\n    }\n}\n\nfunction fixupWalls(map: CellGrid) {\n    for (let x = 0; x < map.sizeX; ++x) {\n        for (let y = 0; y < map.sizeY; ++y) {\n            const terrainType = map.at(x, y).type;\n            if (terrainType == TerrainType.Wall0000) {\n                map.at(x, y).type = wallTypeFromNeighbors(neighboringWalls(map, x, y));\n            }\n        }\n    }\n}\n\nfunction wallTypeFromNeighbors(neighbors: number): TerrainType {\n    return TerrainType.Wall0000 + neighbors;\n}\n\nfunction isWall(terrainType: TerrainType): boolean {\n    return terrainType >= TerrainType.Wall0000 && terrainType <= TerrainType.DoorEW;\n}\n\nfunction neighboringWalls(map: CellGrid, x: number, y: number): number {\n    const sizeX = map.sizeX;\n    const sizeY = map.sizeY;\n    let wallBits = 0;\n\n    if (y < sizeY-1 && isWall(map.at(x, y+1).type)) {\n        wallBits |= 8;\n    }\n    if (y > 0 && isWall(map.at(x, y-1).type)) {\n        wallBits |= 4;\n    }\n    if (x < sizeX-1 && isWall(map.at(x+1, y).type)) {\n        wallBits |= 2;\n    }\n    if (x > 0 && isWall(map.at(x-1, y).type)) {\n        wallBits |= 1;\n    }\n\n    return wallBits\n}\n","export { Renderer };\nimport { TileSet, FontTileSet, TileInfo } from './tilesets';\nimport { vec2, mat4 } from './my-matrix';\n\n// #####################\n// Web-GL Renderer\n// #####################\n\nclass Renderer {\n    getScreenSize(screenSize: vec2) {}\n    beginFrame = (screenSize:vec2) => {}\n    start(matScreenFromWorld: mat4, textureIndex: number) {}\n    addGlyph(x0: number, y0: number, x1: number, y1: number, tileInfo:TileInfo, lit:boolean=true) {}\n    flush() {}\n    fontTileSet: FontTileSet;\n    tileSet: TileSet;\n\n    constructor(canvas: HTMLCanvasElement, tileSet:TileSet, fontTileSet:FontTileSet) {\n        this.tileSet = tileSet;\n        this.fontTileSet = fontTileSet;\n        const gl = canvas.getContext(\"webgl2\", { alpha: false, depth: false }) as WebGL2RenderingContext;\n        const textures = [fontTileSet.image, tileSet.image].map((image) => createTextureFromImage(gl, image));\n        \n        const vsSource = `#version 300 es\n            in vec2 vPosition;\n            in vec3 vTexcoord;\n            in vec4 vColor;\n\n            uniform mat4 uMatScreenFromWorld;\n\n            out highp vec3 fTexcoord;\n            out highp vec4 fColor;\n\n            void main() {\n                fTexcoord = vTexcoord;\n                fColor = vColor;\n                gl_Position = uMatScreenFromWorld * vec4(vPosition, 0, 1);\n            }\n        `;\n\n        const fsSource = `#version 300 es\n            in highp vec3 fTexcoord;\n            in highp vec4 fColor;\n\n            uniform highp sampler2DArray uOpacity;\n\n            out lowp vec4 fragColor;\n\n            void main() {\n                fragColor = fColor * texture(uOpacity, fTexcoord);\n            }\n        `;\n\n        const attribs = {\n            vPosition: 0,\n            vTexcoord: 1,\n            vColor: 2,\n        };\n\n        const tileRatios = [tileSet.tileSize[0]/tileSet.cellSize[0], tileSet.tileSize[1]/tileSet.cellSize[1]]\n\n        const program = initShaderProgram(gl, vsSource, fsSource, attribs);\n\n        const uProjectionMatrixLoc = gl.getUniformLocation(program, 'uMatScreenFromWorld');\n        const uOpacityLoc = gl.getUniformLocation(program, 'uOpacity');\n\n        const maxQuads = 64;\n        const numVertices = 4 * maxQuads;\n        const bytesPerVertex = 2 * Float32Array.BYTES_PER_ELEMENT + 2 * Uint32Array.BYTES_PER_ELEMENT;\n        const wordsPerQuad = bytesPerVertex; // divide by four bytes per word, but also multiply by four vertices per quad\n\n        const vertexData = new ArrayBuffer(numVertices * bytesPerVertex);\n        const vertexDataAsFloat32 = new Float32Array(vertexData);\n        const vertexDataAsUint32 = new Uint32Array(vertexData);\n\n        const vertexBuffer = gl.createBuffer();\n\n        let numQuads = 0;\n\n        const matScreenFromWorldCached = mat4.create();\n\n        const vao = gl.createVertexArray();\n        gl.bindVertexArray(vao);\n        gl.enableVertexAttribArray(attribs.vPosition);\n        gl.enableVertexAttribArray(attribs.vTexcoord);\n        gl.enableVertexAttribArray(attribs.vColor);\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        gl.vertexAttribPointer(attribs.vPosition, 2, gl.FLOAT, false, bytesPerVertex, 0);\n        gl.vertexAttribPointer(attribs.vTexcoord, 3, gl.UNSIGNED_BYTE, false, bytesPerVertex, 8);\n        gl.vertexAttribPointer(attribs.vColor, 4, gl.UNSIGNED_BYTE, true, bytesPerVertex, 12);\n        gl.bufferData(gl.ARRAY_BUFFER, vertexData, gl.DYNAMIC_DRAW);\n        const indexBuffer = createGlyphIndexBuffer(gl, maxQuads);\n        gl.bindVertexArray(null);\n\n        this.getScreenSize = (screenSize: vec2) => {\n            const canvas = gl.canvas as HTMLCanvasElement;\n            resizeCanvasToDisplaySize(canvas);\n            const screenX = canvas.clientWidth;\n            const screenY = canvas.clientHeight;\n            vec2.set(screenSize, screenX, screenY);\n        }\n    \n        this.start = (matScreenFromWorld: mat4, textureIndex: number) => {\n            mat4.copy(matScreenFromWorldCached, matScreenFromWorld);\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D_ARRAY, textures[textureIndex]);\n        }\n\n        this.addGlyph = (x0: number, y0: number, x1: number, y1: number, tileInfo:TileInfo, lit:boolean=true) => {\n            if (numQuads >= maxQuads) {\n                this.flush();\n            }\n\n            x1 = x0+(x1-x0)*tileRatios[0];\n            y1 = y0+(y1-y0)*tileRatios[1];\n\n            const color = lit? tileInfo.color? tileInfo.color:0xffffffff\n                    : tileInfo.unlitColor? tileInfo.unlitColor:0xffffffff;\n\n            const i = numQuads * wordsPerQuad;\n            const srcBase = tileInfo.textureIndex << 16;\n\n            vertexDataAsFloat32[i+0] = x0;\n            vertexDataAsFloat32[i+1] = y0;\n            vertexDataAsUint32[i+2] = srcBase + 256;\n            vertexDataAsUint32[i+3] = color;\n\n            vertexDataAsFloat32[i+4] = x1;\n            vertexDataAsFloat32[i+5] = y0;\n            vertexDataAsUint32[i+6] = srcBase + 257;\n            vertexDataAsUint32[i+7] = color;\n\n            vertexDataAsFloat32[i+8] = x0;\n            vertexDataAsFloat32[i+9] = y1;\n            vertexDataAsUint32[i+10] = srcBase;\n            vertexDataAsUint32[i+11] = color;\n\n            vertexDataAsFloat32[i+12] = x1;\n            vertexDataAsFloat32[i+13] = y1;\n            vertexDataAsUint32[i+14] = srcBase + 1;\n            vertexDataAsUint32[i+15] = color;\n\n            ++numQuads;\n        }\n\n        this.flush = () => {\n            if (numQuads <= 0) {\n                return;\n            }\n\n            gl.useProgram(program);\n\n            gl.bindVertexArray(vao);\n\n            gl.uniform1i(uOpacityLoc, 0);\n\n            gl.uniformMatrix4fv(uProjectionMatrixLoc, false, matScreenFromWorldCached);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertexDataAsFloat32, 0);\n\n            gl.drawElements(gl.TRIANGLES, 6 * numQuads, gl.UNSIGNED_SHORT, 0);\n\n            gl.bindVertexArray(null);\n\n            numQuads = 0;\n        }\n        this.beginFrame = (screenSize:vec2) => {\n            const canvas = gl.canvas as HTMLCanvasElement;\n    \n            resizeCanvasToDisplaySize(canvas); //TODO: Put this in a listener for window size changes\n    \n            const screenX = canvas.clientWidth;\n            const screenY = canvas.clientHeight;\n        \n            gl.viewport(0, 0, screenX, screenY);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n            \n        }\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.clearColor(0, 0, 0, 1);\n    }\n}\n\nfunction createGlyphIndexBuffer(gl: WebGL2RenderingContext, maxQuads: number): WebGLBuffer {\n    const indices = new Uint16Array(maxQuads * 6);\n\n    for (let i = 0; i < maxQuads; ++i) {\n        let j = 6*i;\n        let k = 4*i;\n        indices[j+0] = k+0;\n        indices[j+1] = k+1;\n        indices[j+2] = k+2;\n        indices[j+3] = k+2;\n        indices[j+4] = k+1;\n        indices[j+5] = k+3;\n    }\n\n    const indexBuffer = gl.createBuffer()!;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n    return indexBuffer;\n}\n\nfunction createTextureFromImage(gl: WebGL2RenderingContext, image: HTMLImageElement): WebGLTexture {\n    const numGlyphsX = 16;\n    const numGlyphsY = 16;\n    const numGlyphs = numGlyphsX * numGlyphsY;\n    const srcGlyphSizeX = image.naturalWidth / numGlyphsX;\n    const srcGlyphSizeY = image.naturalHeight / numGlyphsY;\n    const scaleFactor = 1;\n    const dstGlyphSizeX = srcGlyphSizeX * scaleFactor;\n    const dstGlyphSizeY = srcGlyphSizeY * scaleFactor;\n\n    // Rearrange the glyph data from a grid to a vertical array\n\n    const canvas = document.createElement('canvas');\n    canvas.width = dstGlyphSizeX;\n    canvas.height = dstGlyphSizeY * numGlyphs;\n    const ctx = canvas.getContext('2d')!;\n    ctx.imageSmoothingEnabled = false;\n    for (let y = 0; y < numGlyphsY; ++y) {\n        for (let x = 0; x < numGlyphsX; ++x) {\n            const sx = x * srcGlyphSizeX;\n            const sy = y * srcGlyphSizeY;\n            const dx = 0;\n            const dy = (numGlyphsX * y + x) * dstGlyphSizeY;\n            ctx.drawImage(image, sx, sy, srcGlyphSizeX, srcGlyphSizeY, dx, dy, dstGlyphSizeX, dstGlyphSizeY);\n        }\n    }\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const pixels = new Uint8Array(imageData.data.buffer);\n\n    const texture = gl.createTexture()!;\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, dstGlyphSizeX, dstGlyphSizeY, numGlyphs, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return texture;\n}\n\nfunction loadShader(gl: WebGL2RenderingContext, type: number, source: string): WebGLShader {\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n    }\n\n    return shader;\n}\n\nfunction initShaderProgram(gl: WebGL2RenderingContext, vsSource: string, fsSource: string, attribs: Record<string, number>): WebGLProgram {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n    const program = gl.createProgram()!;\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n\n    for (const attrib in attribs) {\n        gl.bindAttribLocation(program, attribs[attrib], attrib);\n    }\n\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(program))!;\n    }\n\n    return program;\n}\n\nfunction resizeCanvasToDisplaySize(canvas: HTMLCanvasElement) {\n    const parentElement = canvas.parentNode as HTMLElement;\n    const rect = parentElement.getBoundingClientRect();\n    if (canvas.width !== rect.width || canvas.height !== rect.height) {\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n    }\n}\n","export const black: number = 0xff000000;\nexport const darkBlue: number = 0xffa80000;\nexport const darkGreen: number = 0xff00a800;\nexport const darkCyan: number = 0xffa8a800;\nexport const darkRed: number = 0xff0000a8;\nexport const darkMagenta: number = 0xffa800a8;\nexport const darkBrown: number = 0xff0054a8;\nexport const lighterGray: number = 0xffd0d0d0;\nexport const lightGray: number = 0xffa8a8a8;\nexport const midGray: number = 0xff808080;\nexport const darkGray: number = 0xff545454;\nexport const darkerGray: number = 0xff303030;\nexport const lightBlue: number = 0xfffe5454;\nexport const lightGreen: number = 0xff54fe54;\nexport const lightCyan: number = 0xfffefe54;\nexport const lightRed: number = 0xff5454fe;\nexport const lightMagenta: number = 0xfffe54fe;\nexport const lightYellow: number = 0xff54fefe;\nexport const white: number = 0xfffefefe;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k57aN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dwPvt\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7FSnQ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8dSx0\")).toString();","import * as colorPreset from './color-preset';\nimport { TerrainType } from './game-map';\nimport { vec2 } from './my-matrix';\n\nconst imageTileset34 = require('url:./tiles34.png')\nconst imageTileset31Color = require('url:./tiles31color.png')\nconst imageTilesetSinCity = require('url:./tiles-sincity.png')\nconst imageTilesetBasic = require('url:./tiles.png')\nconst imageTilesetFont = require('url:./font.png')\n\n\nexport type TileInfo = {\n    textureIndex: number; //[number,number]|\n    color?: number;\n    unlitColor?: number\n}\n\nexport type TileSet = {\n    name: string;\n    imageSrc: string;\n    image: HTMLImageElement;\n    tileSize: [number, number];\n    cellSize: [number, number];\n    offset: [number, number];\n    terrainTiles: Array<TileInfo>;\n    itemTiles: Array<TileInfo>;\n    guardStateTiles: Array<TileInfo>;\n    npcTiles: Array<TileInfo>;\n    playerTiles: Array<TileInfo>;\n    unlitTile: TileInfo;\n    flattenTexture: boolean;\n}\n\nexport type FontTileSet = {\n    name: string;\n    imageSrc: string;\n    image: HTMLImageElement;\n    tileSize: [number, number];\n    offset: [number, number];\n    letterMap: Array<TileInfo>;\n}\n\nexport function getTileSet(name:'34view'|'basic'|'sincity'|'31color'):TileSet {\n    if(name=='34view') {\n        return canvasTilesetThreeQuarter;\n    }\n    if(name=='basic') {\n        return BasicTileset;\n    }\n    if(name=='sincity') {\n        return sinCityTileSet;\n    }\n    if(name=='31color') {\n        return tileSet31Color;\n    }\n    throw new Error(`Unsupported tileset ${name}`);\n}\n\nexport function getFontTileSet(name:'font'):FontTileSet {\n    if(name=='font') {\n        return basicFontTileset;\n    }\n    else {\n        throw new Error(`Unsupported tileset ${name}`);\n    }\n}\n\nfunction r(x:[number,number]) {\n    return (x[1])*16+x[0]\n}\n\nconst basicFontTileset:FontTileSet = {\n    name: 'Basic Font',\n    imageSrc: imageTilesetFont,\n    image: new Image(),\n    tileSize: [16,16],\n    offset: [0,0],\n    letterMap: [],  \n}\n\nconst sinCityTileSet:TileSet = {\n    name: 'Sin City Tileset',\n    imageSrc: imageTilesetSinCity,\n    image: new Image(),\n    tileSize: [16,16],\n    cellSize: [16,16],\n    offset: [0,0],\n    flattenTexture: true,\n    unlitTile: {textureIndex: r([0, 0])}, //color:colorPreset.lightBlue\n    terrainTiles: [ \n        {textureIndex: r([5,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GroundNormal,\n        {textureIndex: r([2,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GroundGrass,\n        {textureIndex: r([4,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GroundWater,\n        {textureIndex: r([0,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GroundMarble,\n        {textureIndex: r([1,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GroundWood,\n        {textureIndex: r([1,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GroundWoodCreaky,\n        {textureIndex: r([0,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0000,\n        {textureIndex: r([2,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0001,\n        {textureIndex: r([4,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0010,\n        {textureIndex: r([6,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0011,\n        {textureIndex: r([1,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0100,\n        {textureIndex: r([9,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0101,\n        {textureIndex: r([8,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0110,\n        {textureIndex: r([12, 1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall0111,\n        {textureIndex: r([3,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1000,\n        {textureIndex: r([10, 1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1001,\n        {textureIndex: r([7,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1010,\n        {textureIndex: r([14, 1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1011,\n        {textureIndex: r([5,  1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1100,\n        {textureIndex: r([13, 1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1101,\n        {textureIndex: r([11, 1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1110,\n        {textureIndex: r([15, 1]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.Wall1111,\n        {textureIndex: r([0,  2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.OneWayWindowE,\n        {textureIndex: r([2,  2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.OneWayWindowW,\n        {textureIndex: r([3,  2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.OneWayWindowN,\n        {textureIndex: r([1,  2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.OneWayWindowS,\n        {textureIndex: r([10, 2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.PortcullisNS,\n        {textureIndex: r([10, 2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.PortcullisEW,\n        {textureIndex: r([6,  2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.DoorNS,\n        {textureIndex: r([4,  2]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.DoorEW,\n        {textureIndex: r([2,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GardenDoorNS,\n        {textureIndex: r([2,  4]),  color:colorPreset.darkGray, unlitColor:0xff904040}, // TerrainType.GardenDoorEW,\n    ], \n    itemTiles: [\n        {textureIndex: r([3,  3]),                                 unlitColor:colorPreset.lightGray}, // ItemType.Chair,\n        {textureIndex: r([4,  3]),                                 unlitColor:colorPreset.lightGray}, // ItemType.Table,\n        {textureIndex: r([2,  3]),  color:colorPreset.darkGray,    unlitColor:0xff904040}, // ItemType.Bush,\n        {textureIndex: r([5,  3]),                                 unlitColor:colorPreset.lightGray}, // ItemType.Coin,\n        {textureIndex: r([6,  2]),  color:colorPreset.darkGray,    unlitColor:0xff904040}, // ItemType.DoorNS,\n        {textureIndex: r([4,  2]),  color:colorPreset.darkGray,    unlitColor:0xff904040}, // ItemType.DoorEW,\n        {textureIndex: r([10,  3]), color:colorPreset.darkGray,    unlitColor:0xff904040}, // ItemType.PortcullisNS,\n        {textureIndex: r([10,  3]), color:colorPreset.darkGray,    unlitColor:0xff904040}, // ItemType.PortcullisEW,\n        {textureIndex: r([0,  3]),                                 unlitColor:colorPreset.lightGray}, // ItemType.TorchUnlit,\n        {textureIndex: r([1,  3]),                                 unlitColor:colorPreset.lightGray}, // ItemType.TorchLit,    \n        {textureIndex: r([6,  3]),                                 unlitColor:colorPreset.lightGray}, // ItemType.TorchCarry,    \n    ],\n    npcTiles: [\n        {textureIndex: r([3, 5])},//guardE:\n        {textureIndex: r([2, 5])},//guardN:\n        {textureIndex: r([4, 5])},//guardW:\n        {textureIndex: r([1, 5])},//guardS:\n        {textureIndex: r([3, 5]), color:colorPreset.darkGray},//guardEnoLoS:\n        {textureIndex: r([2, 5]), color:colorPreset.darkGray},//guardNnoLoS:\n        {textureIndex: r([4, 5]), color:colorPreset.darkGray},//guardWnoLoS:\n        {textureIndex: r([1, 5]), color:colorPreset.darkGray},//guardSnoLoS:\n        {textureIndex: r([3, 5]) },//guardE:\n        {textureIndex: r([2, 5]) },//guardN:\n        {textureIndex: r([4, 5]) },//guardW:\n        {textureIndex: r([1, 5]) },//guardS:\n    ],\n    playerTiles: [\n        {textureIndex: r([0,5]), }, //playerNormal\n        {textureIndex: r([0,5]), color:colorPreset.darkRed}, //playerWounded\n        {textureIndex: r([0,5]), color:colorPreset.darkGray}, //playerHidden: \n        {textureIndex: r([0,5]), color:colorPreset.lightRed}, //playerNoisy: \n        {textureIndex: r([0,5]), color:colorPreset.lightGray}, //playerUnlit: \n    ],\n    guardStateTiles: [\n        {textureIndex: r([4,0]), }, //Relaxed\n        {textureIndex: r([5,5]), }, //Alerted\n        {textureIndex: r([6,5]), }, //Chasing\n    ]\n}\n\nconst tileSet31Color:TileSet = {\n    name: '31 Color Tileset',\n    imageSrc: imageTileset31Color,\n    image: new Image(),\n    tileSize: [16,16],\n    cellSize: [16,16],\n    offset: [0,0],\n    flattenTexture: true,\n    unlitTile: {textureIndex: r([0, 0])}, //color:colorPreset.lightBlue\n    terrainTiles: [ \n        {textureIndex: r([5,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GroundNormal,\n        {textureIndex: r([2,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GroundGrass,\n        {textureIndex: r([4,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GroundWater,\n        {textureIndex: r([0,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GroundMarble,\n        {textureIndex: r([1,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GroundWood,\n        {textureIndex: r([1,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GroundWoodCreaky,\n        {textureIndex: r([0,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0000,\n        {textureIndex: r([2,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0001,\n        {textureIndex: r([4,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0010,\n        {textureIndex: r([6,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0011,\n        {textureIndex: r([1,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0100,\n        {textureIndex: r([9,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0101,\n        {textureIndex: r([8,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0110,\n        {textureIndex: r([12, 1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall0111,\n        {textureIndex: r([3,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1000,\n        {textureIndex: r([10, 1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1001,\n        {textureIndex: r([7,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1010,\n        {textureIndex: r([14, 1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1011,\n        {textureIndex: r([5,  1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1100,\n        {textureIndex: r([13, 1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1101,\n        {textureIndex: r([11, 1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1110,\n        {textureIndex: r([15, 1]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.Wall1111,\n        {textureIndex: r([0,  2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.OneWayWindowE,\n        {textureIndex: r([2,  2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.OneWayWindowW,\n        {textureIndex: r([3,  2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.OneWayWindowN,\n        {textureIndex: r([1,  2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.OneWayWindowS,\n        {textureIndex: r([10, 2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.PortcullisNS,\n        {textureIndex: r([10, 2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.PortcullisEW,\n        {textureIndex: r([6,  2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.DoorNS,\n        {textureIndex: r([4,  2]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.DoorEW,\n        {textureIndex: r([2,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GardenDoorNS,\n        {textureIndex: r([2,  4]),  color:colorPreset.white, unlitColor:0xffa07070}, // TerrainType.GardenDoorEW,\n    ], \n    itemTiles: [\n        {textureIndex: r([3,  3]),                                 unlitColor:0xffa07070}, // ItemType.Chair,\n        {textureIndex: r([4,  3]),                                 unlitColor:0xffa07070}, // ItemType.Table,\n        {textureIndex: r([2,  3]),  color:colorPreset.white,       unlitColor:0xffa07070}, // ItemType.Bush,\n        {textureIndex: r([5,  3]),                                 unlitColor:0xffd0b0b0}, // ItemType.Coin,\n        {textureIndex: r([6,  2]),  color:colorPreset.white,       unlitColor:0xffa07070}, // ItemType.DoorNS,\n        {textureIndex: r([4,  2]),  color:colorPreset.white,       unlitColor:0xffa07070}, // ItemType.DoorEW,\n        {textureIndex: r([10,  3]), color:colorPreset.white,       unlitColor:0xffa07070}, // ItemType.PortcullisNS,\n        {textureIndex: r([10,  3]), color:colorPreset.white,       unlitColor:0xffa07070}, // ItemType.PortcullisEW,\n        {textureIndex: r([0,  3]),                                 unlitColor:0xffa07070}, // ItemType.TorchUnlit,\n        {textureIndex: r([1,  3]),                                 unlitColor:0xffa07070}, // ItemType.TorchLit,    \n        {textureIndex: r([6,  3]),                                 unlitColor:0xffa07070}, // ItemType.TorchCarry,    \n    ],\n    npcTiles: [\n        {textureIndex: r([3, 5])},//guardE:\n        {textureIndex: r([2, 5])},//guardN:\n        {textureIndex: r([4, 5])},//guardW:\n        {textureIndex: r([1, 5])},//guardS:\n        {textureIndex: r([3, 5]), color:colorPreset.darkGray},//guardEnoLoS:\n        {textureIndex: r([2, 5]), color:colorPreset.darkGray},//guardNnoLoS:\n        {textureIndex: r([4, 5]), color:colorPreset.darkGray},//guardWnoLoS:\n        {textureIndex: r([1, 5]), color:colorPreset.darkGray},//guardSnoLoS:\n        {textureIndex: r([3, 5]) },//guardE:\n        {textureIndex: r([2, 5]) },//guardN:\n        {textureIndex: r([4, 5]) },//guardW:\n        {textureIndex: r([1, 5]) },//guardS:\n    ],\n    playerTiles: [\n        {textureIndex: r([0,5]), }, //playerNormal\n        {textureIndex: r([0,5]), color:colorPreset.darkRed}, //playerWounded\n        {textureIndex: r([0,6]), color:colorPreset.darkGray}, //playerHidden: \n        {textureIndex: r([0,5]), color:colorPreset.lightRed}, //playerNoisy: \n        {textureIndex: r([0,5]), color:colorPreset.lightGray}, //playerUnlit: \n    ],\n    guardStateTiles: [\n        {textureIndex: r([4,0]), }, //Relaxed\n        {textureIndex: r([5,5]), }, //Alerted\n        {textureIndex: r([6,5]), }, //Chasing\n    ]\n}\n\n\nconst canvasTilesetThreeQuarter:TileSet = {\n    name: '3/4 View Tileset',\n    imageSrc: imageTileset34,\n    image: new Image(),\n    tileSize: [24,36],\n    cellSize: [24,24],\n    offset: [0,0],\n    flattenTexture: true,\n    unlitTile: {textureIndex: r([8, 0])}, //color:colorPreset.lightBlue\n    terrainTiles: [ \n        {textureIndex: r([8, 3]),  unlitColor:0xFFa05050}, // TerrainType.GroundNormal,\n        {textureIndex: r([6, 3]),  unlitColor:0xFFa05050}, // TerrainType.GroundGrass,\n        {textureIndex: r([10, 3]), unlitColor:0xFFa05050}, // TerrainType.GroundWater,\n        {textureIndex: r([4, 1]),  unlitColor:0xFFa05050}, // TerrainType.GroundMarble,\n        {textureIndex: r([9, 3]),  unlitColor:0xFFa05050}, // TerrainType.GroundWood,\n        {textureIndex: r([9, 3]),  unlitColor:0xFFa05050}, // TerrainType.GroundWoodCreaky,\n        {textureIndex: r([0, 0]),  unlitColor:0xFFa05050}, // TerrainType.Wall0000,\n        {textureIndex: r([8, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall0001,\n        {textureIndex: r([7, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall0010,\n        {textureIndex: r([4, 3]),  unlitColor:0xFFa05050}, // TerrainType.Wall0011,\n        {textureIndex: r([4, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall0100,\n        {textureIndex: r([1, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall0101,\n        {textureIndex: r([0, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall0110,\n        {textureIndex: r([5, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall0111,\n        {textureIndex: r([0, 3]),  unlitColor:0xFFa05050}, // TerrainType.Wall1000,\n        {textureIndex: r([2, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall1001,\n        {textureIndex: r([3, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall1010,\n        {textureIndex: r([4, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall1011,\n        {textureIndex: r([5, 3]),  unlitColor:0xFFa05050}, // TerrainType.Wall1100,\n        {textureIndex: r([7, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall1101,\n        {textureIndex: r([6, 2]),  unlitColor:0xFFa05050}, // TerrainType.Wall1110,\n        {textureIndex: r([1, 0]),  unlitColor:0xFFa05050}, // TerrainType.Wall1111,\n        {textureIndex: r([4, 0]),  unlitColor:0xFFa05050}, // TerrainType.OneWayWindowE,\n        {textureIndex: r([3, 0]),  unlitColor:0xFFa05050}, // TerrainType.OneWayWindowW,\n        {textureIndex: r([2, 0]),  unlitColor:0xFFa05050}, // TerrainType.OneWayWindowN,\n        {textureIndex: r([2, 1]),  unlitColor:0xFFa05050}, // TerrainType.OneWayWindowS,\n        {textureIndex: r([0, 1]),  unlitColor:0xFFa05050}, // TerrainType.PortcullisNS,\n        {textureIndex: r([1, 1]),  unlitColor:0xFFa05050}, // TerrainType.PortcullisEW,\n        {textureIndex: r([6, 0]),  unlitColor:0xFFa05050}, // TerrainType.DoorNS,\n        {textureIndex: r([5, 0]),  unlitColor:0xFFa05050}, // TerrainType.DoorEW,\n        {textureIndex: r([6, 3]),  unlitColor:0xFFa05050}, // TerrainType.GardenDoorNS,\n        {textureIndex: r([6, 3]),  unlitColor:0xFFa05050}, // TerrainType.GardenDoorEW,\n    ], \n    itemTiles: [\n        {textureIndex: r([5, 5]),  color:colorPreset.darkBrown  , unlitColor:colorPreset.darkGray}, // ItemType.Chair,\n        {textureIndex: r([3, 5]),  color:colorPreset.darkBrown  , unlitColor:colorPreset.darkGray}, // ItemType.Table,\n        {textureIndex: r([0, 6]),                                 unlitColor:colorPreset.darkGray}, // ItemType.Bush,\n        {textureIndex: r([14, 5]), color:colorPreset.lightYellow, unlitColor:colorPreset.darkGray}, // ItemType.Coin,\n        {textureIndex: r([6, 0]),                                 unlitColor:colorPreset.darkGray}, // ItemType.DoorNS,\n        {textureIndex: r([5, 0]),                                 unlitColor:colorPreset.darkGray}, // ItemType.DoorEW,\n        {textureIndex: r([0, 1]),                                 unlitColor:colorPreset.darkGray}, // ItemType.PortcullisNS,\n        {textureIndex: r([1, 1]),                                 unlitColor:colorPreset.darkGray}, // ItemType.PortcullisEW,\n        {textureIndex: r([15, 4]),                                unlitColor:colorPreset.lightGray}, // ItemType.TorchUnlit,\n        {textureIndex: r([14, 4]),                                unlitColor:colorPreset.lightGray}, // ItemType.TorchLit,    \n        {textureIndex: r([13, 4]),                                unlitColor:colorPreset.lightGray}, // ItemType.TorchCarry,    \n    ],\n    npcTiles: [\n        {textureIndex: r([9, 4])},//guardE:\n        {textureIndex: r([10, 4])},//guardN:\n        {textureIndex: r([11, 4])},//guardW:\n        {textureIndex: r([12, 4])},//guardS:\n        {textureIndex: r([9, 4]), color:colorPreset.darkGray},//guardEnoLoS:\n        {textureIndex: r([10, 4]), color:colorPreset.darkGray},//guardNnoLoS:\n        {textureIndex: r([11, 4]), color:colorPreset.darkGray},//guardWnoLoS:\n        {textureIndex: r([12, 4]), color:colorPreset.darkGray},//guardSnoLoS:\n        {textureIndex: r([9, 4]) },//guardE:\n        {textureIndex: r([10, 4]) },//guardN:\n        {textureIndex: r([11, 4]) },//guardW:\n        {textureIndex: r([12, 4]) },//guardS:\n        // {textureIndex: r([1, 4]), color:null},//guardE:\n        // {textureIndex: r([2, 4]), color:null},//guardN:\n        // {textureIndex: r([3, 4]), color:null},//guardW:\n        // {textureIndex: r([4, 4]), color:null},//guardS:\n        // {textureIndex: r([1, 4]), color:colorPreset.darkGray},//guardEnoLoS:\n        // {textureIndex: r([2, 4]), color:colorPreset.darkGray},//guardNnoLoS:\n        // {textureIndex: r([3, 4]), color:colorPreset.darkGray},//guardWnoLoS:\n        // {textureIndex: r([4, 4]), color:colorPreset.darkGray},//guardSnoLoS:\n        // {textureIndex: r([1, 4]), color:colorPreset.lightMagenta},//guardE:\n        // {textureIndex: r([2, 4]), color:colorPreset.lightMagenta},//guardN:\n        // {textureIndex: r([3, 4]), color:colorPreset.lightMagenta},//guardW:\n        // {textureIndex: r([4, 4]), color:colorPreset.lightMagenta},//guardS:\n    ],\n    playerTiles: [\n        {textureIndex: r([0,4]), color:colorPreset.darkGray}, //playerNormal\n        {textureIndex: r([0,4]), color:colorPreset.darkRed}, //playerWounded\n        {textureIndex: r([0,4]), color:0xd0101010}, //playerHidden: \n        {textureIndex: r([0,4]), color:colorPreset.lightCyan}, //playerNoisy: \n        {textureIndex: r([0,4]), color:colorPreset.lightBlue}, //playerUnlit: \n    ],\n    guardStateTiles: [\n        {textureIndex: r([0,4]), color:colorPreset.darkGray}, //Relaxed\n        {textureIndex: r([0,4]), color:colorPreset.darkRed}, //Alerted\n        {textureIndex: r([0,4]), color:0xd0101010}, //Chasing\n    ]\n}\n\n\nvar BasicTileset:TileSet = {\n    name: 'Basic Tiles',\n    imageSrc: imageTilesetBasic,\n    image: new Image(),\n    tileSize: [16,16],\n    cellSize: [16,16],\n    offset: [0,0],\n    flattenTexture: true,\n    unlitTile: {textureIndex:0, color:colorPreset.lightBlue},\n    terrainTiles: [\n        {textureIndex:112, color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.GroundNormal,\n        {textureIndex:116, color:colorPreset.darkGreen, unlitColor:colorPreset.darkBlue}, // TerrainType.GroundGrass,\n        {textureIndex:118, color:colorPreset.lightBlue, unlitColor:colorPreset.darkBlue}, // TerrainType.GroundWater,\n        {textureIndex:120, color:colorPreset.darkCyan,  unlitColor:colorPreset.darkBlue}, // TerrainType.GroundMarble,\n        {textureIndex:122, color:colorPreset.darkBrown, unlitColor:colorPreset.darkBlue}, // TerrainType.GroundWood,\n        {textureIndex:122, color:0xff004070,            unlitColor:colorPreset.darkBlue}, // TerrainType.GroundWoodCreaky,\n        {textureIndex:64,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0000,\n        {textureIndex:65,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0001,\n        {textureIndex:65,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0010,\n        {textureIndex:65,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0011,\n        {textureIndex:66,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0100,\n        {textureIndex:67,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0101,\n        {textureIndex:70,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0110,\n        {textureIndex:73,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall0111,\n        {textureIndex:66,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1000,\n        {textureIndex:68,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1001,\n        {textureIndex:69,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1010,\n        {textureIndex:72,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1011,\n        {textureIndex:66,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1100,\n        {textureIndex:74,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1101,\n        {textureIndex:71,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1110,\n        {textureIndex:75,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.Wall1111,\n        {textureIndex:52,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.OneWayWindowE,\n        {textureIndex:53,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.OneWayWindowW,\n        {textureIndex:54,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.OneWayWindowN,\n        {textureIndex:55,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.OneWayWindowS,\n        {textureIndex:50,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.PortcullisNS,\n        {textureIndex:50,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.PortcullisEW,\n        {textureIndex:77,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.DoorNS,\n        {textureIndex:76,  color:colorPreset.lightGray, unlitColor:colorPreset.darkBlue}, // TerrainType.DoorEW,\n        {textureIndex:116, color:colorPreset.darkGreen, unlitColor:colorPreset.darkBlue}, // TerrainType.GardenDoorNS,\n        {textureIndex:116, color:colorPreset.darkGreen, unlitColor:colorPreset.darkBlue}, // TerrainType.GardenDoorEW,\n    ],    \n    itemTiles: [\n        {textureIndex:100, color:colorPreset.darkBrown  , unlitColor:colorPreset.darkGray}, // ItemType.Chair,\n        {textureIndex:98,  color:colorPreset.darkBrown  , unlitColor:colorPreset.darkGray}, // ItemType.Table,\n        {textureIndex:96,  color:colorPreset.darkGreen  , unlitColor:colorPreset.darkGray}, // ItemType.Bush,\n        {textureIndex:110, color:colorPreset.lightYellow, unlitColor:colorPreset.darkGray}, // ItemType.Coin,\n        {textureIndex:89,  color:colorPreset.darkBrown  , unlitColor:colorPreset.darkGray}, // ItemType.DoorNS,\n        {textureIndex:87,  color:colorPreset.darkBrown  , unlitColor:colorPreset.darkGray}, // ItemType.DoorEW,\n        {textureIndex:50,  color:colorPreset.lightGray  , unlitColor:colorPreset.darkGray}, // ItemType.PortcullisNS,\n        {textureIndex:50,  color:colorPreset.lightGray  , unlitColor:colorPreset.darkGray}, // ItemType.PortcullisEW,\n        {textureIndex:80,  color:colorPreset.darkGray   , unlitColor:colorPreset.darkGray}, // ItemType.TorchUnlit,\n        {textureIndex:80,  color:colorPreset.lightYellow, unlitColor:colorPreset.darkGray}, // ItemType.TorchLit,    \n        {textureIndex:80,  color:colorPreset.lightYellow, unlitColor:colorPreset.darkGray}, // ItemType.TorchCarry,    \n    ],\n    playerTiles: [\n        /*playerNormal:*/ {textureIndex:32, color:colorPreset.darkGray}, \n        /*playerWounded:*/ {textureIndex:32, color:colorPreset.darkRed}, \n        /*playerHidden:*/ {textureIndex:32, color:0xd0101010}, \n        /*playerNoisy:*/ {textureIndex:32, color:colorPreset.lightCyan}, \n        /*playerUnlit:*/ {textureIndex:32, color:colorPreset.lightBlue}, \n    ],\n    guardStateTiles: [\n        {textureIndex:0 },//Relaxed\n        {textureIndex:39 },//Alerted\n        {textureIndex:40 },//Chasing\n    ],\n    npcTiles: [\n        {textureIndex:33 },//guardE\n        {textureIndex:34 },//guardN\n        {textureIndex:35 },//guardW\n        {textureIndex:36 },//guardS\n        {textureIndex:33, color:colorPreset.darkGray},//guardEnoLoS\n        {textureIndex:34, color:colorPreset.darkGray},//guardNnoLoS\n        {textureIndex:35, color:colorPreset.darkGray},//guardWnoLoS\n        {textureIndex:36, color:colorPreset.darkGray},//guardSnoLoS\n        {textureIndex:33, color:colorPreset.lightMagenta},//guardE\n        {textureIndex:34, color:colorPreset.lightMagenta},//guardN\n        {textureIndex:35, color:colorPreset.lightMagenta},//guardW\n        {textureIndex:36, color:colorPreset.lightMagenta},//guardS\n    ],\n}\n\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kDrfW\")).toString();","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9HrbR\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2fyQO\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4qSI0\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3kwMs\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3zakP\")).toString();","import {Howl} from 'howler';\nimport {shuffleArray} from './random';\n\nconst footstepWood = require('url:./audio/footstep-wood.ogg');\nconst footstepTile = require('url:./audio/footstep-tile.ogg');\nconst footstepWater = require('url:./audio/footstep-water.ogg');\nconst footstepGravel = require('url:./audio/footstep-gravel.ogg');\nconst footstepGrass = require('url:./audio/footstep-grass.ogg');\nconst footstepCreak1 = require('url:./audio/creak.ogg');\nconst footstepCreak2 = require('url:./audio/creak-2.ogg');\nconst footstepCreak3 = require('url:./audio/creak-3.ogg');\nconst footstepCreak4 = require('url:./audio/creak-4.ogg');\nconst footstepCreak5 = require('url:./audio/creak-5.ogg');\nconst footstepCreak6 = require('url:./audio/creak-6.ogg');\nconst footstepCreak7 = require('url:./audio/squeak1.wav');\nconst footstepCreak8 = require('url:./audio/squeak2.wav');\nconst footstepCreak9 = require('url:./audio/squeak3.wav');\nconst footstepCreak10 = require('url:./audio/squeak4.wav');\nconst footstepCreakSet =[footstepCreak1, footstepCreak2,footstepCreak3,footstepCreak4, footstepCreak5, footstepCreak6, footstepCreak7, footstepCreak8, footstepCreak9, footstepCreak10];\n\n\nconst guardRelaxed1 = require('url:./audio/guards/whistle.ogg');\nconst guardRelaxed2 = require('url:./audio/guards/whistle-2.ogg');\nconst guardRelaxed3 = require('url:./audio/guards/quiet out.ogg');\nconst guardRelaxed4 = require('url:./audio/guards/ahh.ogg');\nconst guardRelaxed5 = require('url:./audio/guards/ahh-2.ogg');\nconst guardRelaxed6 = require('url:./audio/guards/rest me bones.ogg');\nconst guardRelaxedSet = [guardRelaxed1, guardRelaxed2, guardRelaxed3, guardRelaxed4, guardRelaxed5, guardRelaxed6];\n\nconst guardAlert1 = require('url:./audio/guards/Hmm.ogg');\nconst guardAlert2 = require('url:./audio/guards/hey.ogg');\nconst guardAlert3 = require('url:./audio/guards/hey-2.ogg');\nconst guardAlert4 = require('url:./audio/guards/hey-3.ogg');\nconst guardAlert5 = require('url:./audio/guards/What.ogg');\nconst guardAlertSet = [guardAlert1, guardAlert2, guardAlert3, guardAlert4, guardAlert5];\n\nconst guardStopAlert1 = require('url:./audio/guards/jumpin shadows.ogg');\nconst guardStopAlert2 = require('url:./audio/guards/jumpy.ogg');\nconst guardStopAlert3 = require('url:./audio/guards/oh well.ogg');\nconst guardStopAlertSet = [guardStopAlert1, guardStopAlert2, guardStopAlert3 ];\n\nconst guardChasing1 = require('url:./audio/guards/get em.ogg');\nconst guardChasing2 = require('url:./audio/guards/intruder.ogg');\nconst guardChasing3 = require('url:./audio/guards/whistle-2.ogg');\nconst guardChasingSet = [guardChasing1, guardChasing2, guardChasing3];\n\nconst guardStopChasing1 = require('url:./audio/guards/lost em.ogg');\nconst guardStopChasing2 = require('url:./audio/guards/must have run.ogg');\nconst guardStopChasing3 = require('url:./audio/guards/oh well.ogg');\nconst guardStopChasingSet = [guardStopChasing1, guardStopChasing2, guardStopChasing3];\n\nexport class HowlGroup {\n    howls:Array<Howl>;\n    howlNum:number;\n    constructor(files:Array<string>) {\n        this.howls = files.map((file)=>new Howl({src: [file]}))\n        this.howlNum = 0;\n        shuffleArray(this.howls);\n    }\n    play(volume:number):number {\n        const howl = this.nextHowl();\n        howl.volume(volume);\n        return howl.play();\n    }\n    nextHowl(): Howl {\n        this.howlNum++;\n        if(this.howlNum==this.howls.length) {\n            this.howlNum=0;\n            shuffleArray(this.howls);\n        }\n        return this.howls[this.howlNum];\n    }\n}\n\nexport type Howls = { [id:string]: HowlGroup };\n\nexport function setupSounds(sounds:Howls) {\n    sounds.footstepWood = new HowlGroup([footstepWood]);\n    sounds.footstepTile = new HowlGroup([footstepTile]);\n    sounds.footstepWater = new HowlGroup([footstepWater]);\n    sounds.footstepGravel = new HowlGroup([footstepGravel]);\n    sounds.footstepGrass = new HowlGroup([footstepGrass]);\n\n    sounds.footstepCreaky = new HowlGroup(footstepCreakSet);\n    sounds.guardRelaxed = new HowlGroup(guardRelaxedSet);\n    sounds.guardAlert = new HowlGroup(guardAlertSet);\n    sounds.guardStopAlert = new HowlGroup(guardStopAlertSet);\n    sounds.guardChasing = new HowlGroup(guardChasingSet);\n    sounds.guardStopChasing = new HowlGroup(guardStopChasingSet);\n\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9NYDb\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hUD0w\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eV2HF\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ihcZV\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"l7al6\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4m20I\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"l8Gs4\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"91j7m\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dyBrj\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kO5BQ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6DRtk\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8UIiY\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dc6kq\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"giL0r\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1LirQ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kcwN9\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fr6SK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"13ZtD\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cIW1u\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8VThJ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dGACl\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"34VHX\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8KwSJ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hRKbg\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7P7XB\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2eySC\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"61M6l\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bigld\")).toString();","import { vec2, mat4 } from './my-matrix';\nimport { createGameMap } from './create-map';\nimport { BooleanGrid, ItemType, GameMap, Item, Player, TerrainType, maxPlayerHealth, GuardStates } from './game-map';\nimport { GuardMode, guardActAll, lineOfSight } from './guard';\nimport { Renderer } from './render';\nimport { TileInfo, TileSet, FontTileSet, getTileSet, getFontTileSet } from './tilesets';\nimport { setupSounds, Howls, HowlGroup } from './audio';\n\nimport * as colorPreset from './color-preset';\n\nconst tileSet = getTileSet('31color'); //'34view'|'basic'|'sincity'|'31color'\nconst fontTileSet = getFontTileSet('font'); \n\nwindow.onload = loadResourcesThenRun;\n\nconst targetStatusBarWidthInChars: number = 65;\nconst statusBarCharPixelSizeX: number = 8;\nconst statusBarCharPixelSizeY: number = 16;\nconst pixelsPerTileX: number = 16; // width of unzoomed tile\nconst pixelsPerTileY: number = 16; // height of unzoomed tile\nconst viewTileSizeDesiredX: number = 32; // desired minimum viewport tile width\nconst viewTileSizeDesiredY: number = 32; // desired minimum viewport tile height\n\ntype Camera = {\n    position: vec2;\n    velocity: vec2;\n    snapped: boolean;\n}\n\ntype State = {\n    tLast: number | undefined;\n    shiftModifierActive: boolean;\n    shiftUpLastTimeStamp: number;\n    player: Player;\n    finishedLevel: boolean;\n    seeAll: boolean;\n    seeGuardSight: boolean;\n    seeGuardPatrols: boolean;\n    camera: Camera;\n    level: number;\n    gameMap: GameMap;\n    sounds: Howls;\n}\n\nfunction loadResourcesThenRun() {\n    Promise.all([\n        loadImage(fontTileSet.imageSrc, fontTileSet.image),\n        loadImage(tileSet.imageSrc, tileSet.image),\n    ]).then(main);\n}\n\nfunction main(images: Array<HTMLImageElement>) {\n\n    const canvas = document.querySelector(\"#canvas\") as HTMLCanvasElement;\n\n    const renderer = new Renderer(canvas, tileSet, fontTileSet);\n    const sounds:Howls = {};\n    const state = initState(sounds);\n\n    document.body.addEventListener('keydown', onKeyDown);\n    document.body.addEventListener('keyup', onKeyUp);\n\n    function onKeyDown(e: KeyboardEvent) {\n        if (Object.keys(state.sounds).length==0) setupSounds(state.sounds);\n        if (e.code == 'KeyF' || e.code == 'NumpadAdd') {\n            state.shiftModifierActive = true;\n            return;\n        }\n\n        if (e.ctrlKey) {\n            if (e.code === 'KeyA') {\n                e.preventDefault();\n                state.seeAll = !state.seeAll;\n            } else if (e.code === 'KeyV') {\n                e.preventDefault();\n                state.seeGuardSight = !state.seeGuardSight;\n            } else if (e.code === 'KeyP') {\n                e.preventDefault();\n                state.seeGuardPatrols = !state.seeGuardPatrols;\n            } else if (e.code === 'Period') {\n                e.preventDefault();\n                ++state.level;\n                resetState(state);\n            } else if (e.code === 'Comma') {\n                e.preventDefault();\n                state.level = Math.max(0, state.level - 1);\n                resetState(state);\n            }\n        } else if (e.code == 'KeyR') {\n            e.preventDefault();\n            resetState(state);\n        } else {\n            const distDesired = (state.shiftModifierActive || e.shiftKey || (e.timeStamp - state.shiftUpLastTimeStamp) < 1.0) ? 2 : 1;\n            if (e.code == 'ArrowLeft' || e.code == 'Numpad4' || e.code == 'KeyA' || e.code == 'KeyH') {\n                e.preventDefault();\n                tryMovePlayer(state, -1, 0, distDesired);\n            } else if (e.code == 'ArrowRight' || e.code == 'Numpad6' || e.code == 'KeyD' || e.code == 'KeyL') {\n                e.preventDefault();\n                tryMovePlayer(state, 1, 0, distDesired);\n            } else if (e.code == 'ArrowDown' || e.code == 'Numpad2' || e.code == 'KeyS' || e.code == 'KeyJ') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, -1, distDesired);\n            } else if (e.code == 'ArrowUp' || e.code == 'Numpad8' || e.code == 'KeyW' || e.code == 'KeyK') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, 1, distDesired);\n            } else if (e.code == 'Period' || e.code == 'Numpad5' || e.code == 'KeyZ') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, 0, 1);\n            }\n        }\n\n        state.shiftModifierActive = false;\n    }\n\n    function onKeyUp(e: KeyboardEvent) {\n        if (e.code == 'ShiftLeft' || e.code == 'ShiftRight') {\n            state.shiftUpLastTimeStamp = e.timeStamp;\n        }\n    }\n\n    function requestUpdateAndRender() {\n        requestAnimationFrame(now => updateAndRender(now, renderer, state));\n    }\n\n    function onWindowResized() {\n        requestUpdateAndRender();\n    }\n\n    window.addEventListener('resize', onWindowResized);\n\n    requestUpdateAndRender();\n}\n\nfunction advanceToNextLevel(state: State) {\n    state.level += 1;\n    state.gameMap = createGameMap(state.level);\n    state.finishedLevel = false;\n\n    state.player.pos = state.gameMap.playerStartPos;\n    state.player.dir = vec2.fromValues(0, -1);\n    state.player.gold = 0;\n    state.player.noisy = false;\n    state.player.damagedLastTurn = false;\n    state.player.turnsRemainingUnderwater = 0;\n\n    state.camera = createCamera(state.gameMap.playerStartPos);\n\n    state.gameMap.recomputeVisibility(state.player.pos);\n}\n\nfunction tryMovePlayer(state: State, dx: number, dy: number, distDesired: number) {\n\n    const player = state.player;\n\n\n    const oldTerrain = state.gameMap.cells.at(...player.pos).type\n    // Can't move if you're dead.\n\n    if (player.health <= 0) {\n        return;\n    }\n\n    // If just passing time, do that.\n\n    if ((dx === 0 && dy === 0) || distDesired <= 0) {\n        preTurn(state);\n        advanceTime(state);\n        return;\n    }\n\n    let dist = playerMoveDistAllowed(state, dx, dy, distDesired);\n    if (dist <= 0) {\n        const posBump = vec2.fromValues(player.pos[0] + dx * (dist + 1), player.pos[1] + dy * (dist + 1));\n        const item = state.gameMap.items.find((item) => item.pos[0] === posBump[0] && item.pos[1] === posBump[1]);\n        if (item !== undefined && (item.type === ItemType.TorchUnlit || item.type === ItemType.TorchLit)) {\n            preTurn(state);\n            item.type = (item.type === ItemType.TorchUnlit) ? ItemType.TorchLit : ItemType.TorchUnlit;\n            advanceTime(state);\n        }\n        return;\n    }\n\n    // Execute the move. Collect loot along the way; advance to next level when moving off the edge.\n\n    preTurn(state);\n\n    for (; dist > 0; --dist) {\n        player.pos[0] += dx;\n        player.pos[1] += dy;\n\n        if (player.pos[0] < 0 ||\n            player.pos[1] < 0 ||\n            player.pos[0] >= state.gameMap.cells.sizeX ||\n            player.pos[1] >= state.gameMap.cells.sizeY) {\n            advanceToNextLevel(state);\n            return;\n        }\n\n        player.gold += state.gameMap.collectLootAt(player.pos[0], player.pos[1]);\n    }\n\n    // Generate movement noises.\n\n    let cellType = state.gameMap.cells.at(player.pos[0], player.pos[1]).type;\n    if (cellType == TerrainType.GroundWoodCreaky) {\n        makeNoise(state.gameMap, player, 17 /*, state.gameMap.popups, \"\\u{ab}creak\\u{bb}\" */);\n    }\n\n    advanceTime(state);\n\n    const volScale:number = 0.5+Math.random()/2;\n    console.log(volScale);\n    const newTerrain = state.gameMap.cells.at(...player.pos).type\n    const changedTile = oldTerrain !== newTerrain;\n    switch(newTerrain) {\n        case TerrainType.GroundWoodCreaky:\n            state.sounds[\"footstepCreaky\"].play(0.15*volScale);\n            break;\n        case TerrainType.GroundWood:\n            if(changedTile || Math.random()>0.9) state.sounds[\"footstepWood\"].play(0.15*volScale);\n            break;\n        case TerrainType.GroundNormal:\n            if(changedTile || Math.random()>0.5) state.sounds[\"footstepGravel\"].play(0.03*volScale);\n            break;\n        case TerrainType.GroundGrass:\n            if(changedTile || Math.random()>0.75) state.sounds[\"footstepGrass\"].play(0.05*volScale);\n            break;\n        case TerrainType.GroundWater:\n            if(changedTile || Math.random()>0.6) state.sounds[\"footstepWater\"].play(0.02*volScale);\n            break;\n        case TerrainType.GroundMarble:\n            if(changedTile || Math.random()>0.8) state.sounds[\"footstepTile\"].play(0.05*volScale);\n            break;\n        default:\n            if(changedTile || Math.random()>0.8) state.sounds[\"footstepTile\"].play(0.02*volScale);\n            break;\n        }\n\n}\n\nfunction playerMoveDistAllowed(state: State, dx: number, dy: number, maxDist: number): number {\n    const player = state.player;\n\n    let posPrev = vec2.clone(player.pos);\n\n    let distAllowed = 0;\n\n    for (let d = 1; d <= maxDist; ++d) {\n        const pos = vec2.fromValues(player.pos[0] + dx * d, player.pos[1] + dy * d);\n\n        if (pos[0] < 0 ||\n            pos[1] < 0 ||\n            pos[0] >= state.gameMap.cells.sizeX ||\n            pos[1] >= state.gameMap.cells.sizeY) {\n            if (state.gameMap.allSeen() && state.gameMap.allLootCollected()) {\n                distAllowed = d;\n            }\n            break;\n        } else if (blocked(state.gameMap, posPrev, pos)) {\n            break;\n        } else {\n            distAllowed = d;\n        }\n\n        posPrev = pos;\n    }\n\n    // If the move would end on a guard, reject it\n\n    if (distAllowed > 0) {\n        const pos = vec2.fromValues(player.pos[0] + dx * distAllowed, player.pos[1] + dy * distAllowed);\n        if (state.gameMap.guards.find((guard) => guard.pos[0] == pos[0] && guard.pos[1] == pos[1]) !== undefined) {\n            distAllowed = 0;\n        }\n    }\n\n    // If the move would end on a torch, shorten it\n\n    if (distAllowed > 0) {\n        const pos = vec2.fromValues(player.pos[0] + dx * distAllowed, player.pos[1] + dy * distAllowed);\n        if (state.gameMap.items.find((item) => item.pos[0] === pos[0] && item.pos[1] === pos[1] &&\n                (item.type === ItemType.TorchUnlit || item.type === ItemType.TorchLit)) !== undefined) {\n            --distAllowed;\n        }\n    }\n\n    return distAllowed;\n}\n\nfunction makeNoise(map: GameMap, player: Player, radius: number /*, popups: &mut Popups, noise: &'static str */) {\n    player.noisy = true;\n    /* TODO\n    popups.noise(player.pos, noise);\n    */\n\n    for (const guard of map.guardsInEarshot(player.pos, radius)) {\n        guard.heardThief = true;\n    }\n}\n\nfunction preTurn(state: State) {\n    /* TODO\n    state.show_msgs = true;\n    state.popups.clear();\n    */\n    state.player.noisy = false;\n    state.player.damagedLastTurn = false;\n}\n\nfunction advanceTime(state: State) {\n    if (state.gameMap.cells.at(state.player.pos[0], state.player.pos[1]).type == TerrainType.GroundWater) {\n        if (state.player.turnsRemainingUnderwater > 0) {\n            --state.player.turnsRemainingUnderwater;\n        }\n    } else {\n        state.player.turnsRemainingUnderwater = 7;\n    }\n\n    guardActAll(/* state.popups, state.lines, */ state.sounds, state.gameMap, state.player);\n\n    state.gameMap.computeLighting();\n    state.gameMap.recomputeVisibility(state.player.pos);\n\n    if (state.gameMap.allSeen() && state.gameMap.allLootCollected()) {\n        state.finishedLevel = true;\n    }\n}\n\nfunction blocked(map: GameMap, posOld: vec2, posNew: vec2): boolean {\n    if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= map.cells.sizeX || posNew[1] >= map.cells.sizeY) {\n        return true;\n    }\n\n    if (posOld[0] == posNew[0] && posOld[1] == posNew[1]) {\n        return false;\n    }\n\n    const cell = map.cells.at(posNew[0], posNew[1]);\n    const tileType = cell.type;\n\n    if (cell.blocksPlayerMove) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowE && posNew[0] <= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowW && posNew[0] >= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowN && posNew[1] <= posOld[1]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowS && posNew[1] >= posOld[1]) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction loadImage(src: string, img: HTMLImageElement): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.src = src;\n    });\n}\n\nconst altTileIndexForTerrainType: Array<[number, number]> = [\n    [1, 4], // TerrainType.GroundNormal,\n    [7, 3], // TerrainType.GroundGrass,\n    [7, 7], // TerrainType.GroundWater,\n    [1, 4], // TerrainType.GroundMarble,\n    [1, 4], // TerrainType.GroundWood,\n    [1, 4], // TerrainType.GroundWoodCreaky,\n    [0, 0], // TerrainType.Wall0000,\n    [3, 2], // TerrainType.Wall0001,\n    [3, 3], // TerrainType.Wall0010,\n    [3, 5], // TerrainType.Wall0011,\n    [3, 1], // TerrainType.Wall0100,\n    [2, 3], // TerrainType.Wall0101,\n    [2, 1], // TerrainType.Wall0110,\n    [2, 5], // TerrainType.Wall0111,\n    [3, 0], // TerrainType.Wall1000,\n    [2, 3], // TerrainType.Wall1001,\n    [2, 2], // TerrainType.Wall1010,\n    [2, 4], // TerrainType.Wall1011,\n    [3, 4], // TerrainType.Wall1100,\n    [2, 7], // TerrainType.Wall1101,\n    [2, 8], // TerrainType.Wall1110,\n    [0, 0], // TerrainType.Wall1111,\n    [0, 4], // TerrainType.OneWayWindowE,\n    [0, 3], // TerrainType.OneWayWindowW,\n    [0, 2], // TerrainType.OneWayWindowN,\n    [1, 2], // TerrainType.OneWayWindowS,\n    [1, 0], // TerrainType.PortcullisNS,\n    [1, 1], // TerrainType.PortcullisEW,\n    [0, 5], // TerrainType.DoorNS,\n    [0, 6], // TerrainType.DoorEW,\n    [0, 5], // TerrainType.GardenDoorNS,\n    [0, 6], // TerrainType.GardenDoorEW,\n];\n\nconst tileIndexForTerrainType: Array<number> = [\n    112, // TerrainType.GroundNormal,\n    116, // TerrainType.GroundGrass,\n    118, // TerrainType.GroundWater,\n    120, // TerrainType.GroundMarble,\n    122, // TerrainType.GroundWood,\n    122, // TerrainType.GroundWoodCreaky,\n    64, // TerrainType.Wall0000,\n    65, // TerrainType.Wall0001,\n    65, // TerrainType.Wall0010,\n    65, // TerrainType.Wall0011,\n    66, // TerrainType.Wall0100,\n    67, // TerrainType.Wall0101,\n    70, // TerrainType.Wall0110,\n    73, // TerrainType.Wall0111,\n    66, // TerrainType.Wall1000,\n    68, // TerrainType.Wall1001,\n    69, // TerrainType.Wall1010,\n    72, // TerrainType.Wall1011,\n    66, // TerrainType.Wall1100,\n    74, // TerrainType.Wall1101,\n    71, // TerrainType.Wall1110,\n    75, // TerrainType.Wall1111,\n    52, // TerrainType.OneWayWindowE,\n    53, // TerrainType.OneWayWindowW,\n    54, // TerrainType.OneWayWindowN,\n    55, // TerrainType.OneWayWindowS,\n    50, // TerrainType.PortcullisNS,\n    50, // TerrainType.PortcullisEW,\n    77, // TerrainType.DoorNS,\n    76, // TerrainType.DoorEW,\n    77, // TerrainType.GardenDoorNS,\n    76, // TerrainType.GardenDoorEW,\n];\n\nconst colorForTerrainType: Array<number> = [\n    colorPreset.lightGray, // TerrainType.GroundNormal,\n    colorPreset.darkGreen, // TerrainType.GroundGrass,\n    colorPreset.lightBlue, // TerrainType.GroundWater,\n    colorPreset.darkCyan, // TerrainType.GroundMarble,\n    colorPreset.darkBrown, // TerrainType.GroundWood,\n    0xff004070, // TerrainType.GroundWoodCreaky,\n    colorPreset.lightGray, // TerrainType.Wall0000,\n    colorPreset.lightGray, // TerrainType.Wall0001,\n    colorPreset.lightGray, // TerrainType.Wall0010,\n    colorPreset.lightGray, // TerrainType.Wall0011,\n    colorPreset.lightGray, // TerrainType.Wall0100,\n    colorPreset.lightGray, // TerrainType.Wall0101,\n    colorPreset.lightGray, // TerrainType.Wall0110,\n    colorPreset.lightGray, // TerrainType.Wall0111,\n    colorPreset.lightGray, // TerrainType.Wall1000,\n    colorPreset.lightGray, // TerrainType.Wall1001,\n    colorPreset.lightGray, // TerrainType.Wall1010,\n    colorPreset.lightGray, // TerrainType.Wall1011,\n    colorPreset.lightGray, // TerrainType.Wall1100,\n    colorPreset.lightGray, // TerrainType.Wall1101,\n    colorPreset.lightGray, // TerrainType.Wall1110,\n    colorPreset.lightGray, // TerrainType.Wall1111,\n    colorPreset.lightGray, // TerrainType.OneWayWindowE,\n    colorPreset.lightGray, // TerrainType.OneWayWindowW,\n    colorPreset.lightGray, // TerrainType.OneWayWindowN,\n    colorPreset.lightGray, // TerrainType.OneWayWindowS,\n    colorPreset.lightGray, // TerrainType.PortcullisNS,\n    colorPreset.lightGray, // TerrainType.PortcullisEW,\n    colorPreset.lightGray, // TerrainType.DoorNS,\n    colorPreset.lightGray, // TerrainType.DoorEW,\n    colorPreset.darkGreen, // TerrainType.GardenDoorNS,\n    colorPreset.darkGreen, // TerrainType.GardenDoorEW,\n];\n\nconst tileIndexForItemType: Array<number> = [\n    100, // ItemType.Chair,\n    98, // ItemType.Table,\n    96, // ItemType.Bush,\n    110, // ItemType.Coin,\n    89, // ItemType.DoorNS,\n    87, // ItemType.DoorEW,\n    50, // ItemType.PortcullisNS,\n    50, // ItemType.PortcullisEW,\n    80, // ItemType.TorchUnlit,\n    80, // ItemType.TorchLit,\n];\n\nconst colorForItemType: Array<number> = [\n    colorPreset.darkBrown, // ItemType.Chair,\n    colorPreset.darkBrown, // ItemType.Table,\n    colorPreset.darkGreen, // ItemType.Bush,\n    colorPreset.lightYellow, // ItemType.Coin,\n    colorPreset.darkBrown, // ItemType.DoorNS,\n    colorPreset.darkBrown, // ItemType.DoorEW,\n    colorPreset.lightGray, // ItemType.PortcullisNS,\n    colorPreset.lightGray, // ItemType.PortcullisEW,\n    colorPreset.darkGray, // ItemType.TorchUnlit,\n    colorPreset.lightYellow, // ItemType.TorchLit,\n]\n\nconst unlitColor: number = colorPreset.lightBlue;\n\nfunction renderWorld(state: State, renderer: Renderer) {\n    const mappedItems:{[id:number]:Array<Item>} = {}; //Sweep over the items and allocate them to a map\n    for(let item of state.gameMap.items) {\n        const ind = state.gameMap.cells.index(...item.pos);\n        if(ind in mappedItems) mappedItems[ind].push(item);\n        else mappedItems[ind] = [item];\n    }\n\n    for (let x = 0; x < state.gameMap.cells.sizeX; ++x) {\n        for (let y = state.gameMap.cells.sizeY-1; y >= 0 ; --y) { //Render top to bottom for overlapped 3/4 view tiles\n            const cell = state.gameMap.cells.at(x, y);\n            if (!cell.seen && !state.seeAll) {\n                continue;\n            }\n            const terrainType = cell.type;\n            const alwaysLit = terrainType >= TerrainType.Wall0000;\n            const lit = alwaysLit || cell.lit;\n            if(terrainType==TerrainType.Wall0000) {\n                for(let adj of [[0,1],[1,0],[0,-1],[-1,0]]) {\n                    const cell = state.gameMap.cells.at(x+adj[0],y+adj[1]);\n                    if(cell.type<TerrainType.Wall0000) {\n                        renderer.addGlyph(x, y, x+1, y+1, renderer.tileSet.terrainTiles[cell.type], cell.lit);\n                        break;\n                    }\n                }\n            }\n            renderer.addGlyph(x, y, x+1, y+1, renderer.tileSet.terrainTiles[terrainType], lit);\n\n            const ind = state.gameMap.cells.index(x, y);\n            if(!(ind in mappedItems)) continue;\n            for(let item of mappedItems[ind]) {\n                const alwaysLit = item.type >= ItemType.DoorNS && item.type <= ItemType.PortcullisEW;\n                const lit = alwaysLit || cell.lit;\n                renderer.addGlyph(item.pos[0], item.pos[1], item.pos[0] + 1, item.pos[1] + 1, renderer.tileSet.itemTiles[item.type], lit);    \n            }\n        }\n    }        \n}\nfunction renderPlayer(state: State, renderer: Renderer) {\n    const player = state.player;\n    const x = player.pos[0];\n    const y = player.pos[1];\n    const lit = state.gameMap.cells.at(x, y).lit;\n    const hidden = player.hidden(state.gameMap);\n    // const color =\n    //     player.damagedLastTurn ? 0xff0000ff :\n    //     player.noisy ? colorPreset.lightCyan :\n    //     hidden ? 0xd0101010 :\n    //     !lit ? colorPreset.lightBlue :\n    //     colorPreset.lightGray;\n\n    const p = renderer.tileSet.playerTiles;\n\n    let tileInfo:TileInfo = renderer.tileSet.unlitTile;\n    tileInfo =\n        player.damagedLastTurn ? p[1] :\n        player.noisy ? p[3] :\n        hidden ? p[2] :\n        !lit ? p[4] :\n        p[0];\n\n    renderer.addGlyph(x, y, x+1, y+1, tileInfo);\n}\n\nfunction renderGuards(state: State, renderer: Renderer) {\n    for (const guard of state.gameMap.guards) {\n        let tileIndex = 0 + tileIndexOffsetForDir(guard.dir);\n\n        const cell = state.gameMap.cells.at(guard.pos[0], guard.pos[1]);\n        const visible = state.seeAll || cell.seen || guard.speaking;\n        if (!visible && vec2.squaredDistance(state.player.pos, guard.pos) > 36) {\n            continue;\n        }\n\n        let lit = true;\n        if(!visible) tileIndex+=4;\n        else if(guard.mode == GuardMode.Patrol && !guard.speaking && !cell.lit) lit=false;\n        else tileIndex+=8;\n        const tileInfo = renderer.tileSet.npcTiles[tileIndex];\n        // if(guard.hasTorch) {\n        //     const g0 = guard.pos[0]+guard.dir[0]*0.25+guard.dir[1]*0.25;\n        //     const g1 = guard.pos[1];\n        //     if(guard.dir[1]>0) {\n        //         renderer.addGlyph(g0, g1, g0 + 1, g1 + 1, renderer.tileSet.itemTiles[ItemType.TorchCarry], true);\n        //         renderer.addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, tileInfo, true);\n        //     } else {\n        //         renderer.addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, tileInfo, true);    \n        //         renderer.addGlyph(g0, g1, g0 + 1, g1 + 1, renderer.tileSet.itemTiles[ItemType.TorchCarry], true);\n        //     }\n        // }\n        // else renderer.addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, tileInfo, true);\n        renderer.addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, tileInfo, lit);\n}\n\n\n}\n\nfunction renderGuardOverheadIcons(state: State, renderer: Renderer) {\n    for (const guard of state.gameMap.guards) {\n        const cell = state.gameMap.cells.at(guard.pos[0], guard.pos[1]);\n        const visible = state.seeAll || cell.seen || guard.speaking;\n        if (!visible && vec2.squaredDistance(state.player.pos, guard.pos) > 36) {\n            continue;\n        }\n\n        const guardState = guard.overheadIcon();\n        if (guardState === GuardStates.Relaxed) {\n            continue;\n        }\n\n        const x = guard.pos[0];\n        const y = guard.pos[1] + 0.625;\n\n        renderer.addGlyph(x, y, x+1, y+1, renderer.tileSet.guardStateTiles[guardState], true);\n    }\n}\n\nfunction renderGuardSight(state: State, renderer: Renderer) {\n    if (!state.seeGuardSight) {\n        return;\n    }\n\n    const mapSizeX = state.gameMap.cells.sizeX;\n    const mapSizeY = state.gameMap.cells.sizeY;\n\n    const seenByGuard = new BooleanGrid(mapSizeX, mapSizeY, false);\n\n    const pos = vec2.create();\n    const dpos = vec2.create();\n\n    for (const guard of state.gameMap.guards) {\n        const maxSightCutoff = 3;\n        const xMin = Math.max(0, Math.floor(guard.pos[0] - maxSightCutoff));\n        const xMax = Math.min(mapSizeX, Math.floor(guard.pos[0] + maxSightCutoff) + 1);\n        const yMin = Math.max(0, Math.floor(guard.pos[1] - maxSightCutoff));\n        const yMax = Math.min(mapSizeY, Math.floor(guard.pos[1] + maxSightCutoff) + 1);\n        for (let y = yMin; y < yMax; ++y) {\n            for (let x = xMin; x < xMax; ++x) {\n                vec2.set(pos, x, y);\n                vec2.subtract(dpos, pos, guard.pos);\n                const cell = state.gameMap.cells.at(x, y);\n\n                if (seenByGuard.get(x, y)) {\n                    continue;\n                }\n                if (cell.blocksPlayerMove) {\n                    continue;\n                }\n                if (!state.seeAll && !cell.seen) {\n                    continue;\n                }\n                if (vec2.dot(guard.dir, dpos) < 0) {\n                    continue;\n                }\n                if (vec2.squaredLength(dpos) >= guard.sightCutoff(cell.lit)) {\n                    continue;\n                }\n                if (!lineOfSight(state.gameMap, guard.pos, pos)) {\n                    continue;\n                }\n        \n                seenByGuard.set(x, y, true);\n            }\n        }\n    }\n\n    for (let y = 0; y < state.gameMap.cells.sizeY; ++y) {\n        for (let x = 0; x < state.gameMap.cells.sizeX; ++x) {\n            if (seenByGuard.get(x, y)) {\n                renderer.addGlyph(x, y, x+1, y+1, {textureIndex:15, color:0xa0004080}, true);\n            }\n        }\n    }\n}\n\nfunction renderGuardPatrolPaths(state: State, renderer: Renderer) {\n    if (!state.seeGuardPatrols) {\n        return;\n    }\n\n    for (const guard of state.gameMap.guards) {\n        for (const pos of guard.patrolPath) {\n            renderer.addGlyph(pos[0], pos[1], pos[0]+1, pos[1]+1, {textureIndex:249, color:0x80ffffff}, true);\n        }\n    }\n}\n\nfunction tileIndexOffsetForDir(dir: vec2): number {\n    if (dir[1] > 0) {\n        return 1;\n    } else if (dir[1] < 0) {\n        return 3;\n    } else if (dir[0] > 0) {\n        return 0;\n    } else if (dir[0] < 0) {\n        return 2;\n    } else {\n        return 3;\n    }\n}\n\nfunction createCamera(posPlayer: vec2): Camera {\n    const camera = {\n        position: vec2.create(),\n        velocity: vec2.create(),\n        snapped: false,\n    };\n\n    vec2.copy(camera.position, posPlayer);\n    vec2.zero(camera.velocity);\n\n    return camera;\n}\n\nfunction initState(sounds:Howls): State {\n    const initialLevel = 0;\n    const gameMap = createGameMap(initialLevel);\n\n    return {\n        tLast: undefined,\n        shiftModifierActive: false,\n        shiftUpLastTimeStamp: -Infinity,\n        player: new Player(gameMap.playerStartPos),\n        finishedLevel: false,\n        seeAll: false,\n        seeGuardSight: false,\n        seeGuardPatrols: false,\n        camera: createCamera(gameMap.playerStartPos),\n        level: initialLevel,\n        gameMap: gameMap,\n        sounds: sounds,\n    };\n}\n\nfunction resetState(state: State) {\n    const gameMap = createGameMap(state.level);\n\n    state.finishedLevel = false;\n    state.player = new Player(gameMap.playerStartPos);\n    state.camera = createCamera(gameMap.playerStartPos);\n    state.gameMap = gameMap;\n}\n\nfunction updateAndRender(now: number, renderer: Renderer, state: State) {\n    const t = now / 1000;\n    const dt = (state.tLast === undefined) ? 0 : Math.min(1/30, t - state.tLast);\n    state.tLast = t;\n\n    const screenSize = vec2.create();\n    renderer.getScreenSize(screenSize);\n\n    if (!state.camera.snapped) {\n        state.camera.snapped = true;\n        snapCamera(state, screenSize);\n    }\n\n    if (dt > 0) {\n        updateState(state, screenSize, dt);\n    }\n\n    renderScene(renderer, screenSize, state);\n\n    requestAnimationFrame(now => updateAndRender(now, renderer, state));\n}\n\nfunction updateState(state: State, screenSize: vec2, dt: number) {\n    updateCamera(state, screenSize, dt);\n}\n\nfunction renderScene(renderer: Renderer, screenSize: vec2, state: State) {\n    renderer.beginFrame(screenSize);\n\n    const matScreenFromWorld = mat4.create();\n    setupViewMatrix(state, screenSize, matScreenFromWorld);\n\n    renderer.start(matScreenFromWorld, 1);\n    renderWorld(state, renderer);\n    renderPlayer(state, renderer);\n    renderGuards(state, renderer);\n    renderGuardOverheadIcons(state, renderer);\n    renderGuardSight(state, renderer);\n    renderGuardPatrolPaths(state, renderer);\n    renderer.flush();\n\n    renderBottomStatusBar(renderer, screenSize, state);\n}\n\nfunction updateCamera(state: State, screenSize: vec2, dt: number) {\n\n    // Figure out where the camera should be pointed\n\n    const posCameraTarget = vec2.create();\n    cameraTargetCenterPosition(\n        posCameraTarget,\n        vec2.fromValues(state.gameMap.cells.sizeX, state.gameMap.cells.sizeY),\n        screenSize,\n        state.player.pos\n    );\n\n    // Update player follow\n\n    const posError = vec2.create();\n    vec2.subtract(posError, posCameraTarget, state.camera.position);\n\n    const velError = vec2.create();\n    vec2.negate(velError, state.camera.velocity);\n\n    const kSpring = 8; // spring constant, radians/sec\n\n    const acc = vec2.create();\n    vec2.scale(acc, posError, kSpring**2);\n    vec2.scaleAndAdd(acc, acc, velError, 2*kSpring);\n\n    const velNew = vec2.create();\n    vec2.scaleAndAdd(velNew, state.camera.velocity, acc, dt);\n\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, state.camera.velocity, 0.5 * dt);\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, velNew, 0.5 * dt);\n    vec2.copy(state.camera.velocity, velNew);\n}\n\nfunction snapCamera(state: State, screenSize: vec2) {\n    cameraTargetCenterPosition(\n        state.camera.position,\n        vec2.fromValues(state.gameMap.cells.sizeX, state.gameMap.cells.sizeY),\n        screenSize,\n        state.player.pos\n    );\n    vec2.zero(state.camera.velocity);\n}\n\nfunction cameraTargetCenterPosition(posCameraCenter: vec2, worldSize: vec2, screenSize: vec2, posPlayer: vec2) {\n    const posCenterMin = vec2.create();\n    const posCenterMax = vec2.create();\n    cameraCenterPositionLegalRange(worldSize, screenSize, posCenterMin, posCenterMax);\n\n    posCameraCenter[0] = Math.max(posCenterMin[0], Math.min(posCenterMax[0], posPlayer[0] + 0.5));\n    posCameraCenter[1] = Math.max(posCenterMin[1], Math.min(posCenterMax[1], posPlayer[1] + 0.5));\n}\n\nfunction cameraCenterPositionLegalRange(worldSize: vec2, screenSize: vec2, posLegalMin: vec2, posLegalMax: vec2) {\n    const statusBarPixelSizeY = statusBarCharPixelSizeY * statusBarZoom(screenSize[0]);\n    const viewportPixelSize = vec2.fromValues(screenSize[0], screenSize[1] - statusBarPixelSizeY);\n    const [viewWorldSizeX, viewWorldSizeY] = viewWorldSize(viewportPixelSize);\n\n    let viewCenterMinX = viewWorldSizeX / 2;\n    let viewCenterMaxX = worldSize[0] - viewWorldSizeX / 2;\n\n    if (viewCenterMinX > viewCenterMaxX) {\n        viewCenterMinX = viewCenterMaxX = worldSize[0] / 2;\n    }\n\n    let viewCenterMinY = viewWorldSizeY / 2;\n    let viewCenterMaxY = worldSize[1] - viewWorldSizeY / 2;\n\n    if (viewCenterMinY > viewCenterMaxY) {\n        viewCenterMinY = viewCenterMaxY = worldSize[1] / 2;\n    }\n\n    posLegalMin[0] = viewCenterMinX;\n    posLegalMin[1] = viewCenterMinY;\n\n    posLegalMax[0] = viewCenterMaxX;\n    posLegalMax[1] = viewCenterMaxY;\n}\n\nfunction setupViewMatrix(state: State, screenSize: vec2, matScreenFromWorld: mat4) {\n    const statusBarPixelSizeY = statusBarCharPixelSizeY * statusBarZoom(screenSize[0]);\n    const viewportPixelSize = vec2.fromValues(screenSize[0], screenSize[1] - statusBarPixelSizeY);\n    const [viewWorldSizeX, viewWorldSizeY] = viewWorldSize(viewportPixelSize);\n\n    const viewWorldCenterX = state.camera.position[0];\n    const viewWorldCenterY = state.camera.position[1];\n\n    const tileZoom = worldTileZoom(viewportPixelSize);\n    const statusBarWorldSizeY = statusBarPixelSizeY / (pixelsPerTileY * tileZoom);\n\n    const viewWorldMinX = Math.floor(pixelsPerTileX * (viewWorldCenterX - viewWorldSizeX / 2)) / pixelsPerTileX;\n    const viewWorldMinY = Math.floor(pixelsPerTileY * (viewWorldCenterY - viewWorldSizeY / 2)) / pixelsPerTileY;\n\n    mat4.ortho(\n        matScreenFromWorld,\n        viewWorldMinX,\n        viewWorldMinX + viewWorldSizeX,\n        viewWorldMinY - statusBarWorldSizeY,\n        viewWorldMinY + viewWorldSizeY,\n        1,\n        -1\n    );\n}\n\nfunction viewWorldSize(viewportPixelSize: vec2): [number, number] {\n    const tileZoom = worldTileZoom(viewportPixelSize);\n\n    const zoomedPixelsPerTileX = pixelsPerTileX * tileZoom;\n    const zoomedPixelsPerTileY = pixelsPerTileY * tileZoom;\n\n    const viewWorldSizeX = viewportPixelSize[0] / zoomedPixelsPerTileX;\n    const viewWorldSizeY = viewportPixelSize[1] / zoomedPixelsPerTileY;\n\n    return [viewWorldSizeX, viewWorldSizeY];\n}\n\nfunction worldTileZoom(viewportPixelSize: vec2): number {\n    const viewPixelSizeDesiredX = viewTileSizeDesiredX * pixelsPerTileX;\n    const viewPixelSizeDesiredY = viewTileSizeDesiredY * pixelsPerTileY;\n\n    let tileZoom;\n    if (viewportPixelSize[0] * viewPixelSizeDesiredY < viewportPixelSize[1] * viewPixelSizeDesiredX) {\n        tileZoom = Math.max(1, Math.floor(viewportPixelSize[0] / viewPixelSizeDesiredX + 0.5));\n    } else {\n        tileZoom = Math.max(1, Math.floor(viewportPixelSize[1] / viewPixelSizeDesiredY + 0.5));\n    }\n\n    return tileZoom;\n}\n\nfunction statusBarZoom(screenSizeX: number): number {\n    return Math.min(2, Math.max(1, Math.floor(screenSizeX / (targetStatusBarWidthInChars * statusBarCharPixelSizeX))));\n}\n\nfunction renderBottomStatusBar(renderer: Renderer, screenSize: vec2, state: State) {\n    const tileZoom = statusBarZoom(screenSize[0]);\n\n    const screenSizeInTilesX = screenSize[0] / (tileZoom * statusBarCharPixelSizeX);\n    const screenSizeInTilesY = screenSize[1] / (tileZoom * statusBarCharPixelSizeY);\n\n    const matScreenFromWorld = mat4.create();\n\n    mat4.ortho(\n        matScreenFromWorld,\n        0, screenSizeInTilesX,\n        0, screenSizeInTilesY,\n        1, -1\n    );\n\n    renderer.start(matScreenFromWorld, 0);\n\n    const statusBarTileSizeX = Math.ceil(screenSizeInTilesX);\n    const barBackgroundColor = 0xff101010;\n    renderer.addGlyph(0, 0, statusBarTileSizeX, 1, {textureIndex:219, color:barBackgroundColor});\n\n    function putString(x: number, s: string, color: number) {\n        for (let i = 0; i < s.length; ++i) {\n            const glyphIndex = s.charCodeAt(i);\n            renderer.addGlyph(x + i, 0, x + i + 1, 1, {textureIndex:glyphIndex, color:color});\n        }\n    }\n\n    const healthX = 1;\n\n    putString(healthX, \"Health\", colorPreset.darkRed);\n\n    for (let i = 0; i < maxPlayerHealth; ++i) {\n        const color = (i < state.player.health) ? colorPreset.darkRed : colorPreset.black;\n        const glyphHeart = 3;\n        renderer.addGlyph(i + healthX + 7, 0, i + healthX + 8, 1, {textureIndex:glyphHeart, color:color});\n    }\n\n    // Underwater indicator\n\n    const playerUnderwater = state.gameMap.cells.at(state.player.pos[0], state.player.pos[1]).type == TerrainType.GroundWater && state.player.turnsRemainingUnderwater > 0;\n    if (playerUnderwater) {\n        const breathX = healthX + maxPlayerHealth + 88;\n\n        putString(breathX, \"Air\", colorPreset.lightCyan);\n\n        for (let i = 0; i < state.player.turnsRemainingUnderwater; ++i) {\n            const glyphBubble = 9;\n            renderer.addGlyph(breathX + 4 + i, 0, breathX + 5 + i, 1, {textureIndex:glyphBubble, color:colorPreset.lightCyan});\n        }\n    }\n\n    // Draw the tallies of what's been seen and collected.\n\n    const percentSeen = state.gameMap.percentSeen();\n\n    const seenMsg = 'Level ' + (state.level + 1) + ': ' + percentSeen + '% Seen';\n\n    const seenX = Math.floor((statusBarTileSizeX - seenMsg.length) / 2 + 0.5);\n    putString(seenX, seenMsg, colorPreset.lightGray);\n\n    let lootMsg = 'Loot ' + state.player.gold + '/';\n    if (percentSeen < 100) {\n        lootMsg += '?';\n    } else {\n        lootMsg += state.gameMap.totalLoot;\n    }\n\n    const lootX = statusBarTileSizeX - (lootMsg.length + 1);\n    putString(lootX, lootMsg, colorPreset.lightYellow);\n\n    renderer.flush();\n}\n\nfunction renderTextLines(renderer: Renderer, screenSize: vec2, lines: Array<string>) {\n    let maxLineLength = 0;\n    for (const line of lines) {\n        maxLineLength = Math.max(maxLineLength, line.length);\n    }\n\n    const minCharsX = 40;\n    const minCharsY = 22;\n    const scaleLargestX = Math.max(1, Math.floor(screenSize[0] / (8 * minCharsX)));\n    const scaleLargestY = Math.max(1, Math.floor(screenSize[1] / (16 * minCharsY)));\n    const scaleFactor = Math.min(scaleLargestX, scaleLargestY);\n    const pixelsPerCharX = 8 * scaleFactor;\n    const pixelsPerCharY = 16 * scaleFactor;\n    const linesPixelSizeX = maxLineLength * pixelsPerCharX;\n    const numCharsX = screenSize[0] / pixelsPerCharX;\n    const numCharsY = screenSize[1] / pixelsPerCharY;\n    const offsetX = Math.floor((screenSize[0] - linesPixelSizeX) / -2) / pixelsPerCharX;\n    const offsetY = (lines.length + 2) - numCharsY;\n\n    const matScreenFromTextArea = mat4.create();\n    mat4.ortho(\n        matScreenFromTextArea,\n        offsetX,\n        offsetX + numCharsX,\n        offsetY,\n        offsetY + numCharsY,\n        1,\n        -1);\n    renderer.start(matScreenFromTextArea, 0);\n\n    const colorText = 0xffeeeeee;\n    const colorBackground = 0xe0555555;\n\n    // Draw a stretched box to make a darkened background for the text.\n    renderer.addGlyph(\n        -1, -1, maxLineLength + 1, lines.length + 1,\n        {textureIndex:219, color:colorBackground}\n    );\n\n    for (let i = 0; i < lines.length; ++i) {\n        const row = lines.length - (1 + i);\n        for (let j = 0; j < lines[i].length; ++j) {\n            const col = j;\n            const ch = lines[i];\n            if (ch === ' ') {\n                continue;\n            }\n            const glyphIndex = lines[i].charCodeAt(j);\n            renderer.addGlyph(\n                col, row, col + 1, row + 1,\n                {textureIndex:glyphIndex, color:colorText}\n            );\n        }\n    }\n\n    renderer.flush();\n}\n"],"names":["$962dfe94de155236$export$e9830bc863290a54","$962dfe94de155236$export$d2b4acf069bf09f5","$69e3cfcc1b264755$export$8b958c8ecd94a804","n","Math","floor","random","$69e3cfcc1b264755$export$7ac3a88d34a76e7","array","i","length","j","temp","$9b54a0058cb4baa9$var$MoveResult","MoveResult","$9b54a0058cb4baa9$export$4d0734ad15726738","GuardMode","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","id","resolved","Error","parcelRequire","register","JSON","parse","create","clone","v","fromValues","x0","x1","copy","result","set","add","a","b","subtract","multiply","scale","scaleAndAdd","distance","x","y","hypot","squaredDistance","squaredLength","negate","dot","lerp","t","zero","ortho","left","right","bottom","top","near","far","lr","bt","nf","$9b54a0058cb4baa9$export$aaedb44a0fd0f42b","constructor","patrolPath","map","pathIndexStart","posStart","this","pos","dir","mode","Patrol","hasTorch","speaking","hasMoved","heardThief","hearingGuard","heardGuard","heardGuardPos","goal","modeTimeout","patrolPathIndex","patrolReverse","patrolLoops","dx","dy","abs","$9b54a0058cb4baa9$var$patrolPathLoops","updateDirInitial","overheadIcon","$9b54a0058cb4baa9$var$isRelaxedGuardMode","$10c35e7c2a1f8a6c$export$1a1858d455172d76","Relaxed","ChaseVisibleTarget","Chasing","Alerted","act","sounds","player","shouts","modePrev","posPrev","seesThief","MoveToLastSighting","MoveToGuardShout","adjacentTo","play","Listen","$9b54a0058cb4baa9$var$updateDir","MoveToLastSound","patrolStep","Look","damagedLastTurn","applyDamage","moveTowardPosition","Moved","RelightTorch","posTorch","item","items","type","$10c35e7c2a1f8a6c$export$1fc8f52ad1810e52","TorchUnlit","TorchLit","computeLighting","$9b54a0058cb4baa9$var$relightTorchAt","PostRelightTorch","torch","posViewer","bestItem","bestDistSquared","Infinity","distSquared","$9b54a0058cb4baa9$export$7249888949ac2c65","$9b54a0058cb4baa9$var$torchNeedingRelighting","undefined","posLookAt","tryGetPosLookAt","push","pos_shouter","pos_target","d","playerIsLit","cells","at","lit","sightCutoff","hidden","cutoffLit","cutoffUnlit","litTarget","moveResult","moveTowardPatrolPath","findPatrolPathIndex","BumpedPlayer","patrolPathIndexNext","posGoal","distanceField","computeDistancesToPosition","posNext","$9b54a0058cb4baa9$var$posNextBest","StoodStill","computeDistancesToPatrolPath","iPatrolPos","posPath","$10c35e7c2a1f8a6c$export$1bd3aab7cfc60670","OneWayWindowW","sizeX","OneWayWindowE","OneWayWindowS","sizeY","OneWayWindowN","guardMode","$9b54a0058cb4baa9$export$5f882605b1dc2846","guard","guards","shout","$9b54a0058cb4baa9$var$alertNearbyGuards","guardsInEarshot","posFrom","costBest","posBest","posMin","max","posMax","min","cost","get","guardMoveCost","GroundWater","isGuardAt","posTarget","dirTarget","dirLeft","dotForward","dotLeft","from","to","ax","ay","x_inc","y_inc","error","blocksSight","$10c35e7c2a1f8a6c$var$cardinalDirections","$10c35e7c2a1f8a6c$export$47dc3946656b4c14","initialValue","values","Uint8Array","fill","value","$10c35e7c2a1f8a6c$export$1baa12a9812549c7","Int32Array","$10c35e7c2a1f8a6c$export$304240f91b7efc5a","Float64Array","TerrainType","$10c35e7c2a1f8a6c$export$6b828f5d89445818","size","Array","GroundNormal","moveCost","blocksPlayerMove","blocksPlayerSight","blocksSound","hidesPlayer","seen","console","assert","index","GuardStates","ItemType","$10c35e7c2a1f8a6c$export$af86814533211557","itemType","Chair","Table","Bush","Coin","DoorNS","DoorEW","PortcullisNS","PortcullisEW","$10c35e7c2a1f8a6c$export$258eb89fd6a7b95e","$10c35e7c2a1f8a6c$export$2616165974278734","health","gold","noisy","turnsRemainingUnderwater","find","$10c35e7c2a1f8a6c$var$portals","lx","ly","rx","ry","nx","ny","$10c35e7c2a1f8a6c$var$aRightOfB","bx","by","$10c35e7c2a1f8a6c$var$allowedDirection","terrainType","$10c35e7c2a1f8a6c$var$adjacentMoves","$10c35e7c2a1f8a6c$export$5f2c7e9a2f29f58a","patrolRegions","patrolRoutes","playerStartPos","totalLoot","collectLootAt","filter","collectAllLoot","allSeen","cell","percentSeen","numSeen","markAllSeen","markAllUnseen","recomputeVisibility","recomputeVisibilityFromPos","playerCanSeeInDirection","portal","computeVisibility","viewerX","viewerY","targetX","targetY","ldx","ldy","rdx","rdy","cdx","cdy","pldx","pldy","prdx","prdy","cldx","cldy","crdx","crdy","castLight","posLight","radiusSquared","castLightRecursive","lightX","lightY","allLootCollected","posOld","posNew","patrolPositions","priority","computeDistanceField","pos_goal","initialDistances","toVisit","distField","distPos","$10c35e7c2a1f8a6c$var$priorityQueuePush","$10c35e7c2a1f8a6c$var$priorityQueuePop","adjacentMove","distNew","soundPos","radius","coords","coordsInEarshot","has","costCutoff","coordsVisited","Set","costNew","q","pop","c","iChild","iChild0","iChild1","iParent","$7defb8b0b8d2cc00$var$roomSizeX","$7defb8b0b8d2cc00$var$roomSizeY","$7defb8b0b8d2cc00$var$outerBorder","$7defb8b0b8d2cc00$var$RoomType","RoomType","$7defb8b0b8d2cc00$export$c6e04b122d41de8c","level","$7defb8b0b8d2cc00$var$randomHouseWidth","$7defb8b0b8d2cc00$var$randomHouseDepth","inside","halfX","$7defb8b0b8d2cc00$var$makeSiheyuanRoomGrid","mirrorX","mirrorY","offsetX","offsetY","roomsX","roomsY","xMid","yMid","roomOffsetX","Number","MIN_SAFE_INTEGER","roomOffsetY","z","$7defb8b0b8d2cc00$var$offsetWalls","cx","cy","mapSizeX","mapSizeY","y0","y1","GroundGrass","isInside","$7defb8b0b8d2cc00$var$plotNSWall","$7defb8b0b8d2cc00$var$plotEWWall","$7defb8b0b8d2cc00$var$plotWalls","rooms","adjacencies","roomIndex","roomType","Exterior","group","depth","edges","group_index","PublicRoom","PublicCourtyard","adjacencyRows","adjacencyRow","origin","room_left","room_right","next_matching","door","doorOffset","x0_upper","x0_lower","x1_upper","x1_lower","row","adj0","adj1","a1","ry0","ry1","row0","row1","y0_left","y0_right","y1_left","y1_right","$7defb8b0b8d2cc00$var$computeAdjacencies","adj","i0","i1","$7defb8b0b8d2cc00$var$storeAdjacenciesInRooms","edgeSets","$7defb8b0b8d2cc00$var$getEdgeSets","$7defb8b0b8d2cc00$var$joinGroups","edgeSet","addedDoor","group0","group1","room_type0","room_type1","$7defb8b0b8d2cc00$var$frontDoorAdjacencyIndex","$7defb8b0b8d2cc00$var$connectRooms","unvisited","roomsToVisit","iRoom","iiRoom","iAdj","iRoomNeighbor","maxDepth","room","targetNumMasterRooms","numMasterRooms","PrivateRoom","PrivateCourtyard","changed","$7defb8b0b8d2cc00$var$assignRoomTypes","type0","type1","$7defb8b0b8d2cc00$var$isCourtyardRoomType","p","offset","walls","k","$7defb8b0b8d2cc00$var$oneWayWindowTerrainTypeFromDir","k_end","windowType","installMasterSuiteDoor","orientNS","roomTypeLeft","roomTypeRight","$7defb8b0b8d2cc00$var$placeItem","GardenDoorNS","GardenDoorEW","$7defb8b0b8d2cc00$var$renderWalls","cellType","GroundWood","GroundMarble","GroundWoodCreaky","itemTypes","$7defb8b0b8d2cc00$var$randomlyLitTorch","itemPositions","$7defb8b0b8d2cc00$var$tryPlaceItem","Wall0000","furnitureType","$7defb8b0b8d2cc00$var$renderRooms","$7defb8b0b8d2cc00$var$createExits","sx","sy","$7defb8b0b8d2cc00$var$placeExteriorBushes","$7defb8b0b8d2cc00$var$placeFrontPillars","numRooms","$7defb8b0b8d2cc00$var$tryPlaceLoot","numExits","$7defb8b0b8d2cc00$var$placeLoot","$7defb8b0b8d2cc00$var$wallTypeFromNeighbors","$7defb8b0b8d2cc00$var$neighboringWalls","$7defb8b0b8d2cc00$var$fixupWalls","isWall","Wall1111","isWindow","$7defb8b0b8d2cc00$var$isWindowTerrainType","isWater","$7defb8b0b8d2cc00$var$cacheCellInfo","gameMap","roomIncluded","iRoomNext","iRoomPrev","adjacenciesShuffled","iRoom0","iRoom1","$7defb8b0b8d2cc00$var$flipReverse","$7defb8b0b8d2cc00$var$flipForward","posInRoom","$7defb8b0b8d2cc00$var$posVacantInRoom","roomHandled","iRoomIter","$7defb8b0b8d2cc00$var$startingRoomIndex","iNext","iPrev","posEnd","positions","$7defb8b0b8d2cc00$var$activityStationPositions","$7defb8b0b8d2cc00$var$posBesideDoor","$7defb8b0b8d2cc00$var$posInDoor","path","$7defb8b0b8d2cc00$var$pathBetweenPoints","$7defb8b0b8d2cc00$var$placePatrolRoutes","$7defb8b0b8d2cc00$var$placeGuards","$7defb8b0b8d2cc00$var$markExteriorAsSeen","reduce","$7defb8b0b8d2cc00$var$createGameMapInternal","groupFrom","groupTo","iRoomStart","iRoomVisited","iRoomToVisit","dirCross","centerX","centerY","sort","pos0","pos1","$7defb8b0b8d2cc00$var$posNextBest","log","$7defb8b0b8d2cc00$var$oneWayWindowTerrainType","$7defb8b0b8d2cc00$var$doorAdjacent","$7defb8b0b8d2cc00$var$isItemAtPos","neighbors","$7defb8b0b8d2cc00$var$isWall","wallBits","$e3d6ee63ed1479b9$export$88530751e3977073","getScreenSize","screenSize","beginFrame","start","matScreenFromWorld","textureIndex","addGlyph","tileInfo","flush","canvas","tileSet","fontTileSet","gl","getContext","alpha","textures","image","numGlyphsX","numGlyphsY","numGlyphs","srcGlyphSizeX","naturalWidth","srcGlyphSizeY","naturalHeight","scaleFactor","dstGlyphSizeX","dstGlyphSizeY","document","createElement","width","height","ctx","imageSmoothingEnabled","drawImage","imageData","getImageData","pixels","data","buffer","texture","createTexture","bindTexture","TEXTURE_2D_ARRAY","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage3D","RGBA","UNSIGNED_BYTE","$e3d6ee63ed1479b9$var$createTextureFromImage","attribs","vPosition","vTexcoord","vColor","tileRatios","tileSize","cellSize","program","vsSource","fsSource","vertexShader","$e3d6ee63ed1479b9$var$loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","attrib","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","$e3d6ee63ed1479b9$var$initShaderProgram","uProjectionMatrixLoc","getUniformLocation","uOpacityLoc","bytesPerVertex","Float32Array","BYTES_PER_ELEMENT","Uint32Array","wordsPerQuad","vertexData","ArrayBuffer","vertexDataAsFloat32","vertexDataAsUint32","vertexBuffer","createBuffer","numQuads","matScreenFromWorldCached","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","bufferData","DYNAMIC_DRAW","maxQuads","indices","Uint16Array","indexBuffer","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","$e3d6ee63ed1479b9$var$createGlyphIndexBuffer","$e3d6ee63ed1479b9$var$resizeCanvasToDisplaySize","screenX","clientWidth","screenY","clientHeight","activeTexture","TEXTURE0","color","unlitColor","srcBase","useProgram","uniform1i","uniformMatrix4fv","bufferSubData","drawElements","TRIANGLES","UNSIGNED_SHORT","viewport","clear","COLOR_BUFFER_BIT","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","clearColor","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","rect","parentNode","getBoundingClientRect","$42c3db1e5be65f46$export$c073df10e766abfa","$42c3db1e5be65f46$export$4b45ecf3922b2c9e","$42c3db1e5be65f46$export$430774e3f59aae50","$42c3db1e5be65f46$export$a0913739880c9ce3","$42c3db1e5be65f46$export$76a6bc0ea014735a","$42c3db1e5be65f46$export$7faf1229eaed2d5a","$42c3db1e5be65f46$export$45287c80362236a","$42c3db1e5be65f46$export$8e7e4e76fd842548","$42c3db1e5be65f46$export$7b0d29b70b435c21","$42c3db1e5be65f46$export$f7bd452d85438018","$42c3db1e5be65f46$export$2f95049e6b041020","$42c3db1e5be65f46$export$ce3d146c023b50e3","$42c3db1e5be65f46$export$2f350c514d155d6c","$42c3db1e5be65f46$export$8fa4e5556fd77a60","$e9975b9a1ae00fb2$exports","URL","resolve","import","meta","url","toString","$70f7416191962085$exports","$704660c31d368774$exports","$b1b8f74fd13e966a$exports","$1881ad3adcd52414$var$r","$1881ad3adcd52414$var$basicFontTileset","name","imageSrc","Image","letterMap","$1881ad3adcd52414$var$sinCityTileSet","flattenTexture","unlitTile","terrainTiles","itemTiles","npcTiles","playerTiles","guardStateTiles","$1881ad3adcd52414$var$tileSet31Color","$1881ad3adcd52414$var$canvasTilesetThreeQuarter","$f89d8ffbdc18f2ab$export$b791fe48eec8032a","$1881ad3adcd52414$var$BasicTileset","HowlerGlobal1","init","prototype","self","Howler1","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","createBufferSource","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","testPlay","Promise","then","catch","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl1","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","str","exec","toLowerCase","location","protocol","slice","Sound1","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","timeout","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","Howler","Howl","$parcel$global","HowlerGlobal","Sound","_super","_pos","_orientation","stereo","pan","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","$73750473b324b16a$exports","$219c38ca52ceb8b4$exports","$4a7c5de659c1c0fb$exports","$b607c93da0ff4e8d$exports","$2fb9ea3cd393b756$exports","$523e85573fbedc7e$var$footstepCreakSet","$523e85573fbedc7e$var$guardRelaxedSet","$8a66666f1e5bb959$exports","$523e85573fbedc7e$var$guardAlertSet","$523e85573fbedc7e$var$guardStopAlertSet","$aa5a719a74b4ce2d$exports","$523e85573fbedc7e$var$guardChasingSet","$523e85573fbedc7e$var$guardStopChasingSet","$523e85573fbedc7e$export$1c692ad1c05045c7","files","howls","file","howlNum","nextHowl","$523e85573fbedc7e$export$e501447ddb8932e4","footstepWood","footstepTile","footstepWater","footstepGravel","footstepGrass","footstepCreaky","guardRelaxed","guardAlert","guardStopAlert","guardChasing","guardStopChasing","$e46db5192eb49d53$var$tileSet","$e46db5192eb49d53$var$fontTileSet","all","$e46db5192eb49d53$var$loadImage","$e46db5192eb49d53$var$main","$e46db5192eb49d53$var$targetStatusBarWidthInChars","$e46db5192eb49d53$var$statusBarCharPixelSizeX","$e46db5192eb49d53$var$statusBarCharPixelSizeY","$e46db5192eb49d53$var$pixelsPerTileX","$e46db5192eb49d53$var$pixelsPerTileY","$e46db5192eb49d53$var$viewTileSizeDesiredX","$e46db5192eb49d53$var$viewTileSizeDesiredY","images","querySelector","renderer","initialLevel","tLast","shiftModifierActive","shiftUpLastTimeStamp","finishedLevel","seeAll","seeGuardSight","seeGuardPatrols","camera","$e46db5192eb49d53$var$createCamera","$e46db5192eb49d53$var$initState","requestUpdateAndRender","requestAnimationFrame","$e46db5192eb49d53$var$updateAndRender","body","ctrlKey","preventDefault","$e46db5192eb49d53$var$resetState","distDesired","shiftKey","timeStamp","$e46db5192eb49d53$var$tryMovePlayer","$e46db5192eb49d53$var$advanceToNextLevel","oldTerrain","$e46db5192eb49d53$var$preTurn","$e46db5192eb49d53$var$advanceTime","dist","maxDist","distAllowed","$e46db5192eb49d53$var$blocked","$e46db5192eb49d53$var$playerMoveDistAllowed","posBump","$e46db5192eb49d53$var$makeNoise","volScale","newTerrain","changedTile","tileType","img","reject","$e46db5192eb49d53$var$tileIndexOffsetForDir","posPlayer","position","velocity","snapped","dt","$e46db5192eb49d53$var$cameraTargetCenterPosition","$e46db5192eb49d53$var$snapCamera","posCameraTarget","posError","velError","kSpring","acc","velNew","$e46db5192eb49d53$var$updateCamera","$e46db5192eb49d53$var$updateState","statusBarPixelSizeY","$e46db5192eb49d53$var$statusBarZoom","viewportPixelSize","viewWorldSizeX","viewWorldSizeY","$e46db5192eb49d53$var$viewWorldSize","viewWorldCenterX","viewWorldCenterY","tileZoom","$e46db5192eb49d53$var$worldTileZoom","statusBarWorldSizeY","viewWorldMinX","viewWorldMinY","$e46db5192eb49d53$var$setupViewMatrix","mappedItems","ind","$e46db5192eb49d53$var$renderWorld","$e46db5192eb49d53$var$renderPlayer","tileIndex","visible","$e46db5192eb49d53$var$renderGuards","guardState","$e46db5192eb49d53$var$renderGuardOverheadIcons","seenByGuard","dpos","maxSightCutoff","xMin","xMax","yMin","yMax","$e46db5192eb49d53$var$renderGuardSight","$e46db5192eb49d53$var$renderGuardPatrolPaths","screenSizeInTilesX","screenSizeInTilesY","statusBarTileSizeX","barBackgroundColor","putString","s","glyphIndex","healthX","glyphHeart","playerUnderwater","breathX","glyphBubble","seenMsg","lootMsg","$e46db5192eb49d53$var$renderBottomStatusBar","$e46db5192eb49d53$var$renderScene","posCameraCenter","worldSize","posCenterMin","posCenterMax","posLegalMin","posLegalMax","viewCenterMinX","viewCenterMaxX","viewCenterMinY","viewCenterMaxY","$e46db5192eb49d53$var$cameraCenterPositionLegalRange","zoomedPixelsPerTileX","zoomedPixelsPerTileY","viewPixelSizeDesiredX","viewPixelSizeDesiredY","screenSizeX"],"version":3,"file":"index.91f410d5.js.map"}