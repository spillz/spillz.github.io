{"mappings":"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","sources":["src/my-matrix.ts","src/random.ts","src/guard.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-152566167815fdd5.js","src/game-map.ts","src/create-map.ts","node_modules/howler/dist/howler.js","node_modules/@parcel/runtime-js/lib/runtime-12760fdfc4a93fe4.js","node_modules/@parcel/runtime-js/lib/runtime-78e3eee8cb994830.js","node_modules/@parcel/runtime-js/lib/runtime-7b76f8ceabbbb4bd.js","node_modules/@parcel/runtime-js/lib/runtime-6d2e6297e6651e2e.js","src/audio.ts","src/render.ts","node_modules/@parcel/runtime-js/lib/runtime-6b04dcb5e7b33bbc.js","src/color-preset.ts","node_modules/@parcel/runtime-js/lib/runtime-54fa5cc5c5b21ef8.js","node_modules/@parcel/runtime-js/lib/runtime-9ed7e425779df8a2.js","src/tilesets.ts","node_modules/@parcel/runtime-js/lib/runtime-c77295b30a9e24d3.js","src/game.ts"],"sourcesContent":["export { vec2, mat4 };\n\ntype vec2 = [number, number];\ntype mat4 =\n    [number, number, number, number,\n     number, number, number, number,\n     number, number, number, number,\n     number, number, number, number];\n\nnamespace vec2 {\n    export function create(): vec2 {\n        return [0, 0];\n    }\n\n    export function clone(v: vec2): vec2 {\n        return [v[0], v[1]];\n    }\n\n    export function fromValues(x0: number, x1: number): vec2 {\n        return [x0, x1];\n    }\n\n    export function copy(result: vec2, v: vec2) {\n        result[0] = v[0];\n        result[1] = v[1];\n    }\n\n    export function set(result: vec2, x0: number, x1: number) {\n        result[0] = x0;\n        result[1] = x1;\n    }\n\n    export function add(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] + b[0];\n        result[1] = a[1] + b[1];\n    }\n\n    export function subtract(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] - b[0];\n        result[1] = a[1] - b[1];\n    }\n\n    export function multiply(result: vec2, a: vec2, b: vec2) {\n        result[0] = a[0] * b[0];\n        result[1] = a[1] * b[1];\n    }\n\n    export function scale(result: vec2, a: vec2, scale: number) {\n        result[0] = a[0] * scale;\n        result[1] = a[1] * scale;\n    }\n\n    export function scaleAndAdd(result: vec2, a: vec2, b: vec2, scale: number) {\n        result[0] = a[0] + b[0] * scale;\n        result[1] = a[1] + b[1] * scale;\n    }\n\n    export function distance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return Math.hypot(x, y);\n    }\n\n    export function squaredDistance(a: vec2, b: vec2): number {\n        const x = a[0] - b[0];\n        const y = a[1] - b[1];\n        return x * x + y * y;\n    }\n\n    export function length(a: vec2): number {\n        return Math.hypot(a[0], a[1]);\n    }\n\n    export function squaredLength(a: vec2): number {\n        const x = a[0];\n        const y = a[1];\n        return x * x + y * y;\n    }\n\n    export function negate(result: vec2, a: vec2) {\n        result[0] = -a[0];\n        result[1] = -a[1];\n    }\n\n    export function dot(a: vec2, b: vec2): number {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n\n    export function lerp(result: vec2, a: vec2, b: vec2, t: number) {\n        result[0] = a[0] + t * (b[0] - a[0]);\n        result[1] = a[1] + t * (b[1] - a[1]);\n    }\n\n    export function zero(result: vec2) {\n        result[0] = 0;\n        result[1] = 0;\n    }\n}\n\nnamespace mat4 {\n    export function create(): mat4 {\n        return [\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n        ];\n    }\n\n    export function copy(result: mat4, a: mat4) {\n        result[0] = a[0];\n        result[1] = a[1];\n        result[2] = a[2];\n        result[3] = a[3];\n        result[4] = a[4];\n        result[5] = a[5];\n        result[6] = a[6];\n        result[7] = a[7];\n        result[8] = a[8];\n        result[9] = a[9];\n        result[10] = a[10];\n        result[11] = a[11];\n        result[12] = a[12];\n        result[13] = a[13];\n        result[14] = a[14];\n        result[15] = a[15];\n    }\n\n    export function ortho(result: mat4, left: number, right: number, bottom: number, top: number, near: number, far: number) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        result[0] = -2 * lr;\n        result[1] = 0;\n        result[2] = 0;\n        result[3] = 0;\n        result[4] = 0;\n        result[5] = -2 * bt;\n        result[6] = 0;\n        result[7] = 0;\n        result[8] = 0;\n        result[9] = 0;\n        result[10] = 2 * nf;\n        result[11] = 0;\n        result[12] = (left + right) * lr;\n        result[13] = (top + bottom) * bt;\n        result[14] = (far + near) * nf;\n        result[15] = 1;\n    }\n}\n","export { randomInRange, shuffleArray };\n\nfunction randomInRange(n: number): number {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleArray<T>(array: Array<T>) {\n    for (let i = array.length - 1; i > 0; --i) {\n        let j = randomInRange(i + 1);\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n","export { Guard, GuardMode, guardActAll };\n\nimport { Float64Grid, GameMap, Player, TerrainType, invalidRegion } from './game-map';\nimport { vec2 } from './my-matrix';\nimport { randomInRange } from './random';\n\nenum GuardMode {\n    Patrol,\n    Look,\n    Listen,\n    ChaseVisibleTarget,\n    MoveToLastSighting,\n    MoveToLastSound,\n    MoveToGuardShout,\n}\n\nclass Guard {\n    pos: vec2;\n    dir: vec2;\n    mode: GuardMode;\n    speaking: boolean;\n    hasMoved: boolean;\n    heardThief: boolean;\n    hearingGuard: boolean;\n    heardGuard: boolean;\n    heardGuardPos: vec2;\n\n    // Chase\n    goal: vec2;\n    modeTimeout: number;\n\n    // Patrol\n    regionGoal: number;\n    regionPrev: number;\n\n    constructor(pos: vec2, map: GameMap) {\n        this.pos = vec2.clone(pos);\n        this.dir = vec2.fromValues(1, 0);\n        this.mode = GuardMode.Patrol;\n        this.speaking = false;\n        this.hasMoved = false;\n        this.heardThief = false;\n        this.hearingGuard = false;\n        this.heardGuard = false;\n        this.heardGuardPos = pos;\n        this.goal = pos;\n        this.modeTimeout = 0;\n        this.regionGoal = map.closestRegion(pos);\n        this.regionPrev = invalidRegion;\n\n        this.updateDirInitial(map);\n    }\n\n    overheadIcon(): number | undefined {\n        if (this.mode == GuardMode.Patrol) {\n            return undefined;\n        }\n    \n        return (this.mode == GuardMode.ChaseVisibleTarget) ? 40 : 39;\n    }\n\n    act(/* popups: Popups, lines: Lines, */ player: Player, map: GameMap, shouts: Array<Shout>) {\n        const modePrev = this.mode;\n        const posPrev = vec2.clone(this.pos);\n    \n        // See if senses will kick us into a new mode\n    \n        if (this.seesThief(map, player)) {\n            vec2.copy(this.goal, player.pos);\n    \n            if (this.mode == GuardMode.Patrol && !this.adjacentTo(player.pos)) {\n                this.mode = GuardMode.Look;\n                this.modeTimeout = 2 + randomInRange(4);\n                updateDir(this.dir, this.pos, player.pos);\n            } else {\n                this.mode = GuardMode.ChaseVisibleTarget;\n            }\n        } else if (this.mode == GuardMode.ChaseVisibleTarget) {\n            this.mode = GuardMode.MoveToLastSighting;\n            this.modeTimeout = 3;\n            vec2.copy(this.goal, player.pos);\n        }\n    \n        if (this.mode != GuardMode.ChaseVisibleTarget) {\n            if (this.heardGuard) {\n                this.mode = GuardMode.MoveToGuardShout;\n                this.modeTimeout = 2 + randomInRange(4);\n                vec2.copy(this.goal, this.heardGuardPos);\n            }\n    \n            if (this.heardThief) {\n                if (this.adjacentTo(player.pos)) {\n                    this.mode = GuardMode.ChaseVisibleTarget;\n                    vec2.copy(this.goal, player.pos);\n                } else if (this.mode == GuardMode.Patrol) {\n                    this.mode = GuardMode.Listen;\n                    this.modeTimeout = 2 + randomInRange(4);\n                    updateDir(this.dir, this.pos, player.pos);\n                } else {\n                    this.mode = GuardMode.MoveToLastSound;\n                    this.modeTimeout = 2 + randomInRange(4);\n                    vec2.copy(this.goal, player.pos);\n                }\n            }\n        }\n    \n        // Pass time in the current mode\n    \n        switch (this.mode) {\n        case GuardMode.Patrol:\n            this.patrolStep(map, player);\n            break;\n\n        case GuardMode.Look:\n        case GuardMode.Listen:\n            this.modeTimeout -= 1;\n            if (this.modeTimeout == 0) {\n                this.mode = GuardMode.Patrol;\n            }\n            break;\n\n        case GuardMode.ChaseVisibleTarget:\n            if (this.adjacentTo(player.pos)) {\n                updateDir(this.dir, this.pos, this.goal);\n                if (modePrev == GuardMode.ChaseVisibleTarget) {\n                    if (!player.damagedLastTurn) {\n                        /* TODO\n                        popups.damage(this.pos, lines.damage.next());\n                        */\n                    }\n                    player.applyDamage(1);\n                }\n            } else {\n                this.moveTowardGoal(map, player);\n            }\n            break;\n\n        case GuardMode.MoveToLastSighting:\n        case GuardMode.MoveToLastSound:\n        case GuardMode.MoveToGuardShout:\n            if (!this.moveTowardGoal(map, player)) {\n                this.modeTimeout -= 1;\n            }\n\n            if (this.modeTimeout == 0) {\n                this.mode = GuardMode.Patrol;\n                this.setupGoalRegion(map);\n            }\n            break;\n        }\n    \n        // If we moved, update state based on target visibility from new position\n    \n        if (this.pos[0] != posPrev[0] || this.pos[1] != posPrev[1]) {\n            if (this.seesThief(map, player)) {\n                vec2.copy(this.goal, player.pos);\n    \n                if (this.mode == GuardMode.Patrol && !this.adjacentTo(player.pos)) {\n                    this.mode = GuardMode.Look;\n                    this.modeTimeout = 2 + randomInRange(4);\n                } else {\n                    this.mode = GuardMode.ChaseVisibleTarget;\n                }\n    \n                updateDir(this.dir, this.pos, player.pos);\n            } else if (this.mode == GuardMode.ChaseVisibleTarget) {\n                this.mode = GuardMode.MoveToLastSighting;\n                this.modeTimeout = 3;\n                vec2.copy(this.goal, player.pos);\n            }\n        }\n    \n        // Clear heard-thief flag\n    \n        this.heardThief = false;\n    \n        // Say something to indicate state changes\n\n        /* TODO\n        if (let Some(line_iter) = lines_for_state_change(lines, modePrev, this.mode)) {\n            this.say(popups, player, see_all, line_iter.next());\n        }\n        */\n    \n        if (this.mode == GuardMode.ChaseVisibleTarget && modePrev != GuardMode.ChaseVisibleTarget) {\n            shouts.push({pos_shouter: this.pos, pos_target: player.pos});\n        }\n    }\n\n    adjacentTo(pos: vec2): boolean {\n        const dx = pos[0] - this.pos[0];\n        const dy = pos[1] - this.pos[1];\n        return Math.abs(dx) < 2 && Math.abs(dy) < 2;\n    }\n\n    seesThief(map: GameMap, player: Player): boolean {\n        const d = vec2.create();\n        vec2.subtract(d, player.pos, this.pos);\n        if (vec2.dot(this.dir, d) < 0) {\n            return false;\n        }\n    \n        let playerIsLit = map.cells.at(player.pos[0], player.pos[1]).lit;\n    \n        let d2 = vec2.squaredLength(d);\n        if (d2 >= this.sightCutoff(playerIsLit)) {\n            return false;\n        }\n    \n        if (!player.hidden(map) && lineOfSight(map, this.pos, player.pos)) {\n            return true;\n        }\n    \n        if (this.mode != GuardMode.Patrol && Math.abs(d[0]) < 2 && Math.abs(d[1]) < 2) {\n            return true;\n        }\n    \n        return false;\n    }\n\n    cutoffLit(): number {\n        return (this.mode == GuardMode.Patrol) ? 40 : 75;\n    }\n    \n    cutoffUnlit(): number {\n        return (this.mode == GuardMode.Patrol) ? 3 : 33;\n    }\n    \n    sightCutoff(litTarget: boolean): number {\n        return litTarget ? this.cutoffLit() : this.cutoffUnlit();\n    }\n\n    patrolStep(map: GameMap, player: Player) {\n        const bumpedThief = this.moveTowardRegion(map, player);\n    \n        if (map.cells.at(this.pos[0], this.pos[1]).region === this.regionGoal) {\n            const regionPrev = this.regionPrev;\n            this.regionPrev = this.regionGoal;\n            this.regionGoal = map.randomNeighborRegion(this.regionGoal, regionPrev);\n        }\n    \n        if (bumpedThief) {\n            this.mode = GuardMode.ChaseVisibleTarget;\n            this.goal = player.pos;\n            updateDir(this.dir, this.pos, this.goal);\n        }\n    }\n\n    updateDirInitial(map: GameMap)\n    {\n        if (this.regionGoal == invalidRegion) {\n            return;\n        }\n    \n        let distanceField = map.computeDistancesToRegion(this.regionGoal);\n        const posNext = posNextBest(map, distanceField, this.pos);\n    \n        updateDir(this.dir, this.pos, posNext);\n    }\n\n    moveTowardRegion(map: GameMap, player: Player): boolean {\n        if (this.regionGoal === invalidRegion) {\n            return false;\n        }\n\n        const distanceField = map.computeDistancesToRegion(this.regionGoal);\n        const posNext = posNextBest(map, distanceField, this.pos);\n\n        if (player.pos[0] == posNext[0] && player.pos[1] == posNext[1]) {\n            return true;\n        }\n\n        updateDir(this.dir, this.pos, posNext);\n        vec2.copy(this.pos, posNext);\n\n        return false;\n    }\n\n    moveTowardGoal(map: GameMap, player: Player): boolean {\n        const distanceField = map.computeDistancesToPosition(this.goal);\n        const posNext = posNextBest(map, distanceField, this.pos);\n\n        if (posNext[0] == this.pos[0] && posNext[1] == this.pos[1]) {\n            return false;\n        }\n\n        updateDir(this.dir, this.pos, posNext);\n\n        if (player.pos[0] == posNext[0] && player.pos[1] == posNext[1]) {\n            return false;\n        }\n\n        vec2.copy(this.pos, posNext);\n        return true;\n    }\n\n    setupGoalRegion(map: GameMap) {\n        const regionCur = map.cells.at(this.pos[0], this.pos[1]).region;\n    \n        if (this.regionGoal !== invalidRegion && regionCur === this.regionPrev) {\n            return;\n        }\n    \n        if (regionCur === invalidRegion) {\n            this.regionGoal = map.closestRegion(this.pos);\n        } else {\n            this.regionGoal = map.randomNeighborRegion(regionCur, this.regionPrev);\n            this.regionPrev = regionCur;\n        }\n    }\n}\n\ntype Shout = {\n    pos_shouter: vec2; // where is the person shouting?\n    pos_target: vec2; // where are they reporting the player is?\n}\n\nfunction guardActAll(/* popups: Popups, lines: Lines, */ map: GameMap, player: Player) {\n\n    // Mark if we heard a guard last turn, and clear the speaking flag.\n\n    for (const guard of map.guards) {\n        guard.heardGuard = guard.hearingGuard;\n        guard.hearingGuard = false;\n        guard.speaking = false;\n        guard.hasMoved = false;\n    }\n\n    // Update each guard for this turn.\n\n    const shouts: Array<Shout> = [];\n    for (const guard of map.guards) {\n        guard.act(/* popups, lines, */ player, map, shouts);\n        guard.hasMoved = true;\n    }\n\n    // Process shouts\n\n    for (const shout of shouts) {\n        alertNearbyGuards(map, shout);\n    }\n}\n\nfunction alertNearbyGuards(map: GameMap, shout: Shout) {\n    for (const guard of map.guardsInEarshot(shout.pos_shouter, 25)) {\n        if (guard.pos[0] != shout.pos_shouter[0] || guard.pos[1] != shout.pos_shouter[1]) {\n            guard.hearingGuard = true;\n            vec2.copy(guard.heardGuardPos, shout.pos_shouter);\n        }\n    }\n}\n\nfunction posNextBest(map: GameMap, distanceField: Float64Grid, posFrom: vec2): vec2 {\n    let costBest = Infinity;\n    let posBest = posFrom;\n\n    const posMin = vec2.fromValues(Math.max(0, posFrom[0] - 1), Math.max(0, posFrom[1] - 1));\n    const posMax = vec2.fromValues(Math.min(map.cells.sizeX, posFrom[0] + 2), Math.min(map.cells.sizeY, posFrom[1] + 2));\n\n    for (let x = posMin[0]; x < posMax[0]; ++x) {\n        for (let y = posMin[1]; y < posMax[1]; ++y) {\n            const cost = distanceField.get(x, y);\n            if (cost == Infinity) {\n                continue;\n            }\n\n            let pos = vec2.fromValues(x, y);\n            if (map.guardMoveCost(posFrom, pos) == Infinity) {\n                continue;\n            }\n\n            if (map.cells.at(pos[0], pos[1]).type == TerrainType.GroundWater) {\n                continue;\n            }\n\n            if (map.isGuardAt(pos[0], pos[1])) {\n                continue;\n            }\n\n            if (cost < costBest) {\n                costBest = cost;\n                posBest = pos;\n            }\n        }\n    }\n\n    return posBest;\n}\n\nfunction updateDir(dir: vec2, pos: vec2, posTarget: vec2) {\n    const dirTarget = vec2.create();\n    vec2.subtract(dirTarget, posTarget, pos);\n\n    const dirLeft = vec2.fromValues(-dir[1], dir[0]);\n\n    let dotForward = vec2.dot(dir, dirTarget);\n    let dotLeft = vec2.dot(dirLeft, dirTarget);\n\n    if (Math.abs(dotForward) >= Math.abs(dotLeft)) {\n        if (dotForward >= 0) {\n            // leave dir unchanged\n        } else {\n            vec2.negate(dir, dir);\n        }\n    } else if (Math.abs(dotLeft) > Math.abs(dotForward)) {\n        if (dotLeft >= 0) {\n            vec2.copy(dir, dirLeft);\n        } else {\n            vec2.negate(dir, dirLeft);\n        }\n    } else if (dotForward > 0) {\n        // leave dir unchanged\n    } else if (dotLeft >= 0) {\n        vec2.copy(dir, dirLeft);\n    } else {\n        vec2.negate(dir, dirLeft);\n    }\n}\n\nfunction lineOfSight(map: GameMap, from: vec2, to: vec2): boolean {\n    let x = from[0];\n    let y = from[1];\n\n    const dx = to[0] - x;\n    const dy = to[1] - y;\n\n    let ax = Math.abs(dx);\n    let ay = Math.abs(dy);\n\n    const x_inc = (dx > 0) ? 1 : -1;\n    const y_inc = (dy > 0) ? 1 : -1;\n\n    let error = ay - ax;\n\n    let n = ax + ay - 1;\n\n    ax *= 2;\n    ay *= 2;\n\n    while (n > 0) {\n        if (error > 0) {\n            y += y_inc;\n            error -= ax;\n        } else {\n            x += x_inc;\n            error += ay;\n        }\n\n        if (map.cells.at(x, y).blocksSight) {\n            return false;\n        }\n\n        --n;\n    }\n\n    return true;\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"17fSe\\\":\\\"index.cc5e8843.js\\\",\\\"757gI\\\":\\\"footstep-wood.8da8b302.ogg\\\",\\\"fI7s2\\\":\\\"footstep-tile.ed285432.ogg\\\",\\\"64MsM\\\":\\\"footstep-water.41ed0f5b.ogg\\\",\\\"fe6XQ\\\":\\\"footstep-gravel.2ecfc65f.ogg\\\",\\\"kPzFJ\\\":\\\"footstep-grass.46fcb678.ogg\\\",\\\"k57aN\\\":\\\"tiles34.1a505bca.png\\\",\\\"8dSx0\\\":\\\"tiles.60aa3fc2.png\\\",\\\"kDrfW\\\":\\\"font.84b63647.png\\\"}\"));","export {\n    BooleanGrid,\n    Cell,\n    CellGrid,\n    Float64Grid,\n    Int32Grid,\n    ItemType,\n    GameMap,\n    Player,\n    TerrainType,\n    guardMoveCostForItemType,\n    invalidRegion\n};\n\nimport { Guard, GuardMode } from './guard';\nimport { vec2 } from './my-matrix';\nimport { randomInRange } from './random';\n\nconst invalidRegion: number = -1;\n\n// TODO: Figure out how to make a generic grid data structure\n\nclass BooleanGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Uint8Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: boolean) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Uint8Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: boolean) {\n        this.values.fill(value ? 1 : 0);\n    }\n\n    get(x: number, y: number): boolean {\n        return this.values[this.sizeX * y + x] !== 0;\n    }\n\n    set(x: number, y: number, value: boolean) {\n        this.values[this.sizeX * y + x] = value ? 1 : 0;\n    }\n}\n\nclass Int32Grid {\n    sizeX: number;\n    sizeY: number;\n    values: Int32Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Int32Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: number) {\n        this.values.fill(value);\n    }\n\n    get(x: number, y: number): number {\n        return this.values[this.sizeX * y + x];\n    }\n\n    set(x: number, y: number, value: number) {\n        this.values[this.sizeX * y + x] = value;\n    }\n}\n\nclass Float64Grid {\n    sizeX: number;\n    sizeY: number;\n    values: Float64Array;\n\n    constructor(sizeX: number, sizeY: number, initialValue: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        this.values = new Float64Array(sizeX * sizeY);\n        this.fill(initialValue);\n    }\n\n    fill(value: number) {\n        this.values.fill(value);\n    }\n\n    get(x: number, y: number): number {\n        return this.values[this.sizeX * y + x];\n    }\n\n    set(x: number, y: number, value: number) {\n        this.values[this.sizeX * y + x] = value;\n    }\n}\n\nenum TerrainType {\n    GroundNormal,\n    GroundGrass,\n    GroundWater,\n    GroundMarble,\n    GroundWood,\n    GroundWoodCreaky,\n\n    //  NSEW\n    Wall0000,\n    Wall0001,\n    Wall0010,\n    Wall0011,\n    Wall0100,\n    Wall0101,\n    Wall0110,\n    Wall0111,\n    Wall1000,\n    Wall1001,\n    Wall1010,\n    Wall1011,\n    Wall1100,\n    Wall1101,\n    Wall1110,\n    Wall1111,\n\n    OneWayWindowE,\n    OneWayWindowW,\n    OneWayWindowN,\n    OneWayWindowS,\n    PortcullisNS,\n    PortcullisEW,\n    DoorNS,\n    DoorEW,\n}\n\ntype Cell = {\n    type: TerrainType;\n    moveCost: number;\n    region: number;\n    blocksPlayerMove: boolean;\n    blocksPlayerSight: boolean;\n    blocksSight: boolean;\n    blocksSound: boolean;\n    hidesPlayer: boolean;\n    lit: boolean;\n    seen: boolean;\n}\n\nclass CellGrid {\n    sizeX: number;\n    sizeY: number;\n    values: Array<Cell>;\n\n    constructor(sizeX: number, sizeY: number) {\n        this.sizeX = sizeX;\n        this.sizeY = sizeY;\n        const size = sizeX * sizeY;\n        this.values = new Array<Cell>(size);\n        for (let i = 0; i < size; ++i) {\n            this.values[i] = {\n                type: TerrainType.GroundNormal,\n                moveCost: Infinity,\n                region: invalidRegion,\n                blocksPlayerMove: false,\n                blocksPlayerSight: false,\n                blocksSight: false,\n                blocksSound: false,\n                hidesPlayer: false,\n                lit: false,\n                seen: false,\n            };\n        }\n    }\n\n    at(x: number, y: number): Cell {\n        const i = this.sizeX * y + x;\n        console.assert(i >= 0);\n        console.assert(i < this.values.length);\n        return this.values[i];\n    }\n}\n\nenum ItemType {\n    Chair,\n    Table,\n    Bush,\n    Coin,\n    DoorNS,\n    DoorEW,\n    PortcullisNS,\n    PortcullisEW,\n    TorchUnlit,\n    TorchLit,\n}\n\ntype Item = {\n    pos: vec2;\n    type: ItemType;\n}\n\nfunction guardMoveCostForItemType(itemType: ItemType): number {\n    switch (itemType) {\n        case ItemType.Chair: return 4;\n        case ItemType.Table: return 10;\n        case ItemType.Bush: return 10;\n        case ItemType.Coin: return 0;\n        case ItemType.DoorNS: return 0;\n        case ItemType.DoorEW: return 0;\n        case ItemType.PortcullisNS: return 0;\n        case ItemType.PortcullisEW: return 0;\n        case ItemType.TorchUnlit: return Infinity;\n        case ItemType.TorchLit: return Infinity;\n    }\n}\n\nconst maxPlayerHealth: number = 5;\n\nclass Player {\n    pos: vec2;\n    dir: vec2;\n    health: number;\n    gold: number;\n    noisy: boolean; // did the player make noise last turn?\n    damagedLastTurn: boolean;\n    turnsRemainingUnderwater: number;\n\n    constructor(pos: vec2) {\n        this.pos = vec2.clone(pos);\n        this.dir = vec2.fromValues(0, -1);\n        this.health = maxPlayerHealth;\n        this.gold = 0;\n        this.noisy = false;\n        this.damagedLastTurn = false;\n        this.turnsRemainingUnderwater = 0;\n    }\n\n    applyDamage(d: number) {\n        this.health -= Math.min(d, this.health);\n        this.damagedLastTurn = true;\n    }\n\n    hidden(map: GameMap): boolean {\n        if (map.guards.find((guard) => guard.mode == GuardMode.ChaseVisibleTarget) !== undefined) {\n            return false;\n        }\n\n        if (map.cells.at(this.pos[0], this.pos[1]).hidesPlayer) {\n            return true;\n        }\n\n        let cellType = map.cells.at(this.pos[0], this.pos[1]).type;\n\n        if (cellType == TerrainType.GroundWater && this.turnsRemainingUnderwater > 0) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\ntype Rect = {\n    posMin: vec2;\n    posMax: vec2;\n}\n\ntype PortalInfo = {\n    // offset of left corner of portal relative to lower-left corner of cell:\n    lx: number;\n    ly: number;\n    // offset of right corner of portal relative to lower-left-corner of cell:\n    rx: number;\n    ry: number;\n    // offset of neighboring cell relative to this cell's coordinates:\n    nx: number;\n    ny: number;\n}\n\nconst portals: Array<PortalInfo> = [\n    { lx: -1, ly: -1, rx: -1, ry:  1, nx: -1, ny:  0 },\n    { lx: -1, ly:  1, rx:  1, ry:  1, nx:  0, ny:  1 },\n    { lx:  1, ly:  1, rx:  1, ry: -1, nx:  1, ny:  0 },\n    { lx:  1, ly: -1, rx: -1, ry: -1, nx:  0, ny: -1 },\n];\n\nfunction aRightOfB(ax: number, ay: number, bx: number, by: number): boolean {\n    return ax * by > ay * bx;\n}\n\nfunction allowedDirection(terrainType: TerrainType, dx: number, dy: number): boolean {\n    switch (terrainType) {\n    case TerrainType.OneWayWindowE: return dx > 0;\n    case TerrainType.OneWayWindowW: return dx < 0;\n    case TerrainType.OneWayWindowN: return dy > 0;\n    case TerrainType.OneWayWindowS: return dy < 0;\n    default: return true;\n    }\n}\n\ntype AdjacentMove = {\n    dx: number;\n    dy: number;\n    cost: number;\n}\n\nconst adjacentMoves: Array<AdjacentMove> = [\n    { dx:  1, dy:  0, cost: 2 },\n    { dx: -1, dy:  0, cost: 2 },\n    { dx:  0, dy:  1, cost: 2 },\n    { dx:  0, dy: -1, cost: 2 },\n    { dx: -1, dy: -1, cost: 3 },\n    { dx:  1, dy: -1, cost: 3 },\n    { dx: -1, dy:  1, cost: 3 },\n    { dx:  1, dy:  1, cost: 3 },\n];\n\nconst soundNeighbors: Array<vec2> = [\n    vec2.fromValues(-1, 0),\n    vec2.fromValues(1, 0),\n    vec2.fromValues(0, -1),\n    vec2.fromValues(0, 1),\n];\n\ntype DistPos = {\n    priority: number; // = distance; needs to be named priority for PriorityQueueElement\n    pos: vec2;\n}\n\nclass GameMap {\n    cells: CellGrid;\n    patrolRegions: Array<Rect>;\n    patrolRoutes: Array<[number, number]>;\n    items: Array<Item>;\n    guards: Array<Guard>;\n    playerStartPos: vec2;\n    totalLoot: number;\n\n    constructor(cells: CellGrid) {\n        this.cells = cells;\n        this.patrolRegions = [];\n        this.patrolRoutes = [];\n        this.items = [];\n        this.guards = [];\n        this.playerStartPos = vec2.create();\n        this.totalLoot = 0;\n    }\n\n    collectLootAt(x: number, y: number): number {\n        let gold = 0;\n        this.items = this.items.filter((item) => {\n            if (item.type == ItemType.Coin && item.pos[0] == x && item.pos[1] == y) {\n                ++gold;\n                return false;\n            } else {\n                return true;\n            }\n        });\n        return gold;\n    }\n    \n    collectAllLoot(): number {\n        let gold = 0;\n        this.items = this.items.filter((item) => {\n            if (item.type == ItemType.Coin) {\n                ++gold;\n                return true;\n            } else {\n                return false;\n            }\n        });\n        return gold;\n    }\n\n    allSeen(): boolean {\n        for (const cell of this.cells.values) {\n            if (!cell.seen) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    percentSeen(): number {\n        let numSeen = 0;\n        for (const cell of this.cells.values) {\n            if (cell.seen) {\n                ++numSeen;\n            }\n        }\n    \n        return Math.floor((numSeen * 100) / this.cells.values.length);\n    }\n    \n    markAllSeen() {\n        for (const cell of this.cells.values) {\n            cell.seen = true;\n        }\n    }\n    \n    markAllUnseen() {\n        for (const cell of this.cells.values) {\n            cell.seen = false;\n        }\n    }\n\n    recomputeVisibility(posViewer: vec2) {\n        for (const portal of portals) {\n            this.computeVisibility\n            (\n                posViewer[0], posViewer[1],\n                posViewer[0], posViewer[1],\n                portal.lx, portal.ly,\n                portal.rx, portal.ry\n            );\n        }\n    }\n    \n    playerCanSeeInDirection(posViewer: vec2, dir: vec2): boolean {\n        const posTarget = vec2.create();\n        vec2.add(posTarget, posViewer, dir);\n        if (posTarget[0] < 0 ||\n            posTarget[1] < 0 ||\n            posTarget[0] >= this.cells.sizeX ||\n            posTarget[1] >= this.cells.sizeY) {\n            return true;\n        }\n    \n        if (!allowedDirection(this.cells.at(posTarget[0], posTarget[1]).type, dir[0], dir[1])) {\n            return false;\n        }\n\n        return !this.cells.at(posTarget[0], posTarget[1]).blocksPlayerSight;\n    }\n\n    computeVisibility(\n        // Viewer map coordinates:\n        viewerX: number,\n        viewerY: number,\n        // Target cell map coordinates:\n        targetX: number,\n        targetY: number,\n        // Left edge of current view frustum (relative to viewer):\n        ldx: number,\n        ldy: number,\n        // Right edge of current view frustum (relative to viewer):\n        rdx: number,\n        rdy: number\n    ) {\n        // End recursion if the target cell is out of bounds.\n        if (targetX < 0 || targetY < 0 || targetX >= this.cells.sizeX || targetY >= this.cells.sizeY) {\n            return;\n        }\n    \n        // End recursion if the target square is too far away.\n        const dx = 2 * (targetX - viewerX);\n        const dy = 2 * (targetY - viewerY);\n    \n        if (dx*dx + dy*dy > 1600) {\n            return;\n        }\n    \n        // End recursion if the incoming direction is not allowed by the current cell type.\n        if (!allowedDirection(this.cells.at(targetX, targetY).type, dx, dy)) {\n            return;\n        }\n    \n        // This square is visible.\n        this.cells.at(targetX, targetY).seen = true;\n    \n        // End recursion if the target square occludes the view.\n        if (this.cells.at(targetX, targetY).blocksPlayerSight) {\n            return;\n        }\n    \n        // Mark diagonally-adjacent squares as visible if their corners are visible\n        for (let x = 0; x < 2; ++x) {\n            for (let y = 0; y < 2; ++y) {\n                let nx = targetX + 2*x - 1;\n                let ny = targetY + 2*y - 1;\n                let cdx = dx + 2*x - 1;\n                let cdy = dy + 2*y - 1;\n                \n                if (nx >= 0 &&\n                    ny >= 0 &&\n                    nx < this.cells.sizeX &&\n                    ny < this.cells.sizeY &&\n                    !aRightOfB(ldx, ldy, cdx, cdy) &&\n                    !aRightOfB(cdx, cdy, rdx, rdy)) {\n                    this.cells.at(nx, ny).seen = true;\n                }\n            }\n        }\n    \n        // Clip portals to adjacent squares and recurse through the visible portions\n        for (const portal of portals) {\n            // Relative positions of the portal's left and right endpoints:\n            const pldx = dx + portal.lx;\n            const pldy = dy + portal.ly;\n            const prdx = dx + portal.rx;\n            const prdy = dy + portal.ry;\n    \n            // Clip portal against current view frustum:\n            const [cldx, cldy] = aRightOfB(ldx, ldy, pldx, pldy) ? [ldx, ldy] : [pldx, pldy];\n            const [crdx, crdy] = aRightOfB(rdx, rdy, prdx, prdy) ? [prdx, prdy] : [rdx, rdy];\n    \n            // If we can see through the clipped portal, recurse through it.\n            if (aRightOfB(crdx, crdy, cldx, cldy)) {\n                this.computeVisibility\n                (\n                    viewerX, viewerY,\n                    targetX + portal.nx, targetY + portal.ny,\n                    cldx, cldy,\n                    crdx, crdy\n                );\n            }\n        }\n    }\n\n    computeLighting() {\n        for (const cell of this.cells.values) {\n            cell.lit = false;\n        }\n        for (const item of this.items) {\n            if (item.type == ItemType.TorchLit) {\n                this.castLight(item.pos, 180);\n            }\n        }\n    }\n\n    castLight(posLight: vec2, radiusSquared: number) {\n        for (const portal of portals) {\n            this.castLightRecursive(\n                posLight[0], posLight[1],\n                posLight[0], posLight[1],\n                portal.lx, portal.ly,\n                portal.rx, portal.ry,\n                radiusSquared\n            );\n        }\n    }\n\n    castLightRecursive(\n        // Light source map coordinates:\n        lightX: number,\n        lightY: number,\n        // Target cell map coordinates:\n        targetX: number,\n        targetY: number,\n        // Left edge of current view frustum (relative to viewer):\n        ldx: number,\n        ldy: number,\n        // Right edge of current view frustum (relative to viewer):\n        rdx: number,\n        rdy: number,\n        // Max radius of light source\n        radiusSquared: number) {\n        // End recursion if the target cell is out of bounds.\n        if (targetX < 0 || targetY < 0 || targetX >= this.cells.sizeX || targetY >= this.cells.sizeY) {\n            return;\n        }\n    \n        // End recursion if the target square is too far away.\n        const dx = 2 * (targetX - lightX);\n        const dy = 2 * (targetY - lightY);\n    \n        if (dx**2 + dy**2 > radiusSquared) {\n            return;\n        }\n\n        // The cell is lit\n        const cell = this.cells.at(targetX, targetY);\n        cell.lit = true;\n\n        // A solid target square blocks all further light through it.\n        if (cell.blocksSight) {\n            return;\n        }\n    \n        // Mark diagonally-adjacent squares as lit if their corners are lit\n        for (let x = 0; x < 2; ++x) {\n            for (let y = 0; y < 2; ++y) {\n                let nx = targetX + 2*x - 1;\n                let ny = targetY + 2*y - 1;\n                let cdx = dx + 2*x - 1;\n                let cdy = dy + 2*y - 1;\n                \n                if (nx >= 0 &&\n                    ny >= 0 &&\n                    nx < this.cells.sizeX &&\n                    ny < this.cells.sizeY &&\n                    !aRightOfB(ldx, ldy, cdx, cdy) &&\n                    !aRightOfB(cdx, cdy, rdx, rdy)) {\n                    this.cells.at(nx, ny).lit = true;\n                }\n            }\n        }\n    \n        // Clip portals to adjacent squares and recurse through the visible portions\n        for (const portal of portals) {\n            // Relative positions of the portal's left and right endpoints:\n            const pldx = dx + portal.lx;\n            const pldy = dy + portal.ly;\n            const prdx = dx + portal.rx;\n            const prdy = dy + portal.ry;\n    \n            // Clip portal against current view frustum:\n            const [cldx, cldy] = aRightOfB(ldx, ldy, pldx, pldy) ? [ldx, ldy] : [pldx, pldy];\n            const [crdx, crdy] = aRightOfB(rdx, rdy, prdx, prdy) ? [prdx, prdy] : [rdx, rdy];\n    \n            // If we can see through the clipped portal, recurse through it.\n            if (aRightOfB(crdx, crdy, cldx, cldy)) {\n                this.castLightRecursive(\n                    lightX, lightY,\n                    targetX + portal.nx, targetY + portal.ny,\n                    cldx, cldy,\n                    crdx, crdy,\n                    radiusSquared\n                );\n            }\n        }\n    }\n    \n    allLootCollected(): boolean {\n        return this.items.find((item) => item.type == ItemType.Coin) === undefined;\n    }\n\n    isGuardAt(x: number, y: number): boolean {\n        return this.guards.find((guard) => guard.hasMoved && guard.pos[0] == x && guard.pos[1] == y) != undefined;\n    }\n\n    randomNeighborRegion(region: number, regionExclude: number): number {\n        const neighbors = [];\n    \n        for (const [region0, region1] of this.patrolRoutes) {\n            if (region0 === region && region1 !== regionExclude) {\n                neighbors.push(region1);\n            } else if (region1 === region && region0 !== regionExclude) {\n                neighbors.push(region0);\n            }\n        }\n    \n        if (neighbors.length === 0) {\n            return region;\n        }\n\n        return neighbors[randomInRange(neighbors.length)];\n    }\n\n    guardMoveCost(posOld: vec2, posNew: vec2): number {\n        const cost = this.cells.at(posNew[0], posNew[1]).moveCost;\n    \n        if (cost === Infinity) {\n            return cost;\n        }\n    \n        // Guards are not allowed to move diagonally around corners.\n    \n        if (posOld[0] != posNew[0] &&\n            posOld[1] != posNew[1] &&\n            (this.cells.at(posOld[0], posNew[1]).moveCost === Infinity ||\n             this.cells.at(posNew[0], posOld[1]).moveCost === Infinity)) {\n            return Infinity;\n        }\n    \n        return cost;\n    }\n\n    closestRegion(posStart: vec2): number {\n        if (this.patrolRegions.length === 0) {\n            return invalidRegion;\n        }\n\n        const sizeX = this.cells.sizeX;\n        const sizeY = this.cells.sizeY;\n\n        const distField = new Float64Grid(sizeX, sizeY, Infinity);\n        const toVisit: PriorityQueue<DistPos> = [];\n\n        priorityQueuePush(toVisit, { priority: 0, pos: posStart });\n\n        while (toVisit.length > 0) {\n            const distPos = priorityQueuePop(toVisit);\n            const dist = distPos.priority;\n            const pos = distPos.pos;\n\n            const region = this.cells.at(pos[0], pos[1]).region;\n            if (region !== invalidRegion) {\n                return region;\n            }\n    \n            if (dist >= distField.get(pos[0], pos[1])) {\n                continue;\n            }\n    \n            distField.set(pos[0], pos[1], dist);\n    \n            for (const adjacentMove of adjacentMoves) {\n                const posNew = vec2.fromValues(pos[0] + adjacentMove.dx, pos[1] + adjacentMove.dy);\n                if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= sizeX || posNew[1] >= sizeY) {\n                    continue;\n                }\n    \n                const moveCost = this.guardMoveCost(pos, posNew);\n                if (moveCost == Infinity) {\n                    continue;\n                }\n    \n                let distNew = dist + moveCost + adjacentMove.cost;\n    \n                if (distNew < distField.get(posNew[0], posNew[1])) {\n                    priorityQueuePush(toVisit, { priority: distNew, pos: posNew });\n                }\n            }\n        }\n    \n        return invalidRegion;\n    }\n\n    computeDistancesToRegion(iRegionGoal: number): Float64Grid {\n        console.assert(iRegionGoal >= 0);\n        console.assert(iRegionGoal < this.patrolRegions.length);\n    \n        let region = this.patrolRegions[iRegionGoal];\n    \n        // Fill the priority queue with all of the region's locations.\n    \n        const goal = [];\n    \n        for (let x = region.posMin[0]; x < region.posMax[0]; ++x) {\n            for (let y = region.posMin[1]; y < region.posMax[1]; ++y) {\n                const p = vec2.fromValues(x, y);\n                const cost = this.cells.at(x, y).moveCost;\n                goal.push({ priority: cost, pos: p });\n            }\n        }\n    \n        return this.computeDistanceField(goal);\n    }\n    \n    computeDistancesToPosition(pos_goal: vec2): Float64Grid {\n        console.assert(pos_goal[0] >= 0);\n        console.assert(pos_goal[1] >= 0);\n        console.assert(pos_goal[0] < this.cells.sizeX);\n        console.assert(pos_goal[1] < this.cells.sizeY);\n    \n        return this.computeDistanceField([{ priority: 0, pos: pos_goal }]);\n    }\n\n    computeDistanceField(initialDistances: Array<DistPos>): Float64Grid {\n        let sizeX = this.cells.sizeX;\n        let sizeY = this.cells.sizeY;\n\n        const toVisit: PriorityQueue<DistPos> = [];\n        const distField = new Float64Grid(sizeX, sizeY, Infinity);\n    \n        for (const distPos of initialDistances) {\n            priorityQueuePush(toVisit, distPos);\n        }\n    \n        while (toVisit.length > 0) {\n            const distPos = priorityQueuePop(toVisit);\n            if (distPos.priority >= distField.get(distPos.pos[0], distPos.pos[1])) {\n                continue;\n            }\n    \n            distField.set(distPos.pos[0], distPos.pos[1], distPos.priority);\n    \n            for (const adjacentMove of adjacentMoves) {\n                const posNew = vec2.fromValues(distPos.pos[0] + adjacentMove.dx, distPos.pos[1] + adjacentMove.dy);\n                if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= sizeX || posNew[1] >= sizeY) {\n                    continue;\n                }\n    \n                const moveCost = this.guardMoveCost(distPos.pos, posNew);\n                if (moveCost == Infinity) {\n                    continue;\n                }\n    \n                const distNew = distPos.priority + moveCost + adjacentMove.cost;\n    \n                if (distNew < distField.get(posNew[0], posNew[1])) {\n                    priorityQueuePush(toVisit, { priority: distNew, pos: posNew });\n                }\n            }\n        }\n    \n        return distField;\n    }\n\n    guardsInEarshot(soundPos: vec2, radius: number): Array<Guard> {\n        const coords = this.coordsInEarshot(soundPos, radius);\n        return this.guards.filter(guard => coords.has(this.cells.sizeX * guard.pos[1] + guard.pos[0]));\n    }\n\n    coordsInEarshot(soundPos: vec2, costCutoff: number): Set<number> {\n        let sizeX = this.cells.sizeX;\n        let sizeY = this.cells.sizeY;\n    \n        const toVisit: PriorityQueue<DistPos> = [];\n        const distField = new Float64Grid(sizeX, sizeY, Infinity);\n        const coordsVisited: Set<number> = new Set();\n    \n        priorityQueuePush(toVisit, { priority: 0, pos: soundPos });\n    \n        while (toVisit.length > 0) {\n            const distPos = priorityQueuePop(toVisit);\n            if (distPos.priority >= distField.get(distPos.pos[0], distPos.pos[1])) {\n                continue;\n            }\n    \n            distField.set(distPos.pos[0], distPos.pos[1], distPos.priority);\n            coordsVisited.add(sizeX * distPos.pos[1] + distPos.pos[0]);\n    \n            for (const adjacentMove of adjacentMoves) {\n                const posNew = vec2.fromValues(distPos.pos[0] + adjacentMove.dx, distPos.pos[1] + adjacentMove.dy);\n                if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= sizeX || posNew[1] >= sizeY) {\n                    continue;\n                }\n    \n                const costNew = distPos.priority + adjacentMove.cost;\n                if (costNew > costCutoff) {\n                    continue;\n                }\n    \n                if (this.cells.at(posNew[0], posNew[1]).blocksSound) {\n                    continue;\n                }\n    \n                if (costNew >= distField.get(posNew[0], posNew[1])) {\n                    continue;\n                }\n    \n                priorityQueuePush(toVisit, { priority: costNew, pos: posNew });\n            }\n        }\n    \n        return coordsVisited;\n    }\n}\n\ntype PriorityQueueElement = {\n    priority: number;\n}\n\ntype PriorityQueue<T> = Array<T>;\n\nfunction priorityQueuePop<T extends PriorityQueueElement>(q: PriorityQueue<T>): T {\n    const x = q[0];\n    q[0] = q[q.length - 1]; // q.at(-1);\n    q.pop();\n    let i = 0;\n    const c = q.length;\n    while (true) {\n        let iChild = i;\n        const iChild0 = 2*i + 1;\n        if (iChild0 < c && q[iChild0].priority < q[iChild].priority) {\n            iChild = iChild0;\n        }\n        const iChild1 = iChild0 + 1;\n        if (iChild1 < c && q[iChild1].priority < q[iChild].priority) {\n            iChild = iChild1;\n        }\n        if (iChild == i) {\n            break;\n        }\n        [q[i], q[iChild]] = [q[iChild], q[i]];\n        i = iChild;\n    }\n    return x;\n}\n\nfunction priorityQueuePush<T extends PriorityQueueElement>(q: PriorityQueue<T>, x: T) {\n    q.push(x);\n    let i = q.length - 1;\n    while (i > 0) {\n        const iParent = Math.floor((i - 1) / 2);\n        if (q[i].priority >= q[iParent].priority) {\n            break;\n        }\n        [q[i], q[iParent]] = [q[iParent], q[i]];\n        i = iParent;\n    }\n}\n","export { createGameMap };\n\nimport { BooleanGrid, CellGrid, Int32Grid, ItemType, GameMap, TerrainType, invalidRegion, guardMoveCostForItemType } from './game-map';\nimport { Guard } from './guard';\nimport { vec2 } from './my-matrix';\nimport { randomInRange, shuffleArray } from './random';\n\nconst roomSizeX = 5;\nconst roomSizeY = 5;\nconst outerBorder = 3;\n\nenum RoomType\n{\n    Exterior,\n    PublicCourtyard,\n    PublicRoom,\n    PrivateCourtyard,\n    PrivateRoom,\n}\n\ntype Room = {\n    roomType: RoomType,\n    group: number,\n    depth: number,\n    posMin: vec2,\n    posMax: vec2,\n    edges: Array<number>,\n}\n\ntype Adjacency = {\n    origin: vec2,\n    dir: vec2,\n    length: number,\n    room_left: number,\n    room_right: number,\n    next_matching: number,\n    door: boolean,\n}\n\nfunction createGameMap(level: number): GameMap {\n    let map = createGameMapInternal(level);\n\n    for (let iTry = 0; map.patrolRegions.length === 0 && iTry < 100; ++iTry) {\n        map = createGameMapInternal(level);\n    }\n\n    return map;\n}\n\nfunction createGameMapInternal(level: number): GameMap {\n    const sizeX = randomHouseWidth(level);\n    const sizeY = randomHouseDepth(level);\n\n    const inside = makeSiheyuanRoomGrid(sizeX, sizeY);\n\n    const mirrorX: boolean = true;\n    const mirrorY: boolean = false;\n\n    const [offsetX, offsetY] = offsetWalls(mirrorX, mirrorY, inside);\n\n    const cells = plotWalls(inside, offsetX, offsetY);\n\n    const map = new GameMap(cells);\n\n    const [rooms, adjacencies, posStart] = createExits(level, mirrorX, mirrorY, inside, offsetX, offsetY, map);\n\n    vec2.copy(map.playerStartPos, posStart);\n\n    placeExteriorBushes(map);\n    placeFrontPillars(map);\n    placeLoot(rooms, adjacencies, map);\n\n    fixupWalls(cells);\n    cacheCellInfo(map);\n\n    placeGuards(level, rooms, map);\n\n    markExteriorAsSeen(map);\n\n    map.totalLoot = map.items.reduce((totalLoot, item) => totalLoot + ((item.type == ItemType.Coin) ? 1 : 0), 0);\n\n    map.computeLighting();\n\n    return map;\n}\n\nfunction randomHouseWidth(level: number): number {\n    let sizeX = 0;\n    const c = Math.min(3, level);\n    for (let i = 0; i < c; ++i) {\n        sizeX += randomInRange(2);\n    }\n    return sizeX * 2 + 3;\n}\n\nfunction randomHouseDepth(level: number): number {\n    if (level === 0) {\n        return 2;\n    } else {\n        let sizeY = 3;\n        const c = Math.min(4, level - 1);\n        for (let i = 0; i < c; ++i) {\n            sizeY += randomInRange(2);\n        }\n        return sizeY;\n    }\n}\n\nfunction makeSiheyuanRoomGrid(sizeX: number, sizeY: number): BooleanGrid {\n    const inside = new BooleanGrid(sizeX, sizeY, true);\n\n    const halfX = Math.floor((sizeX + 1) / 2);\n\n    const numCourtyardRoomsHalf = Math.floor((sizeY * halfX) / 4);\n    for (let i = numCourtyardRoomsHalf; i > 0; --i) {\n        const x = randomInRange(halfX);\n        const y = randomInRange(sizeY);\n        inside.set(x, y, false);\n    }\n\n    for (let y = 0; y < sizeY; ++y) {\n        for (let x = halfX; x < sizeX; ++x) {\n            inside.set(x, y, inside.get((sizeX - 1) - x, y));\n        }\n    }\n\n    return inside;\n}\n\nfunction offsetWalls(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid): [offsetX: Int32Grid, offsetY: Int32Grid]\n{\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const offsetX = new Int32Grid(roomsX + 1, roomsY, 0);\n    const offsetY = new Int32Grid(roomsX, roomsY + 1, 0);\n\n    let i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(0, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let y = 0; y < roomsY; ++y)\n        offsetX.set(roomsX, y, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, 0, i);\n\n    i = randomInRange(3) - 1;\n    for (let x = 0; x < roomsX; ++x)\n        offsetY.set(x, roomsY, i);\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            offsetX.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            offsetY.set(x, y, randomInRange(3) - 1);\n        }\n    }\n\n    for (let x = 1; x < roomsX; ++x) {\n        for (let y = 1; y < roomsY; ++y) {\n            if (randomInRange(2) === 0) {\n                offsetX.set(x, y, offsetX.get(x, y-1));\n            } else {\n                offsetY.set(x, y, offsetY.get(x-1, y));\n            }\n        }\n    }\n\n    if (mirrorX) {\n        if ((roomsX & 1) === 0) {\n            const xMid = Math.floor(roomsX / 2);\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(xMid, y, 0);\n            }\n        }\n\n        for (let x = 0; x < Math.floor((roomsX + 1) / 2); ++x) {\n            for (let y = 0; y < roomsY; ++y) {\n                offsetX.set(roomsX - x, y, 1 - offsetX.get(x, y));\n            }\n        }\n\n        for (let x = 0; x < Math.floor(roomsX / 2); ++x) {\n            for (let y = 0; y < roomsY + 1; ++y) {\n                offsetY.set((roomsX - 1) - x, y, offsetY.get(x, y));\n            }\n        }\n    }\n\n    if (mirrorY) {\n        if ((roomsY & 1) === 0) {\n            const yMid = roomsY / 2;\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, yMid, 0);\n            }\n        }\n\n        for (let y = 0; y < Math.floor((roomsY + 1) / 2); ++y) {\n            for (let x = 0; x < roomsX; ++x) {\n                offsetY.set(x, roomsY - y, 1 - offsetY.get(x, y));\n            }\n        }\n\n        for (let y = 0; y < Math.floor(roomsY / 2); ++y) {\n            for (let x = 0; x < roomsX + 1; ++x) {\n                offsetX.set(x, (roomsY - 1) - y, offsetX.get(x, y));\n            }\n        }\n    }\n\n    let roomOffsetX = Number.MIN_SAFE_INTEGER;\n    let roomOffsetY = Number.MIN_SAFE_INTEGER;\n\n    for (let y = 0; y < roomsY; ++y) {\n        roomOffsetX = Math.max(roomOffsetX, -offsetX.get(0, y));\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        roomOffsetY = Math.max(roomOffsetY, -offsetY.get(x, 0));\n    }\n\n    roomOffsetX += outerBorder;\n    roomOffsetY += outerBorder;\n\n    for (let x = 0; x < roomsX + 1; ++x) {\n        for (let y = 0; y < roomsY; ++y) {\n            const z = offsetX.get(x, y) + roomOffsetX + x * roomSizeX;\n            offsetX.set(x, y, z);\n        }\n    }\n\n    for (let x = 0; x < roomsX; ++x) {\n        for (let y = 0; y < roomsY + 1; ++y) {\n            offsetY.set(x, y, offsetY.get(x, y) + roomOffsetY + y * roomSizeY);\n        }\n    }\n\n    return [offsetX, offsetY];\n}\n\nfunction plotWalls(inside: BooleanGrid, offsetX: Int32Grid, offsetY: Int32Grid): CellGrid {\n    const cx = inside.sizeX;\n    const cy = inside.sizeY;\n\n    let mapSizeX = 0;\n    let mapSizeY = 0;\n\n    for (let y = 0; y < cy; ++y) {\n        mapSizeX = Math.max(mapSizeX, offsetX.get(cx, y));\n    }\n\n    for (let x = 0; x < cx; ++x) {\n        mapSizeY = Math.max(mapSizeY, offsetY.get(x, cy));\n    }\n\n    mapSizeX += outerBorder + 1;\n    mapSizeY += outerBorder + 1;\n\n    const map = new CellGrid(mapSizeX, mapSizeY);\n\n    // Super hacky: put down grass under all the rooms to plug holes.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry) + 1;\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1) + 1;\n\n            for (let x = x0; x < x1; ++x) {\n                for (let y = y0; y < y1; ++y) {\n                    const cell = map.at(x, y);\n                    cell.type = TerrainType.GroundGrass;\n                }\n            }\n        }\n    }\n\n    // Draw walls. Really this should be done in createExits, where the\n    //  walls are getting decorated with doors and windows.\n\n    for (let rx = 0; rx < cx; ++rx) {\n        for (let ry = 0; ry < cy; ++ry) {\n            const isInside = inside.get(rx, ry);\n\n            const x0 = offsetX.get(rx, ry);\n            const x1 = offsetX.get(rx + 1, ry);\n            const y0 = offsetY.get(rx, ry);\n            const y1 = offsetY.get(rx, ry + 1);\n\n            if (rx == 0 || isInside) {\n                plotNSWall(map, x0, y0, y1);\n            }\n            if (rx == cx - 1 || isInside) {\n                plotNSWall(map, x1, y0, y1);\n            }\n            if (ry == 0 || isInside) {\n                plotEWWall(map, x0, y0, x1);\n            }\n            if (ry == cy - 1 || isInside) {\n                plotEWWall(map, x0, y1, x1);\n            }\n        }\n    }\n\n    return map;\n}\n\nfunction plotNSWall(map: CellGrid, x0: number, y0: number, y1: number) {\n    for (let y = y0; y <= y1; ++y) {\n        map.at(x0, y).type = TerrainType.Wall0000;\n    }\n}\n\nfunction plotEWWall(map: CellGrid, x0: number, y0: number, x1: number) {\n    for (let x = x0; x <= x1; ++x) {\n        map.at(x, y0).type = TerrainType.Wall0000;\n    }\n}\n\nfunction createExits(\n    level: number,\n    mirrorX: boolean,\n    mirrorY: boolean,\n    inside: BooleanGrid,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    map: GameMap\n): [Array<Room>, Array<Adjacency>, vec2] {\n    // Make a set of rooms.\n\n    const roomsX = inside.sizeX;\n    const roomsY = inside.sizeY;\n\n    const roomIndex = new Int32Grid(roomsX, roomsY, 0);\n    const rooms: Array<Room> = [];\n\n    // This room represents the area surrounding the map.\n\n    rooms.push({\n        roomType: RoomType.Exterior,\n        group: 0,\n        depth: 0,\n        posMin: vec2.fromValues(0, 0), // not meaningful for this room\n        posMax: vec2.fromValues(0, 0), // not meaningful for this room\n        edges: [],\n    });\n\n    for (let rx = 0; rx < roomsX; ++rx) {\n        for (let ry = 0; ry < roomsY; ++ry) {\n            let group_index = rooms.length;\n\n            roomIndex.set(rx, ry, group_index);\n\n            rooms.push({\n                roomType: inside.get(rx, ry) ?  RoomType.PublicRoom : RoomType.PublicCourtyard,\n                group: group_index,\n                depth: 0,\n                posMin: vec2.fromValues(offsetX.get(rx, ry) + 1, offsetY.get(rx, ry) + 1),\n                posMax: vec2.fromValues(offsetX.get(rx + 1, ry), offsetY.get(rx, ry + 1)),\n                edges: [],\n            });\n        }\n    }\n\n    // Compute a list of room adjacencies.\n\n    const adjacencies = computeAdjacencies(mirrorX, mirrorY, offsetX, offsetY, roomIndex);\n    storeAdjacenciesInRooms(adjacencies, rooms);\n\n    // Connect rooms together.\n\n    let posStart = connectRooms(rooms, adjacencies);\n\n    // Assign types to the rooms.\n\n    assignRoomTypes(roomIndex, adjacencies, rooms);\n\n    // Generate pathing information.\n\n    generatePatrolRoutes(map, rooms, adjacencies);\n\n    // Render doors and windows.\n\n    renderWalls(rooms, adjacencies, map);\n\n    // Render floors.\n\n    renderRooms(level, rooms, map);\n\n    return [rooms, adjacencies, posStart];\n}\n\nfunction computeAdjacencies(\n    mirrorX: boolean,\n    mirrorY: boolean,\n    offsetX: Int32Grid,\n    offsetY: Int32Grid,\n    roomIndex: Int32Grid\n): Array<Adjacency> {\n\n    let roomsX = roomIndex.sizeX;\n    let roomsY = roomIndex.sizeY;\n\n    const adjacencies: Array<Adjacency> = [];\n\n    {\n        const adjacencyRows: Array<Array<number>> = [];\n\n        {\n            const adjacencyRow = [];\n\n            let ry = 0;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry);\n                let x1 = offsetX.get(rx+1, ry);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: roomIndex.get(rx, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let ry = 1; ry < roomsY; ++ry) {\n            const adjacencyRow = [];\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0_upper = offsetX.get(rx, ry);\n                let x0_lower = offsetX.get(rx, ry-1);\n                let x1_upper = offsetX.get(rx+1, ry);\n                let x1_lower = offsetX.get(rx+1, ry-1);\n                let x0 = Math.max(x0_lower, x0_upper);\n                let x1 = Math.min(x1_lower, x1_upper);\n                let y = offsetY.get(rx, ry);\n\n                if (rx > 0 && x0_lower - x0_upper > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0_upper + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x0_lower - (x0_upper + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx - 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (x1 - x0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x0 + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1 - (x0 + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (rx + 1 < roomsX && x1_upper - x1_lower > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x1_lower + 1, y),\n                        dir: vec2.fromValues(1, 0),\n                        length: x1_upper - (x1_lower + 1),\n                        room_left: roomIndex.get(rx, ry),\n                        room_right: roomIndex.get(rx + 1, ry - 1),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let ry = roomsY;\n\n            for (let rx = 0; rx < roomsX; ++rx) {\n                let x0 = offsetX.get(rx, ry-1);\n                let x1 = offsetX.get(rx+1, ry-1);\n                let y = offsetY.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x0 + 1, y),\n                    dir: vec2.fromValues(1, 0),\n                    length: x1 - (x0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry - 1),\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorX) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n\n                let i = 0;\n                let j = row.length - 1;\n                while (i < j) {\n                    let adj0 = row[i];\n                    let adj1 = row[j];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    // Flip edge a1 to point the opposite direction\n                    {\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n\n                    i += 1;\n                    j -= 1;\n                }\n            }\n        }\n\n        if (mirrorY) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                console.assert(row0.length == row1.length);\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    {\n        let adjacencyRows = [];\n\n        {\n            const adjacencyRow = [];\n\n            let rx = 0;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx, ry);\n                let y1 = offsetY.get(rx, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencyRow.push(i);\n\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: 0,\n                    room_right: roomIndex.get(rx, ry),\n                    next_matching: i,\n                    door: false,\n                });\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        for (let rx = 1; rx < roomsX; ++rx) {\n            const adjacencyRow = [];\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0_left  = offsetY.get(rx-1, ry);\n                let y0_right = offsetY.get(rx, ry);\n                let y1_left  = offsetY.get(rx-1, ry+1);\n                let y1_right = offsetY.get(rx, ry+1);\n                let y0 = Math.max(y0_left, y0_right);\n                let y1 = Math.min(y1_left, y1_right);\n                let x = offsetX.get(rx, ry);\n\n                if (ry > 0 && y0_left - y0_right > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0_right + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y0_left - (y0_right + 1),\n                        room_left: roomIndex.get(rx - 1, ry - 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (y1 - y0 > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y0 + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1 - (y0 + 1),\n                        room_left: roomIndex.get(rx - 1, ry),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n\n                if (ry + 1 < roomsY && y1_right - y1_left > 1) {\n                    let i = adjacencies.length;\n                    adjacencyRow.push(i);\n\n                    adjacencies.push({\n                        origin: vec2.fromValues(x, y1_left + 1),\n                        dir: vec2.fromValues(0, 1),\n                        length: y1_right - (y1_left + 1),\n                        room_left: roomIndex.get(rx - 1, ry + 1),\n                        room_right: roomIndex.get(rx, ry),\n                        next_matching: i,\n                        door: false,\n                    });\n                }\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        {\n            const adjacencyRow = [];\n\n            let rx = roomsX;\n\n            for (let ry = 0; ry < roomsY; ++ry) {\n                let y0 = offsetY.get(rx-1, ry);\n                let y1 = offsetY.get(rx-1, ry+1);\n                let x = offsetX.get(rx, ry);\n\n                let i = adjacencies.length;\n                adjacencies.push({\n                    origin: vec2.fromValues(x, y0 + 1),\n                    dir: vec2.fromValues(0, 1),\n                    length: y1 - (y0 + 1),\n                    room_left: roomIndex.get(rx - 1, ry),\n                    room_right: 0,\n                    next_matching: i,\n                    door: false,\n                });\n                adjacencyRow.push(i);\n            }\n\n            adjacencyRows.push(adjacencyRow);\n        }\n\n        if (mirrorY) {\n            for (let ry = 0; ry < adjacencyRows.length; ++ry) {\n                let row = adjacencyRows[ry];\n                let n = Math.floor(row.length / 2);\n\n                for (let i = 0; i < n; ++i) {\n                    let adj0 = row[i];\n                    let adj1 = row[(row.length - 1) - i];\n\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n\n                    {\n                        // Flip edge a1 to point the opposite direction\n                        let a1 = adjacencies[adj1];\n                        vec2.scaleAndAdd(a1.origin, a1.origin, a1.dir, a1.length - 1);\n                        vec2.negate(a1.dir, a1.dir);\n                        [a1.room_left, a1.room_right] = [a1.room_right, a1.room_left];\n                    }\n                }\n            }\n        }\n\n        if (mirrorX) {\n            let ry0 = 0;\n            let ry1 = adjacencyRows.length - 1;\n            while (ry0 < ry1) {\n                let row0 = adjacencyRows[ry0];\n                let row1 = adjacencyRows[ry1];\n\n                for (let i = 0; i < row0.length; ++i) {\n                    let adj0 = row0[i];\n                    let adj1 = row1[i];\n                    adjacencies[adj0].next_matching = adj1;\n                    adjacencies[adj1].next_matching = adj0;\n                }\n\n                ry0 += 1;\n                ry1 -= 1;\n            }\n        }\n    }\n\n    return adjacencies;\n}\n\nfunction storeAdjacenciesInRooms(adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        rooms[i0].edges.push(i);\n        rooms[i1].edges.push(i);\n    }\n}\n\nfunction connectRooms(rooms: Array<Room>, adjacencies: Array<Adjacency>): vec2 {\n\n    // Collect sets of edges that are mirrors of each other\n\n    let edgeSets = getEdgeSets(adjacencies);\n\n    // Connect all adjacent courtyard rooms together.\n\n    for (const adj of adjacencies) {\n        let i0 = adj.room_left;\n        let i1 = adj.room_right;\n        if (rooms[i0].roomType != RoomType.PublicCourtyard || rooms[i1].roomType != RoomType.PublicCourtyard) {\n            continue;\n        }\n\n        adj.door = true;\n        let group0 = rooms[i0].group;\n        let group1 = rooms[i1].group;\n        joinGroups(rooms, group0, group1);\n    }\n\n    // Connect all the interior rooms with doors.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            if (rooms[i0].roomType != RoomType.PublicRoom || rooms[i1].roomType != RoomType.PublicRoom) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create doors between the interiors and the courtyard areas.\n\n    for (const edgeSet of edgeSets) {\n\n        let addedDoor = false;\n\n        {\n            let adj = adjacencies[edgeSet[0]];\n\n            let i0 = adj.room_left;\n            let i1 = adj.room_right;\n\n            let room_type0 = rooms[i0].roomType;\n            let room_type1 = rooms[i1].roomType;\n\n            if (room_type0 == room_type1) {\n                continue;\n            }\n\n            if (room_type0 == RoomType.Exterior || room_type1 == RoomType.Exterior) {\n                continue;\n            }\n\n            let group0 = rooms[i0].group;\n            let group1 = rooms[i1].group;\n\n            if (group0 != group1 || Math.random() < 0.4) {\n                adj.door = true;\n                addedDoor = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n\n        if (addedDoor) {\n            for (let i = 1; i < edgeSet.length; ++i) {\n                let adj = adjacencies[edgeSet[i]];\n\n                let i0 = adj.room_left;\n                let i1 = adj.room_right;\n\n                let group0 = rooms[i0].group;\n                let group1 = rooms[i1].group;\n\n                adj.door = true;\n                joinGroups(rooms, group0, group1);\n            }\n        }\n    }\n\n    // Create the door to the surrounding exterior. It must be on the south side.\n\n    let posStart = vec2.fromValues(0, 0);\n\n    {\n        let i = frontDoorAdjacencyIndex(rooms, adjacencies, edgeSets);\n\n        // Set the player's start position based on where the door is.\n\n        posStart[0] = adjacencies[i].origin[0] + adjacencies[i].dir[0] * Math.floor(adjacencies[i].length / 2);\n        posStart[1] = outerBorder - 1;\n\n        adjacencies[i].door = true;\n\n        // Break symmetry if the door is off center.\n\n        let j = adjacencies[i].next_matching;\n        if (j != i) {\n            adjacencies[j].next_matching = j;\n            adjacencies[i].next_matching = i;\n        }\n    }\n\n    return posStart;\n}\n\nfunction getEdgeSets(adjacencies: Array<Adjacency>): Array<Array<number>> {\n    const edgeSets = [];\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj = adjacencies[i];\n        let j = adj.next_matching;\n        if (j >= i) {\n            if (j > i) {\n                edgeSets.push([i, j]);\n            } else {\n                edgeSets.push([i]);\n            }\n        }\n    }\n\n    shuffleArray(edgeSets);\n\n    return edgeSets;\n}\n\nfunction joinGroups(rooms: Array<Room>, groupFrom: number, groupTo: number) {\n    if (groupFrom != groupTo) {\n        for (const room of rooms) {\n            if (room.group == groupFrom) {\n                room.group = groupTo;\n            }\n        }\n    }\n}\n\nfunction frontDoorAdjacencyIndex(rooms: Array<Room>, adjacencies: Array<Adjacency>, edgeSets: Array<Array<number>>): number {\n    for (const edgeSet of edgeSets) {\n        for (const i of edgeSet) {\n            let adj = adjacencies[i];\n\n            if (adj.dir[0] == 0) {\n                continue;\n            }\n\n            if (adj.next_matching > i) {\n                continue;\n            }\n\n            if (adj.next_matching == i) {\n                if (rooms[adj.room_right].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            } else {\n                if (rooms[adj.room_left].roomType != RoomType.Exterior) {\n                    continue;\n                }\n            }\n\n            return i;\n        }\n    }\n\n    // Should always return above...\n\n    return 0;\n}\n\nfunction assignRoomTypes(roomIndex: Int32Grid, adjacencies: Array<Adjacency>, rooms: Array<Room>) {\n\n    // Assign rooms depth based on distance from the bottom row of rooms.\n\n    let unvisited = rooms.length;\n\n    rooms[0].depth = 0;\n\n    for (let i = 1; i < rooms.length; ++i) {\n        rooms[i].depth = unvisited;\n    }\n\n    const roomsToVisit: Array<number> = [];\n\n    for (let x = 0; x < roomIndex.sizeX; ++x) {\n        let iRoom = roomIndex.get(x, 0);\n        rooms[iRoom].depth = 1;\n        roomsToVisit.push(iRoom);\n    }\n\n    // Visit rooms in breadth-first order, assigning them distances from the seed rooms.\n\n    let iiRoom = 0;\n    while (iiRoom < roomsToVisit.length) {\n        let iRoom = roomsToVisit[iiRoom];\n\n        for (const iAdj of rooms[iRoom].edges) {\n            let adj = adjacencies[iAdj];\n\n            if (!adj.door) {\n                continue;\n            }\n\n            const iRoomNeighbor = (adj.room_left == iRoom) ? adj.room_right : adj.room_left;\n\n            if (rooms[iRoomNeighbor].depth == unvisited) {\n                rooms[iRoomNeighbor].depth = rooms[iRoom].depth + 1;\n                roomsToVisit.push(iRoomNeighbor);\n            }\n        }\n\n        iiRoom += 1;\n    }\n\n    // Assign master-suite room type to the inner rooms.\n\n    let maxDepth = 0;\n    for (const room of rooms) {\n        maxDepth = Math.max(maxDepth, room.depth);\n    }\n\n    const targetNumMasterRooms = Math.floor((roomIndex.sizeX * roomIndex.sizeY) / 4);\n\n    let numMasterRooms = 0;\n\n    let depth = maxDepth;\n    while (depth > 0) {\n        for (const room of rooms) {\n            if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            if (room.depth != depth) {\n                continue;\n            }\n\n            room.roomType = (room.roomType == RoomType.PublicRoom) ? RoomType.PrivateRoom : RoomType.PrivateCourtyard;\n            if (room.roomType == RoomType.PrivateRoom) {\n                numMasterRooms += 1;\n            }\n        }\n\n        if (numMasterRooms >= targetNumMasterRooms) {\n            break;\n        }\n\n        depth -= 1;\n    }\n\n    // Change any public courtyards that are adjacent to private courtyards into private courtyards\n\n    while (true) {\n        let changed = false;\n\n        for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n            if (rooms[iRoom].roomType != RoomType.PublicCourtyard) {\n                continue;\n            }\n\n            for (const iAdj of rooms[iRoom].edges) {\n                const adj = adjacencies[iAdj];\n\n                let iRoomOther = (adj.room_left != iRoom) ? adj.room_left : adj.room_right;\n\n                if (rooms[iRoomOther].roomType == RoomType.PrivateCourtyard) {\n                    rooms[iRoom].roomType = RoomType.PrivateCourtyard;\n                    changed = true;\n                    break;\n                }\n            }\n        }\n\n        if (!changed) {\n            break;\n        }\n    }\n}\n\nfunction generatePatrolRoutes(map: GameMap, rooms: Array<Room>, adjacencies: Array<Adjacency>) {\n    const includeRoom = Array(rooms.length).fill(true);\n\n    // Exclude exterior rooms.\n\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        if (rooms[iRoom].roomType == RoomType.Exterior) {\n            includeRoom[iRoom] = false;\n        }\n    }\n\n    // Trim dead ends out repeatedly until no more can be trimmed.\n\n    while (true) {\n        let trimmed = false;\n\n        for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n            if (!includeRoom[iRoom]) {\n                continue;\n            }\n\n            const room = rooms[iRoom];\n\n            let numExits = 0;\n            for (const iAdj of room.edges) {\n                const adj = adjacencies[iAdj];\n\n                if (!adj.door) {\n                    continue;\n                }\n\n                let iRoomOther = (adj.room_left != iRoom) ? adj.room_left : adj.room_right;\n\n                if (includeRoom[iRoomOther]) {\n                    numExits += 1;\n                }\n            }\n\n            if (numExits < 2) {\n                includeRoom[iRoom] = false;\n                trimmed = true;\n            }\n        }\n\n        if (!trimmed) {\n            break;\n        }\n    }\n\n    // Generate patrol regions for included rooms.\n\n    const roomPatrolRegion = Array(rooms.length).fill(invalidRegion);\n\n    for (let iRoom = 0; iRoom < rooms.length; ++iRoom) {\n        if (includeRoom[iRoom]) {\n            roomPatrolRegion[iRoom] = addPatrolRegion(map, rooms[iRoom].posMin, rooms[iRoom].posMax);\n        }\n    }\n\n    // Add connections between included rooms.\n\n    for (const adj of adjacencies) {\n        if (!adj.door) {\n            continue;\n        }\n\n        let region0 = roomPatrolRegion[adj.room_left];\n        let region1 = roomPatrolRegion[adj.room_right];\n\n        if (region0 === invalidRegion || region1 === invalidRegion) {\n            continue;\n        }\n\n        addPatrolRoute(map, region0, region1);\n    }\n}\n\nfunction addPatrolRegion(map: GameMap, posMin: vec2, posMax: vec2): number {\n    let iPatrolRegion = map.patrolRegions.length;\n\n    map.patrolRegions.push({ posMin, posMax });\n\n    // Plot the region into the map.\n\n    for (let x = posMin[0]; x < posMax[0]; ++x) {\n        for (let y = posMin[1]; y < posMax[1]; ++y) {\n            map.cells.at(x, y).region = iPatrolRegion;\n        }\n    }\n\n    return iPatrolRegion;\n}\n\nfunction addPatrolRoute(map: GameMap, region0: number, region1: number) {\n    console.assert(region0 < map.patrolRegions.length);\n    console.assert(region1 < map.patrolRegions.length);\n    map.patrolRoutes.push([region0, region1]);\n}\n\nconst oneWayWindowTerrainType: Array<TerrainType> = [\n    TerrainType.OneWayWindowS,\n    TerrainType.OneWayWindowE,\n    TerrainType.OneWayWindowN,\n    TerrainType.OneWayWindowW,\n];\n\nfunction oneWayWindowTerrainTypeFromDir(dir: vec2): number {\n    return oneWayWindowTerrainType[dir[0] + 2 * Math.max(0, dir[1]) + 1];\n}\n\nfunction renderWalls(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Render grass connecting courtyard rooms.\n\n    for (const adj of adjacencies) {\n        const type0 = rooms[adj.room_left].roomType;\n        const type1 = rooms[adj.room_right].roomType;\n\n        if (!isCourtyardRoomType(type0) || !isCourtyardRoomType(type1)) {\n            continue;\n        }\n\n        for (let j = 0; j < adj.length; ++j) {\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, adj.origin, adj.dir, j);\n            map.cells.at(p[0], p[1]).type = TerrainType.GroundGrass;\n        }\n    }\n\n    // Render doors and windows for the rest of the walls.\n\n    for (let i = 0; i < adjacencies.length; ++i) {\n        const adj0 = adjacencies[i];\n\n        const type0 = rooms[adj0.room_left].roomType;\n        const type1 = rooms[adj0.room_right].roomType;\n\n        if (isCourtyardRoomType(type0) && isCourtyardRoomType(type1)) {\n            continue;\n        }\n\n        const j = adj0.next_matching;\n\n        if (j < i) {\n            continue;\n        }\n\n        let offset;\n        if (j == i) {\n            offset = Math.floor(adj0.length / 2);\n        } else if (adj0.length > 2) {\n            offset = 1 + randomInRange(adj0.length - 2);\n        } else {\n            offset = randomInRange(adj0.length);\n        }\n\n        let walls = [];\n        walls.push(adj0);\n\n        if (j != i) {\n            walls.push(adjacencies[j]);\n        }\n\n        if (!adj0.door && type0 != type1) {\n            if (type0 == RoomType.Exterior || type1 == RoomType.Exterior) {\n                if ((adj0.length & 1) != 0) {\n                    let k = Math.floor(adj0.length / 2);\n\n                    for (const a of walls) {\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n\n                        let dir = vec2.clone(a.dir);\n                        if (rooms[a.room_right].roomType == RoomType.Exterior) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        map.cells.at(p[0], p[1]).type = oneWayWindowTerrainTypeFromDir(dir);\n                    }\n                }\n            } else if (isCourtyardRoomType(type0) || isCourtyardRoomType(type1)) {\n                let k = randomInRange(2);\n                const k_end = Math.floor((adj0.length + 1) / 2);\n\n                while (k < k_end) {\n                    for (const a of walls) {\n                        let dir = vec2.clone(a.dir);\n                        if (isCourtyardRoomType(rooms[a.room_right].roomType)) {\n                            vec2.negate(dir, dir);\n                        }\n\n                        let windowType = oneWayWindowTerrainTypeFromDir(dir);\n\n                        const p = vec2.create();\n                        vec2.scaleAndAdd(p, a.origin, a.dir, k);\n                        const q = vec2.create();\n                        vec2.scaleAndAdd(q, a.origin, a.dir, a.length - (k + 1));\n\n                        map.cells.at(p[0], p[1]).type = windowType;\n                        map.cells.at(q[0], q[1]).type = windowType;\n                    }\n                    k += 2;\n                }\n            }\n        }\n\n        let installMasterSuiteDoor = Math.random() < 0.3333;\n\n        for (const a of walls) {\n            if (!a.door) {\n                continue;\n            }\n\n            const p = vec2.create();\n            vec2.scaleAndAdd(p, a.origin, a.dir, offset);\n\n            let orientNS = (a.dir[0] == 0);\n\n            map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n\n            let roomTypeLeft = rooms[a.room_left].roomType;\n            let roomTypeRight = rooms[a.room_right].roomType;\n\n            if (roomTypeLeft == RoomType.Exterior || roomTypeRight == RoomType.Exterior) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.PortcullisNS : TerrainType.PortcullisEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.PortcullisNS : ItemType.PortcullisEW);\n            } else if (roomTypeLeft != RoomType.PrivateRoom || roomTypeRight != RoomType.PrivateRoom || installMasterSuiteDoor) {\n                map.cells.at(p[0], p[1]).type = orientNS ? TerrainType.DoorNS : TerrainType.DoorEW;\n                placeItem(map, p[0], p[1], orientNS ? ItemType.DoorNS : ItemType.DoorEW);\n            }\n        }\n    }\n}\n\nfunction renderRooms(level: number, rooms: Array<Room>, map: GameMap) {\n    for (let iRoom = 1; iRoom < rooms.length; ++iRoom) {\n        const room = rooms[iRoom];\n\n        let cellType;\n        switch (room.roomType) {\n        case RoomType.Exterior: cellType = TerrainType.GroundNormal; break;\n        case RoomType.PublicCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PublicRoom: cellType = TerrainType.GroundWood; break;\n        case RoomType.PrivateCourtyard: cellType = TerrainType.GroundGrass; break;\n        case RoomType.PrivateRoom: cellType = TerrainType.GroundMarble; break;\n        }\n\n        for (let x = room.posMin[0]; x < room.posMax[0]; ++x) {\n            for (let y = room.posMin[1]; y < room.posMax[1]; ++y) {\n                if (cellType == TerrainType.GroundWood && level > 3 && Math.random() < 0.02) {\n                    map.cells.at(x, y).type = TerrainType.GroundWoodCreaky;\n                } else {\n                    map.cells.at(x, y).type = cellType;\n                }\n            }\n        }\n\n        let dx = room.posMax[0] - room.posMin[0];\n        let dy = room.posMax[1] - room.posMin[1];\n\n        if (isCourtyardRoomType(room.roomType)) {\n            if (dx >= 5 && dy >= 5) {\n                for (let x = room.posMin[0] + 1; x < room.posMax[0] - 1; ++x) {\n                    for (let y = room.posMin[1] + 1; y < room.posMax[1] - 1; ++y) {\n                        map.cells.at(x, y).type = TerrainType.GroundWater;\n                    }\n                }\n            } else if (dx >= 2 && dy >= 2) {\n                const itemTypes = [ItemType.TorchLit, ItemType.Bush, ItemType.Bush, ItemType.Bush, ItemType.Bush];\n                shuffleArray(itemTypes);\n                const itemPositions = [\n                    [room.posMin[0], room.posMin[1]],\n                    [room.posMax[0] - 1, room.posMin[1]],\n                    [room.posMin[0], room.posMax[1] - 1],\n                    [room.posMax[0] - 1, room.posMax[1] - 1],\n                ];\n                for (let i = 0; i < itemPositions.length; ++i) {\n                    const [x, y] = itemPositions[i];\n                    if (map.cells.at(x, y).type != TerrainType.GroundGrass) {\n                        continue;\n                    }\n                \n                    tryPlaceItem(map, x, y, itemTypes[i]);\n                }\n            }\n        } else if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            if (dx >= 5 && dy >= 5) {\n                if (room.roomType == RoomType.PrivateRoom) {\n                    for (let x = 2; x < dx-2; ++x) {\n                        for (let y = 2; y < dy-2; ++y) {\n                            map.cells.at(room.posMin[0] + x, room.posMin[1] + y).type = TerrainType.GroundWater;\n                        }\n                    }\n                }\n\n                map.cells.at(room.posMin[0] + 1, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMin[1] + 1).type = TerrainType.Wall0000;\n                map.cells.at(room.posMin[0] + 1, room.posMax[1] - 2).type = TerrainType.Wall0000;\n                map.cells.at(room.posMax[0] - 2, room.posMax[1] - 2).type = TerrainType.Wall0000;\n            } else if (dx == 5 && dy >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                const itemTypes = new Array(dy - 2).fill(ItemType.Table);\n                itemTypes.push((Math.random() < 0.25) ? ItemType.TorchUnlit : ItemType.TorchLit);\n                shuffleArray(itemTypes);\n                for (let y = 1; y < dy-1; ++y) {\n                    placeItem(map, room.posMin[0] + 1, room.posMin[1] + y, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + 2, room.posMin[1] + y, itemTypes[y - 1]);\n                    placeItem(map, room.posMin[0] + 3, room.posMin[1] + y, ItemType.Chair);\n                }\n            } else if (dy == 5 && dx >= 3 && (room.roomType == RoomType.PublicRoom || Math.random() < 0.33333)) {\n                const itemTypes = new Array(dx - 2).fill(ItemType.Table);\n                itemTypes.push((Math.random() < 0.25) ? ItemType.TorchUnlit : ItemType.TorchLit);\n                shuffleArray(itemTypes);\n                for (let x = 1; x < dx-1; ++x) {\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 1, ItemType.Chair);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 2, itemTypes[x - 1]);\n                    placeItem(map, room.posMin[0] + x, room.posMin[1] + 3, ItemType.Chair);\n                }\n            } else if (dx > dy && (dy & 1) == 1 && Math.random() < 0.66667) {\n                let y = Math.floor(room.posMin[1] + dy / 2);\n                const furnitureType = (room.roomType == RoomType.PublicRoom) ? ItemType.Table : ItemType.Chair;\n                const torchType = (Math.random() < 0.25) ? ItemType.TorchUnlit : ItemType.TorchLit;\n                const itemTypes = [torchType, furnitureType];\n                shuffleArray(itemTypes);\n                tryPlaceItem(map, room.posMin[0] + 1, y, itemTypes[0]);\n                tryPlaceItem(map, room.posMax[0] - 2, y, itemTypes[1]);\n            } else if (dy > dx && (dx & 1) == 1 && Math.random() < 0.66667) {\n                let x = Math.floor(room.posMin[0] + dx / 2);\n                const furnitureType = (room.roomType == RoomType.PublicRoom) ? ItemType.Table : ItemType.Chair;\n                const torchType = (Math.random() < 0.25) ? ItemType.TorchUnlit : ItemType.TorchLit;\n                const itemTypes = [torchType, furnitureType];\n                shuffleArray(itemTypes);\n                tryPlaceItem(map, x, room.posMin[1] + 1, itemTypes[0]);\n                tryPlaceItem(map, x, room.posMax[1] - 2, itemTypes[1]);\n            } else if (dx > 3 && dy > 3) {\n                const furnitureType = (room.roomType == RoomType.PublicRoom) ? ItemType.Table : ItemType.Chair;\n                const torchType = (Math.random() < 0.25) ? ItemType.TorchUnlit : ItemType.TorchLit;\n                const itemTypes = [torchType, furnitureType, furnitureType, furnitureType];\n                shuffleArray(itemTypes);\n                tryPlaceItem(map, room.posMin[0], room.posMin[1], itemTypes[0]);\n                tryPlaceItem(map, room.posMax[0] - 1, room.posMin[1], itemTypes[1]);\n                tryPlaceItem(map, room.posMin[0], room.posMax[1] - 1, itemTypes[2]);\n                tryPlaceItem(map, room.posMax[0] - 1, room.posMax[1] - 1, itemTypes[3]);\n            }\n        }\n    }\n}\n\nfunction tryPlaceItem(map: GameMap, x: number, y: number, itemType: ItemType) {\n    if (doorAdjacent(map.cells, x, y)) {\n        return;\n    }\n\n    placeItem(map, x, y, itemType);\n}\n\nfunction doorAdjacent(map: CellGrid, x: number, y: number): boolean {\n    if (map.at(x - 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x + 1, y).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y - 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    if (map.at(x, y + 1).type >= TerrainType.PortcullisNS) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction placeItem(map: GameMap, x: number, y: number, type: ItemType) {\n    map.items.push({\n        pos: vec2.fromValues(x, y),\n        type: type,\n    });\n}\n\nfunction placeLoot(rooms: Array<Room>, adjacencies: Array<Adjacency>, map: GameMap) {\n\n    // Count number of internal rooms.\n\n    let numRooms = 0;\n    for (const room of rooms) {\n        if (room.roomType == RoomType.PublicRoom || room.roomType == RoomType.PrivateRoom) {\n            numRooms += 1;\n        }\n    }\n\n    // Master-suite rooms get loot.\n\n    for (const room of rooms)  {\n        if (room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        if (Math.random() < 0.2) {\n            continue;\n        }\n\n        tryPlaceLoot(room.posMin, room.posMax, map);\n    }\n\n    // Dead-end rooms automatically get loot.\n\n    for (const room of rooms) {\n        if (room.roomType != RoomType.PublicRoom && room.roomType != RoomType.PrivateRoom) {\n            continue;\n        }\n\n        let numExits = 0;\n        for (const iAdj of room.edges) {\n            if (adjacencies[iAdj].door) {\n                numExits += 1;\n            }\n        }\n\n        if (numExits < 2) {\n            tryPlaceLoot(room.posMin, room.posMax, map);\n        }\n    }\n\n    // Place a bit of extra loot.\n\n    let posMin = vec2.fromValues(0, 0);\n    let posMax = vec2.fromValues(map.cells.sizeX, map.cells.sizeY);\n    for (let i = Math.floor(numRooms / 4 + randomInRange(4)); i > 0; --i) {\n        tryPlaceLoot(posMin, posMax, map);\n    }\n}\n\nfunction tryPlaceLoot(posMin: vec2, posMax: vec2, map: GameMap)\n{\n    let dx = posMax[0] - posMin[0];\n    let dy = posMax[1] - posMin[1];\n\n    for (let i = 1000; i > 0; --i) {\n        let pos = vec2.fromValues(posMin[0] + randomInRange(dx), posMin[1] + randomInRange(dy));\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        placeItem(map, pos[0], pos[1], ItemType.Coin);\n        break;\n    }\n}\n\nfunction placeExteriorBushes(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = sy - outerBorder + 1; y < sy; ++y) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if ((x & 1) == 0 && Math.random() < 0.8) {\n            placeItem(map, x, sy - 1, ItemType.Bush);\n        }\n    }\n\n    for (let y = outerBorder; y < sy - outerBorder + 1; ++y) {\n        for (let x = 0; x < outerBorder-1; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        for (let x = (sx - outerBorder + 1); x < sx; ++x) {\n            if (map.cells.at(x, y).type != TerrainType.GroundNormal) {\n                continue;\n            }\n\n            let cell = map.cells.at(x, y);\n            cell.type = TerrainType.GroundGrass;\n            cell.seen = true;\n        }\n\n        if (((sy - y) & 1) != 0) {\n            if (Math.random() < 0.8) {\n                placeItem(map, 0, y, ItemType.Bush);\n            }\n            if (Math.random() < 0.8) {\n                placeItem(map, sx - 1, y, ItemType.Bush);\n            }\n        }\n    }\n}\n\nfunction placeFrontPillars(map: GameMap) {\n    let sx = map.cells.sizeX - 1;\n    let cx = Math.floor(map.cells.sizeX / 2);\n\n    for (let x = outerBorder; x < cx; x += 5) {\n        map.cells.at(x, 1).type = TerrainType.Wall0000;\n        map.cells.at(sx - x, 1).type = TerrainType.Wall0000;\n    }\n}\n\nfunction isItemAtPos(map: GameMap, x: number, y: number): boolean {\n    for (const item of map.items) {\n        if (item.pos[0] == x && item.pos[1] == y) {\n            return true;\n        }\n    }\n    for (const guard of map.guards) {\n        if (guard.pos[0] == x && guard.pos[1] == y) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction isCourtyardRoomType(roomType: RoomType): boolean {\n    switch (roomType) {\n    case RoomType.Exterior: return false;\n    case RoomType.PublicCourtyard: return true;\n    case RoomType.PublicRoom: return false;\n    case RoomType.PrivateCourtyard: return true;\n    case RoomType.PrivateRoom: return false;\n    }\n}\n\nfunction placeGuards(level: number, rooms: Array<Room>, map: GameMap) {\n    if (level <= 0) {\n        return;\n    }\n\n    if (map.patrolRegions.length === 0) {\n        return;\n    }\n\n    // Count number of internal rooms.\n\n    let numRooms = 0;\n    for (const room of rooms) {\n        if (room.roomType != RoomType.Exterior) {\n            numRooms += 1;\n        }\n    }\n\n    // Generate guards\n\n    let numGuards = (level == 1) ? 1 : Math.max(2, Math.floor((numRooms * Math.min(level + 18, 40)) / 100));\n\n    while (numGuards > 0) {\n        const pos = generateInitialGuardPos(map);\n        if (pos === undefined) {\n            break;\n        }\n        map.guards.push(new Guard(pos, map));\n        numGuards -= 1;\n    }\n}\n\nfunction generateInitialGuardPos(map: GameMap): vec2 | undefined {\n    let sizeX = map.cells.sizeX;\n    let sizeY = map.cells.sizeY;\n    for (let i = 0; i < 1000; ++i) {\n        let pos = vec2.fromValues(randomInRange(sizeX), randomInRange(sizeY));\n\n        if (vec2.squaredDistance(map.playerStartPos, pos) < 64) {\n            continue;\n        }\n\n        let cellType = map.cells.at(pos[0], pos[1]).type;\n\n        if (cellType != TerrainType.GroundWood && cellType != TerrainType.GroundMarble) {\n            continue;\n        }\n\n        if (isItemAtPos(map, pos[0], pos[1])) {\n            continue;\n        }\n\n        return pos;\n    }\n\n    return undefined;\n}\n\nfunction markExteriorAsSeen(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            if (map.cells.at(x, y).type == TerrainType.GroundNormal ||\n                (x > 0 && map.cells.at(x-1, y).type == TerrainType.GroundNormal) ||\n                (x > 0 && y > 0 && map.cells.at(x-1, y-1).type == TerrainType.GroundNormal) ||\n                (x > 0 && y+1 < sy && map.cells.at(x-1, y+1).type == TerrainType.GroundNormal) ||\n                (y > 0 && map.cells.at(x, y-1).type == TerrainType.GroundNormal) ||\n                (y+1 < sy && map.cells.at(x, y+1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && map.cells.at(x+1, y).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y > 0 && map.cells.at(x+1, y-1).type == TerrainType.GroundNormal) ||\n                (x+1 < sx && y+1 < sy && map.cells.at(x+1, y+1).type == TerrainType.GroundNormal)) {\n                map.cells.at(x, y).seen = true;\n            }\n        }\n    }\n}\n\nfunction cacheCellInfo(map: GameMap) {\n    let sx = map.cells.sizeX;\n    let sy = map.cells.sizeY;\n\n    for (let x = 0; x < sx; ++x) {\n        for (let y = 0; y < sy; ++y) {\n            const cell = map.cells.at(x, y);\n            const cellType = cell.type;\n            const isWall = cellType >= TerrainType.Wall0000 && cellType <= TerrainType.Wall1111;\n            const isWindow = cellType >= TerrainType.OneWayWindowE && cellType <= TerrainType.OneWayWindowS;\n            const isWater = cellType == TerrainType.GroundWater;\n            cell.moveCost = (isWall || isWindow) ? Infinity : isWater ? 4096 : 0;\n            cell.blocksPlayerMove = isWall;\n            cell.blocksPlayerSight = isWall;\n            cell.blocksSight = isWall || isWindow;\n            cell.blocksSound = isWall;\n            cell.hidesPlayer = false;\n        }\n    }\n\n    for (const item of map.items) {\n        let cell = map.cells.at(item.pos[0], item.pos[1]);\n        let itemType = item.type;\n        cell.moveCost = Math.max(cell.moveCost, guardMoveCostForItemType(itemType));\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW) {\n            cell.blocksPlayerSight = true;\n        }\n        if (itemType == ItemType.DoorNS || itemType == ItemType.DoorEW || itemType == ItemType.PortcullisNS || itemType == ItemType.PortcullisEW || itemType == ItemType.Bush) {\n            cell.blocksSight = true;\n        }\n        if (itemType == ItemType.Table || itemType == ItemType.Bush) {\n            cell.hidesPlayer = true;\n        }\n    }\n}\n\nfunction fixupWalls(map: CellGrid) {\n    for (let x = 0; x < map.sizeX; ++x) {\n        for (let y = 0; y < map.sizeY; ++y) {\n            const terrainType = map.at(x, y).type;\n            if (terrainType == TerrainType.Wall0000) {\n                map.at(x, y).type = wallTypeFromNeighbors(neighboringWalls(map, x, y));\n            }\n        }\n    }\n}\n\nfunction wallTypeFromNeighbors(neighbors: number): TerrainType {\n    return TerrainType.Wall0000 + neighbors;\n}\n\nfunction isWall(terrainType: TerrainType): boolean {\n    return terrainType >= TerrainType.Wall0000;\n}\n\nfunction neighboringWalls(map: CellGrid, x: number, y: number): number {\n    const sizeX = map.sizeX;\n    const sizeY = map.sizeY;\n    let wallBits = 0;\n\n    if (y < sizeY-1 && isWall(map.at(x, y+1).type)) {\n        wallBits |= 8;\n    }\n    if (y > 0 && isWall(map.at(x, y-1).type)) {\n        wallBits |= 4;\n    }\n    if (x < sizeX-1 && isWall(map.at(x+1, y).type)) {\n        wallBits |= 2;\n    }\n    if (x > 0 && isWall(map.at(x-1, y).type)) {\n        wallBits |= 1;\n    }\n\n    return wallBits\n}\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"757gI\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fI7s2\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"64MsM\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fe6XQ\")).toString();","import {Howl} from 'howler';\n\nvar footstepWood = require('url:./sounds/footstep-wood.ogg');\nvar footstepTile = require('url:./sounds/footstep-tile.ogg');\nvar footstepWater = require('url:./sounds/footstep-water.ogg');\nvar footstepGravel = require('url:./sounds/footstep-gravel.ogg');\nvar footstepGrass = require('url:./sounds/footstep-grass.ogg');\n\nexport type Howls = { [id:string]: Howl };\n\nexport function setupSounds(sounds:Howls) {\n    sounds.footstepWood = new Howl({src: [footstepWood]})\n    sounds.footstepTile = new Howl({src: [footstepTile]})\n    sounds.footstepWater = new Howl({src: [footstepWater]})\n    sounds.footstepGravel = new Howl({src: [footstepGravel]})\n    sounds.footstepGrass = new Howl({src: [footstepGrass]})\n}\n","export { Renderer, GlyphRenderer, createRenderer };\n\nimport { FontTileSetInfo, TileSetInfo, TileInfo} from './tilesets';\nimport { vec2, mat4 } from './my-matrix';\n\nfunction createRenderer(name:string='webgl', canvas:HTMLCanvasElement, fontTileSetInfo:FontTileSetInfo, tileSetInfo:TileSetInfo):Renderer {\n    if(name==='webgl') {\n        const ctx = canvas.getContext(\"webgl2\", { alpha: false, depth: false }) as WebGL2RenderingContext;\n        return new WebGLRenderer(ctx, fontTileSetInfo, tileSetInfo); \n    } \n    if(name==='canvas') {\n        const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        return new CanvasRenderer(ctx, fontTileSetInfo, tileSetInfo); \n    } \n    if(name==='null') {\n        return new Renderer(); \n    } \n    throw new Error(`Invalid renderer ${name}`)    \n}\n\nclass GlyphRenderer {\n    start(matScreenFromWorld: mat4, textureIndex: number):void {}\n    addGlyph(x0: number, y0: number, x1: number, y1: number, tileInfo: TileInfo):void {}\n    flush():void {}\n}\n\nclass Renderer {\n    name: string = 'null';\n    renderGlyphs: GlyphRenderer;\n    fontTileSet: FontTileSetInfo;\n    tileSet: TileSetInfo;\n    constructor() {\n        this.renderGlyphs = new GlyphRenderer();\n        this.fontTileSet = {name:'null',imageSrc:'',image:new Image(),letterMap:[],tileSize:[0,0],offset:[0,0]};\n        this.tileSet = {name:'null',imageSrc:'',image:new Image(), flattenTexture:true, tileSize:[0,0], cellSize:[0,0],offset:[0,0],\n            terrainTiles:[],itemTiles:[],npcTiles:[],unlitTile:{textureIndex:0,color:null},playerTiles:[],unlitTerrainTiles:[], unlitItemTiles:[]};\n    }\n    beginFrame(cameraPos:vec2, mapSize:vec2, screenSize:vec2, mat:mat4) {\n    };\n    endFrame() {}\n} \n\n// #####################\n// Web-GL Renderer\n// #####################\n\nclass WebGLRenderer extends Renderer {\n    gl: WebGL2RenderingContext;\n    fontTileSet: FontTileSetInfo;\n    tileSet: TileSetInfo;\n    constructor(gl: WebGL2RenderingContext, fontTileSet:FontTileSetInfo, tileSet: TileSetInfo) {\n        super();\n        this.gl = gl;\n        this.fontTileSet = fontTileSet;\n        this.tileSet = tileSet;\n        const fTexture = createTextureFromImage(gl, tileSet.image);\n        const texture = createTextureFromImage(gl, fontTileSet.image);\n    \n        this.name = 'webgl';\n        this.renderGlyphs = new WebGLGlyphRenderer(gl, [texture, fTexture]),\n    \n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.clearColor(0, 0, 0, 1);\n    }\n    beginFrame(cameraPos:vec2, mapSize:vec2, screenSize:vec2, mat:mat4) {\n        const gl = this.gl;\n        const canvas = gl.canvas as HTMLCanvasElement;\n\n        resizeCanvasToDisplaySize(canvas); //TODO: Put this in a listener for window size changes\n\n        const screenX = canvas.clientWidth;\n        const screenY = canvas.clientHeight;\n    \n        gl.viewport(0, 0, screenX, screenY);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        vec2.set(screenSize, screenX, screenY);\n\n        this.setupViewMatrix(cameraPos, screenSize, mat);\n    }\n    endFrame() {}\n    setupViewMatrix(cameraPos:vec2, screenSize: vec2, matScreenFromWorld: mat4) {\n        const cxGame = cameraPos[0];\n        const cyGame = cameraPos[1];\n        const rGame = 18;\n        let rxGame: number, ryGame: number;\n        if (screenSize[0] < screenSize[1]) {\n            rxGame = rGame;\n            ryGame = rGame * screenSize[1] / screenSize[0];\n        } else {\n            ryGame = rGame;\n            rxGame = rGame * screenSize[0] / screenSize[1];\n        }\n    \n        mat4.ortho(matScreenFromWorld, cxGame - rxGame, cxGame + rxGame, cyGame - ryGame, cyGame + ryGame, 1, -1);\n    }\n}\n\nclass WebGLGlyphRenderer extends GlyphRenderer {\n    constructor(gl: WebGL2RenderingContext, textures: Array<WebGLTexture>) {\n        super();\n            const vsSource = `#version 300 es\n            in vec2 vPosition;\n            in vec3 vTexcoord;\n            in vec4 vColor;\n\n            uniform mat4 uMatScreenFromWorld;\n\n            out highp vec3 fTexcoord;\n            out highp vec4 fColor;\n\n            void main() {\n                fTexcoord = vTexcoord;\n                fColor = vColor;\n                gl_Position = uMatScreenFromWorld * vec4(vPosition, 0, 1);\n            }\n        `;\n\n        const fsSource = `#version 300 es\n            in highp vec3 fTexcoord;\n            in highp vec4 fColor;\n\n            uniform highp sampler2DArray uOpacity;\n\n            out lowp vec4 fragColor;\n\n            void main() {\n                fragColor = fColor * texture(uOpacity, fTexcoord);\n            }\n        `;\n\n        const attribs = {\n            vPosition: 0,\n            vTexcoord: 1,\n            vColor: 2,\n        };\n\n        const program = initShaderProgram(gl, vsSource, fsSource, attribs);\n\n        const uProjectionMatrixLoc = gl.getUniformLocation(program, 'uMatScreenFromWorld');\n        const uOpacityLoc = gl.getUniformLocation(program, 'uOpacity');\n\n        const maxQuads = 64;\n        const numVertices = 4 * maxQuads;\n        const bytesPerVertex = 2 * Float32Array.BYTES_PER_ELEMENT + 2 * Uint32Array.BYTES_PER_ELEMENT;\n        const wordsPerQuad = bytesPerVertex; // divide by four bytes per word, but also multiply by four vertices per quad\n\n        const vertexData = new ArrayBuffer(numVertices * bytesPerVertex);\n        const vertexDataAsFloat32 = new Float32Array(vertexData);\n        const vertexDataAsUint32 = new Uint32Array(vertexData);\n\n        const vertexBuffer = gl.createBuffer();\n\n        let numQuads = 0;\n\n        const matScreenFromWorldCached = mat4.create();\n\n        const vao = gl.createVertexArray();\n        gl.bindVertexArray(vao);\n        gl.enableVertexAttribArray(attribs.vPosition);\n        gl.enableVertexAttribArray(attribs.vTexcoord);\n        gl.enableVertexAttribArray(attribs.vColor);\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        gl.vertexAttribPointer(attribs.vPosition, 2, gl.FLOAT, false, bytesPerVertex, 0);\n        gl.vertexAttribPointer(attribs.vTexcoord, 3, gl.UNSIGNED_BYTE, false, bytesPerVertex, 8);\n        gl.vertexAttribPointer(attribs.vColor, 4, gl.UNSIGNED_BYTE, true, bytesPerVertex, 12);\n        gl.bufferData(gl.ARRAY_BUFFER, vertexData, gl.DYNAMIC_DRAW);\n        const indexBuffer = createGlyphIndexBuffer(gl, maxQuads);\n        gl.bindVertexArray(null);\n\n        this.start = (matScreenFromWorld: mat4, textureIndex: number) => {\n            mat4.copy(matScreenFromWorldCached, matScreenFromWorld);\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D_ARRAY, textures[textureIndex]);\n        }\n\n        this.addGlyph = (x0: number, y0: number, x1: number, y1: number, tileInfo:TileInfo) => {\n            if (numQuads >= maxQuads) {\n                this.flush();\n            }\n\n            const i = numQuads * wordsPerQuad;\n            if(typeof tileInfo.textureIndex!=='number') return;\n            const srcBase = tileInfo.textureIndex << 16;\n\n            let color = tileInfo.color;\n            if(color===null) color = 0xffffffff;\n            vertexDataAsFloat32[i+0] = x0;\n            vertexDataAsFloat32[i+1] = y0;\n            vertexDataAsUint32[i+2] = srcBase + 256;\n            vertexDataAsUint32[i+3] = color;\n\n            vertexDataAsFloat32[i+4] = x1;\n            vertexDataAsFloat32[i+5] = y0;\n            vertexDataAsUint32[i+6] = srcBase + 257;\n            vertexDataAsUint32[i+7] = color;\n\n            vertexDataAsFloat32[i+8] = x0;\n            vertexDataAsFloat32[i+9] = y1;\n            vertexDataAsUint32[i+10] = srcBase;\n            vertexDataAsUint32[i+11] = color;\n\n            vertexDataAsFloat32[i+12] = x1;\n            vertexDataAsFloat32[i+13] = y1;\n            vertexDataAsUint32[i+14] = srcBase + 1;\n            vertexDataAsUint32[i+15] = color;\n\n            ++numQuads;\n        }\n\n        this.flush = () => {\n            if (numQuads <= 0) {\n                return;\n            }\n\n            gl.useProgram(program);\n\n            gl.bindVertexArray(vao);\n\n            gl.uniform1i(uOpacityLoc, 0);\n\n            gl.uniformMatrix4fv(uProjectionMatrixLoc, false, matScreenFromWorldCached);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertexDataAsFloat32, 0);\n\n            gl.drawElements(gl.TRIANGLES, 6 * numQuads, gl.UNSIGNED_SHORT, 0);\n\n            gl.bindVertexArray(null);\n\n            numQuads = 0;\n        }\n    }\n}\n\nfunction createGlyphIndexBuffer(gl: WebGL2RenderingContext, maxQuads: number): WebGLBuffer {\n    const indices = new Uint16Array(maxQuads * 6);\n\n    for (let i = 0; i < maxQuads; ++i) {\n        let j = 6*i;\n        let k = 4*i;\n        indices[j+0] = k+0;\n        indices[j+1] = k+1;\n        indices[j+2] = k+2;\n        indices[j+3] = k+2;\n        indices[j+4] = k+1;\n        indices[j+5] = k+3;\n    }\n\n    const indexBuffer = gl.createBuffer()!;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n    return indexBuffer;\n}\n\nfunction createTextureFromImage(gl: WebGL2RenderingContext, image: HTMLImageElement): WebGLTexture {\n    const numGlyphsX = 16;\n    const numGlyphsY = 16;\n    const numGlyphs = numGlyphsX * numGlyphsY;\n    const srcGlyphSizeX = image.naturalWidth / numGlyphsX;\n    const srcGlyphSizeY = image.naturalHeight / numGlyphsY;\n    const scaleFactor = 4;\n    const dstGlyphSizeX = srcGlyphSizeX * scaleFactor;\n    const dstGlyphSizeY = srcGlyphSizeY * scaleFactor;\n\n    // Rearrange the glyph data from a grid to a vertical array\n\n    const canvas = document.createElement('canvas');\n    canvas.width = dstGlyphSizeX;\n    canvas.height = dstGlyphSizeY * numGlyphs;\n    const ctx = canvas.getContext('2d')!;\n    ctx.imageSmoothingEnabled = false;\n    for (let y = 0; y < numGlyphsY; ++y) {\n        for (let x = 0; x < numGlyphsX; ++x) {\n            const sx = x * srcGlyphSizeX;\n            const sy = y * srcGlyphSizeY;\n            const dx = 0;\n            const dy = (numGlyphsX * y + x) * dstGlyphSizeY;\n            ctx.drawImage(image, sx, sy, srcGlyphSizeX, srcGlyphSizeY, dx, dy, dstGlyphSizeX, dstGlyphSizeY);\n        }\n    }\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const pixels = new Uint8Array(imageData.data.buffer);\n\n    const texture = gl.createTexture()!;\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, dstGlyphSizeX, dstGlyphSizeY, numGlyphs, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    gl.generateMipmap(gl.TEXTURE_2D_ARRAY);\n    return texture;\n}\n\nfunction loadShader(gl: WebGL2RenderingContext, type: number, source: string): WebGLShader {\n    const shader = gl.createShader(type)!;\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n    }\n\n    return shader;\n}\n\nfunction initShaderProgram(gl: WebGL2RenderingContext, vsSource: string, fsSource: string, attribs: Record<string, number>): WebGLProgram {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n    const program = gl.createProgram()!;\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n\n    for (const attrib in attribs) {\n        gl.bindAttribLocation(program, attribs[attrib], attrib);\n    }\n\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(program))!;\n    }\n\n    return program;\n}\n\nfunction resizeCanvasToDisplaySize(canvas: HTMLCanvasElement) {\n    const parentElement = canvas.parentNode as HTMLElement;\n    const rect = parentElement.getBoundingClientRect();\n    if (canvas.width !== rect.width || canvas.height !== rect.height) {\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n    }\n}\n\n// #####################\n// Canvas-based Renderer\n// #####################\n\nclass CanvasRenderer extends Renderer {\n    ctx: CanvasRenderingContext2D;\n    shake: vec2;\n    offset: vec2;\n    gridCellSize: vec2;\n    renderGlyphs: CanvasGlyphRenderer;\n    fontTileSet: FontTileSetInfo;\n    tileSet: TileSetInfo;\n    integerTileSize: boolean;\n    constructor(ctx: CanvasRenderingContext2D, fontTileSet:FontTileSetInfo, tileSet: TileSetInfo) {\n        super();\n        const textures = [new SpriteSheet(ctx, flattenImage(fontTileSet.image), fontTileSet.tileSize),\n                          new SpriteSheet(ctx, tileSet.flattenTexture?flattenImage(tileSet.image):tileSet.image.src, tileSet.tileSize)]\n        this.name = 'canvas';\n        this.fontTileSet = fontTileSet;\n        this.tileSet = tileSet;\n        this.ctx = ctx;\n        this.renderGlyphs = new CanvasGlyphRenderer(textures, tileSet.tileSize, [tileSet.tileSize[0]/tileSet.cellSize[0], tileSet.tileSize[1]/tileSet.cellSize[1]]);\n//        this.gridCellSize = [24,24];\n        this.gridCellSize = tileSet.cellSize; //size in pixel of each cell\n        this.offset = [0,0];\n        this.shake = [0,0];\n        this.integerTileSize = true;\n    }\n    beginFrame(cameraPos:vec2, mapSize:vec2, screenSize:vec2, mat:mat4) {\n        resizeCanvasToDisplaySize(this.ctx.canvas);\n        vec2.set(screenSize, this.ctx.canvas.width, this.ctx.canvas.height);\n\n        const cxGame = cameraPos[0];\n        const cyGame = cameraPos[1];\n        const rGame = 18;\n        let scale;\n        scale = Math.min(screenSize[1]/rGame/this.gridCellSize[1], screenSize[0]/rGame/this.gridCellSize[0]);\n        if(this.integerTileSize && scale>1) { //pixel perfect scaling\n            scale = Math.floor(scale);\n        }\n\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        this.ctx.save();\n        this.ctx.translate(Math.floor(screenSize[0]/2 - (rGame/2 + cxGame/2)*scale*this.gridCellSize[0]) + this.offset[0] + this.shake[0], \n            Math.floor(-screenSize[1]/2 + (rGame/2 + cyGame/2)*scale*this.gridCellSize[1]) + this.offset[1] + this.shake[1]);\n        this.ctx.scale(this.gridCellSize[0]*scale,this.gridCellSize[1]*scale);\n        // this.ctx.translate(this.offset[0] + this.shake[0], this.ctx.canvas.height - this.offset[1] - this.shake[1]);\n        // this.ctx.scale(this.gridCellSize[0], -this.gridCellSize[1]);\n        this.renderGlyphs.mapSize = mapSize;\n    }\n    endFrame() {\n        this.ctx.restore();\n    }\n}\n\nclass CanvasGlyphRenderer extends GlyphRenderer {\n    textures: Array<SpriteSheet>;\n    activeTexture: SpriteSheet|null;\n    tileSize: vec2;\n    mapSize: vec2;\n    ratios: vec2\n    constructor(textures: Array<SpriteSheet>, tileSize: vec2, ratios:vec2) { //ctx: CanvasRenderingContext2D, \n        super();\n        this.textures = textures;\n        this.activeTexture = null;\n        this.tileSize = tileSize;\n        this.mapSize = [0,0];\n        this.ratios = ratios;\n    }\n    start(matScreenFromWorld: mat4, textureIndex: number) {\n        this.activeTexture = this.textures[textureIndex];\n        this.activeTexture.ctx.imageSmoothingEnabled = false;\n    }\n    addGlyph(x0: number, y0: number, x1: number, y1: number, tileInfo:TileInfo) {\n        //todo: use color\n        y0 = this.mapSize[1]-y0 \n        if(this.activeTexture===null) return;\n        if(tileInfo.color!=null) this.activeTexture.drawColored(tileInfo.textureIndex, x0, y0, ...this.ratios, false, tileInfo.color);\n        else this.activeTexture.draw(tileInfo.textureIndex, x0, y0, ...this.ratios);\n//        if(this.activeTexture!==null) this.activeTexture.draw(glyphIndex, x0, this.mapSize[1]-y0);\n    }\n    flush() {\n    }\n}\n\nclass SpriteSheet {\n    spriteSize:[number,number];\n    sheet:HTMLImageElement;\n    ctx:CanvasRenderingContext2D;\n    buffer: HTMLCanvasElement;\n    constructor(ctx: CanvasRenderingContext2D, src_file:string, spriteSize:[number,number]=[16,16]) {\n        this.spriteSize = spriteSize;\n        this.sheet = new Image();\n        this.sheet.src = src_file;\n        this.ctx = ctx;\n        this.buffer = document.createElement('canvas');\n        this.buffer.width = this.spriteSize[0];\n        this.buffer.height = this.spriteSize[1];\n    }\n    draw(spriteLoc:number|[number,number], x:number, y:number, xrat:number=1, yrat:number=1, flipx:boolean=false):void {\n        if(typeof spriteLoc==='number') spriteLoc = [0,spriteLoc];\n        let flipped = 1 - 2*Number(flipx);\n        if(flipx) {\n            this.ctx.scale(-1,1);\n        }\n        this.ctx.drawImage(\n            this.sheet,\n            spriteLoc[0]*this.spriteSize[0],\n            spriteLoc[1]*this.spriteSize[1],\n            this.spriteSize[0],\n            this.spriteSize[1],\n            flipped*x,\n            y,\n            flipped*xrat,\n            1*yrat\n        );\n        if(flipx) {\n            this.ctx.scale(-1,1);\n        }\n    }\n\n    drawColored(spriteLoc:number|[number,number], x:number, y:number, xrat:number, yrat:number, flipx:boolean=false, color:number=0) {\n        const r=0x0000ff;\n        const g=0x00ff00;\n        const b=0xff0000;\n        let colorStr = '#' + (((color&r)<<16)|((color&g))|((color&b)>>>16)).toString(16);\n        if(typeof spriteLoc==='number') spriteLoc = [0,spriteLoc];\n        let flipped = 1 - 2*Number(flipx);\n        if(flipx) {\n            this.ctx.scale(-1,1);\n        }\n        this.ctx.save();\n        this.ctx.drawImage(\n            this.sheet,\n            spriteLoc[0]*this.spriteSize[0],\n            spriteLoc[1]*this.spriteSize[1],\n            this.spriteSize[0],\n            this.spriteSize[1],\n            flipped*x,\n            y,\n            flipped*xrat,\n            1*yrat\n        );\n        //then set the global alpha to the amount that you want to tint it, and draw the buffer directly on top of it.\n        const oldA = this.ctx.globalAlpha;        \n        this.ctx.globalAlpha = 0.5;\n        // let oldC = this.ctx.globalCompositeOperation;\n        // this.ctx.globalCompositeOperation = \"source-in\";\n        this.ctx.fillStyle = colorStr// `#${((color&r)).toString(16)}${((color&g)>>>8).toString(16)}${((color&b)>>>16).toString(16)}`;\n        this.ctx.fillRect(flipped*x,y+yrat-1,flipped*xrat,1);\n        this.ctx.globalAlpha = oldA;\n        // this.ctx.globalCompositeOperation = oldC;\n    \n        // this.ctx.drawImage(\n        //     this.sheet,\n        //     spriteLoc[0]*this.spriteSize[0],\n        //     spriteLoc[1]*this.spriteSize[1],\n        //     this.spriteSize[0],\n        //     this.spriteSize[1],\n        //     flipped*x,\n        //     y,\n        //     flipped,\n        //     1\n        // );\n\n\n        if(flipx) {\n            this.ctx.scale(-1,1);\n        }\n        this.ctx.restore();\n\n    }\n\n    // drawColored(spriteLoc:number|[number,number], x:number, y:number, flipx:boolean=false, color:string='red') {\n    //     if(typeof spriteLoc==='number') spriteLoc = [0,spriteLoc];\n\n    //     // create offscreen buffer, \n    //     let buffer = this.buffer;\n    //     let bx = buffer.getContext('2d')!;\n\n    //     // fill offscreen buffer with the tint color\n    //     bx.fillStyle = color;\n    //     bx.fillRect(0,0,buffer.width,buffer.height);\n\n    //     // destination atop makes a result with an alpha channel identical to fg, but with all pixels retaining their original color *as far as I can tell*\n    //     bx.globalCompositeOperation = \"destination-atop\";\n    //     bx.drawImage(this.sheet,\n    //         spriteLoc[0]*this.spriteSize[0],\n    //         spriteLoc[1]*this.spriteSize[1],\n    //         this.spriteSize[0],\n    //         this.spriteSize[1],\n    //         );\n\n    //     let flipped = 1 - 2*Number(flipx);\n    //     if(flipx) {\n    //         this.ctx.scale(-1,1);\n    //     }\n    //     this.ctx.drawImage(\n    //         this.sheet,\n    //         spriteLoc[0]*this.spriteSize[0],\n    //         spriteLoc[1]*this.spriteSize[1],\n    //         this.spriteSize[0],\n    //         this.spriteSize[1],\n    //         flipped*x,\n    //         y,\n    //         flipped,\n    //         1\n    //     );\n    //     //then set the global alpha to the amount that you want to tint it, and draw the buffer directly on top of it.\n    //     this.ctx.globalAlpha = 0.5;\n    //     this.ctx.drawImage(buffer,0,0,\n    //         this.spriteSize[0],\n    //         this.spriteSize[1],\n    //         flipped*x,\n    //         y,\n    //         flipped,\n    //         1\n    //         );        \n    //     // this.ctx.drawImage(\n    //     //     this.sheet,\n    //     //     spriteLoc[0]*this.spriteSize[0],\n    //     //     spriteLoc[1]*this.spriteSize[1],\n    //     //     this.spriteSize[0],\n    //     //     this.spriteSize[1],\n    //     //     flipped*x,\n    //     //     y,\n    //     //     flipped,\n    //     //     1\n    //     // );\n\n\n    //     if(flipx) {\n    //         this.ctx.scale(-1,1);\n    //     }\n\n\n    // }\n    drawScaled(spriteLoc:[number,number], x:number, y:number, scale:number, flipx=false):void {\n        let flipped = 1 - 2*Number(flipx);\n        if(flipx) {\n            this.ctx.scale(-1,1);\n        }\n        this.ctx.drawImage(\n            this.sheet,\n            spriteLoc[0]*this.spriteSize[0],\n            spriteLoc[1]*this.spriteSize[1],\n            this.spriteSize[0],\n            this.spriteSize[1],\n            flipped*(x),\n            y,\n            flipped*scale,\n            scale\n        );\n        if(flipx) {\n            this.ctx.scale(-1,1);\n        }\n    }\n    drawRotated(spriteLoc:[number,number], x:number, y:number, angle:number, flipx:boolean=false, \n            anchor:[number,number]|'center'='center'):void {\n        this.ctx.save();\n        if(anchor=='center') anchor = [0.5, 0.5];\n        this.ctx.translate(x, y);\n        this.ctx.rotate(angle * Math.PI / 180);\n        if(flipx) this.ctx.scale(-1,1);\n        this.ctx.translate(-anchor[0], -anchor[1]);\n        this.ctx.drawImage(\n            this.sheet,\n            spriteLoc[0]*this.spriteSize[0],\n            spriteLoc[1]*this.spriteSize[1],\n            this.spriteSize[0],\n            this.spriteSize[1],\n            0,\n            0,\n            1,\n            1\n        );\n        this.ctx.restore();\n    }\n    drawRotatedMultitile(spriteLoc:[number,number,number,number], x:number, y:number, angle:number, \n            flipx:boolean=false, anchor:[number,number]|'center'='center'):void { \n        //same as drawRotated but spriteloc is 4-item array referencing the sprite location: [x,y,w,h]\n        this.ctx.save();\n        let tw = spriteLoc[2];\n        let th = spriteLoc[3];\n        if(anchor == 'center') anchor = [tw/2,th/2];\n        this.ctx.translate(x + anchor[0], y + anchor[1]);\n        this.ctx.rotate(angle * Math.PI / 180);\n        if(flipx) {\n            this.ctx.scale(-1,1);\n        }\n        this.ctx.translate(-anchor[0], -anchor[1]);\n        this.ctx.drawImage(\n            this.sheet,\n            spriteLoc[0]*this.spriteSize[0],\n            spriteLoc[1]*this.spriteSize[1],\n            this.spriteSize[0]*tw,\n            this.spriteSize[1]*th,\n            0,\n            0,\n            tw,\n            th\n        );\n        this.ctx.restore();\n    }\n}\n\n\nfunction flattenImage(image: HTMLImageElement): string {\n    const numGlyphsX = 16;\n    const numGlyphsY = 16;\n    const numGlyphs = numGlyphsX * numGlyphsY;\n    const srcGlyphSizeX = image.naturalWidth / numGlyphsX;\n    const srcGlyphSizeY = image.naturalHeight / numGlyphsY;\n    const scaleFactor = 1;\n    const dstGlyphSizeX = srcGlyphSizeX * scaleFactor;\n    const dstGlyphSizeY = srcGlyphSizeY * scaleFactor;\n\n    // Rearrange the glyph data from a grid to a vertical array\n\n    const canvas = document.createElement('canvas');\n    canvas.width = dstGlyphSizeX;\n    canvas.height = dstGlyphSizeY * numGlyphs;\n    const ctx = canvas.getContext('2d')!;\n    ctx.imageSmoothingEnabled = false;\n    for (let y = 0; y < numGlyphsY; ++y) {\n        for (let x = 0; x < numGlyphsX; ++x) {\n            const sx = x * srcGlyphSizeX;\n            const sy = y * srcGlyphSizeY;\n            const dx = 0;\n            const dy = (numGlyphsX * y + x) * dstGlyphSizeY;\n            ctx.drawImage(image, sx, sy, srcGlyphSizeX, srcGlyphSizeY, dx, dy, dstGlyphSizeX, dstGlyphSizeY);\n        }\n    }\n    return canvas.toDataURL();\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kPzFJ\")).toString();","export const black: number = 0xff000000;\nexport const darkBlue: number = 0xffa80000;\nexport const darkGreen: number = 0xff00a800;\nexport const darkCyan: number = 0xffa8a800;\nexport const darkRed: number = 0xff0000a8;\nexport const darkMagenta: number = 0xffa800a8;\nexport const darkBrown: number = 0xff0054a8;\nexport const lightGray: number = 0xffa8a8a8;\nexport const darkGray: number = 0xff545454;\nexport const lightBlue: number = 0xfffe5454;\nexport const lightGreen: number = 0xff54fe54;\nexport const lightCyan: number = 0xfffefe54;\nexport const lightRed: number = 0xff5454fe;\nexport const lightMagenta: number = 0xfffe54fe;\nexport const lightYellow: number = 0xff54fefe;\nexport const white: number = 0xfffefefe;\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k57aN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8dSx0\")).toString();","import * as colorPreset from './color-preset';\nimport { TerrainType } from './game-map';\nimport { vec2 } from './my-matrix';\n\nconst tileset34 = require('url:./tiles34.png')\nconst tilesetBasic = require('url:./tiles.png')\nconst tilesetFont = require('url:./font.png')\n\n\nexport type TileInfo = {\n    textureIndex: [number,number]|number;\n    color: number|null;\n}\n\nexport type TileSetInfo = {\n    name: string;\n    imageSrc: string;\n    image: HTMLImageElement;\n    tileSize: [number, number];\n    cellSize: [number, number];\n    offset: [number, number];\n    terrainTiles: Array<TileInfo>;\n    unlitTerrainTiles: Array<TileInfo>;\n    itemTiles: Array<TileInfo>;\n    unlitItemTiles: Array<TileInfo>;\n    npcTiles: Array<TileInfo>;\n    playerTiles: Array<TileInfo>;\n    unlitTile: TileInfo;\n    flattenTexture: boolean;\n}\n\nexport type FontTileSetInfo = {\n    name: string;\n    imageSrc: string;\n    image: HTMLImageElement;\n    tileSize: [number, number];\n    offset: [number, number];\n    letterMap: Array<TileInfo>;\n}\n\nexport function getTilesetInfo(name:'34'|'basic'):TileSetInfo {\n    if(name=='34') {\n        return canvasTilesetThreeQuarter;\n    }\n    if(name=='basic') {\n        return webGLBasicTileset;\n    }\n    else {\n        throw new Error(`Unsupported tileset ${name}`);\n    }\n}\n\nexport function getFontTilesetInfo(name:'font'):FontTileSetInfo {\n    if(name=='font') {\n        return basicFontTileset;\n    }\n    else {\n        throw new Error(`Unsupported tileset ${name}`);\n    }\n}\n\nconst basicFontTileset:FontTileSetInfo = {\n    name: 'Basic Font',\n    imageSrc: tilesetFont,\n    image: new Image(),\n    tileSize: [16,16],\n    offset: [0,0],\n    letterMap: [],  \n}\n\nconst canvasTilesetThreeQuarter:TileSetInfo = {\n    name: '3/4 view tileset',\n    imageSrc: tileset34,\n    image: new Image(),\n    tileSize: [24,36],\n    cellSize: [24,24],\n    offset: [0,0],\n    flattenTexture: false,\n    terrainTiles: [\n        {textureIndex:[8, 3], color:null}, // TerrainType.GroundNormal,\n        {textureIndex:[6, 3], color:null}, // TerrainType.GroundGrass,\n        {textureIndex:[10, 3], color:null}, // TerrainType.GroundWater,\n        {textureIndex:[4, 1], color:null}, // TerrainType.GroundMarble,\n        {textureIndex:[9, 3], color:null}, // TerrainType.GroundWood,\n        {textureIndex:[9, 3], color:null}, // TerrainType.GroundWoodCreaky,\n        {textureIndex:[0, 0], color:null}, // TerrainType.Wall0000,\n        {textureIndex:[8, 2], color:null}, // TerrainType.Wall0001,\n        {textureIndex:[7, 2], color:null}, // TerrainType.Wall0010,\n        {textureIndex:[4, 3], color:null}, // TerrainType.Wall0011,\n        {textureIndex:[4, 2], color:null}, // TerrainType.Wall0100,\n        {textureIndex:[1, 2], color:null}, // TerrainType.Wall0101,\n        {textureIndex:[0, 2], color:null}, // TerrainType.Wall0110,\n        {textureIndex:[5, 2], color:null}, // TerrainType.Wall0111,\n        {textureIndex:[0, 3], color:null}, // TerrainType.Wall1000,\n        {textureIndex:[2, 2], color:null}, // TerrainType.Wall1001,\n        {textureIndex:[3, 2], color:null}, // TerrainType.Wall1010,\n        {textureIndex:[4, 2], color:null}, // TerrainType.Wall1011,\n        {textureIndex:[5, 3], color:null}, // TerrainType.Wall1100,\n        {textureIndex:[3, 3], color:null}, // TerrainType.Wall1101,\n        {textureIndex:[6, 2], color:null}, // TerrainType.Wall1110,\n        {textureIndex:[1, 0], color:null}, // TerrainType.Wall1111,\n        {textureIndex:[4, 0], color:null}, // TerrainType.OneWayWindowE,\n        {textureIndex:[3, 0], color:null}, // TerrainType.OneWayWindowW,\n        {textureIndex:[2, 0], color:null}, // TerrainType.OneWayWindowN,\n        {textureIndex:[2, 1], color:null}, // TerrainType.OneWayWindowS,\n        {textureIndex:[0, 1], color:null}, // TerrainType.PortcullisNS,\n        {textureIndex:[1, 1], color:null}, // TerrainType.PortcullisEW,\n        {textureIndex:[5, 0], color:null}, // TerrainType.DoorNS,\n        {textureIndex:[6, 0], color:null}, // TerrainType.DoorEW,\n    ],\n    unlitTerrainTiles: [\n        {textureIndex:[8, 3], color:0x50000000}, // TerrainType.GroundNormal,\n        {textureIndex:[6, 3], color:0x50000000}, // TerrainType.GroundGrass,\n        {textureIndex:[10, 3],color:0x50000000}, // TerrainType.GroundWater,\n        {textureIndex:[4, 1], color:0x50000000}, // TerrainType.GroundMarble,\n        {textureIndex:[9, 3], color:0x50000000}, // TerrainType.GroundWood,\n        {textureIndex:[9, 3], color:0x50000000}, // TerrainType.GroundWoodCreaky,\n        {textureIndex:[0, 0], color:0x50000000}, // TerrainType.Wall0000,\n        {textureIndex:[8, 2], color:0x50000000}, // TerrainType.Wall0001,\n        {textureIndex:[7, 2], color:0x50000000}, // TerrainType.Wall0010,\n        {textureIndex:[4, 3], color:0x50000000}, // TerrainType.Wall0011,\n        {textureIndex:[4, 2], color:0x50000000}, // TerrainType.Wall0100,\n        {textureIndex:[1, 2], color:0x50000000}, // TerrainType.Wall0101,\n        {textureIndex:[0, 2], color:0x50000000}, // TerrainType.Wall0110,\n        {textureIndex:[5, 2], color:0x50000000}, // TerrainType.Wall0111,\n        {textureIndex:[0, 3], color:0x50000000}, // TerrainType.Wall1000,\n        {textureIndex:[2, 2], color:0x50000000}, // TerrainType.Wall1001,\n        {textureIndex:[3, 2], color:0x50000000}, // TerrainType.Wall1010,\n        {textureIndex:[4, 2], color:0x50000000}, // TerrainType.Wall1011,\n        {textureIndex:[5, 3], color:0x50000000}, // TerrainType.Wall1100,\n        {textureIndex:[3, 3], color:0x50000000}, // TerrainType.Wall1101,\n        {textureIndex:[6, 2], color:0x50000000}, // TerrainType.Wall1110,\n        {textureIndex:[1, 0], color:0x50000000}, // TerrainType.Wall1111,\n        {textureIndex:[4, 0], color:0x50000000}, // TerrainType.OneWayWindowE,\n        {textureIndex:[3, 0], color:0x50000000}, // TerrainType.OneWayWindowW,\n        {textureIndex:[2, 0], color:0x50000000}, // TerrainType.OneWayWindowN,\n        {textureIndex:[2, 1], color:0x50000000}, // TerrainType.OneWayWindowS,\n        {textureIndex:[0, 1], color:0x50000000}, // TerrainType.PortcullisNS,\n        {textureIndex:[1, 1], color:0x50000000}, // TerrainType.PortcullisEW,\n        {textureIndex:[5, 0], color:0x50000000}, // TerrainType.DoorNS,\n        {textureIndex:[6, 0], color:0x50000000}, // TerrainType.DoorEW,\n    ],\n    itemTiles: [\n        {textureIndex:[5, 5], color: colorPreset.darkBrown}, // ItemType.Chair,\n        {textureIndex:[3, 5], color:colorPreset.darkBrown}, // ItemType.Table,\n        {textureIndex:[0, 6], color:null}, // ItemType.Bush,\n        {textureIndex:[14, 5], color:colorPreset.lightYellow}, // ItemType.Coin,\n        {textureIndex:[6, 0], color:null}, // ItemType.DoorNS,\n        {textureIndex:[5, 0], color:null}, // ItemType.DoorEW,\n        {textureIndex:[0, 1], color:null}, // ItemType.PortcullisNS,\n        {textureIndex:[1, 1], color:null}, // ItemType.PortcullisEW,\n        {textureIndex:[0, 7], color:colorPreset.darkGray}, // ItemType.TorchUnlit,\n        {textureIndex:[0, 7], color:colorPreset.lightYellow}, // ItemType.TorchLit,    \n    ],\n    unlitItemTiles: [\n        {textureIndex:[5, 5], color: colorPreset.darkGray}, // ItemType.Chair,\n        {textureIndex:[3, 5], color:colorPreset.darkGray}, // ItemType.Table,\n        {textureIndex:[0, 6], color:colorPreset.darkGray}, // ItemType.Bush,\n        {textureIndex:[14, 5], color:colorPreset.darkGray}, // ItemType.Coin,\n        {textureIndex:[6, 0], color:colorPreset.darkGray}, // ItemType.DoorNS,\n        {textureIndex:[5, 0], color:colorPreset.darkGray}, // ItemType.DoorEW,\n        {textureIndex:[0, 1], color:colorPreset.darkGray}, // ItemType.PortcullisNS,\n        {textureIndex:[1, 1], color:colorPreset.darkGray}, // ItemType.PortcullisEW,\n        {textureIndex:[0, 7], color:colorPreset.darkGray}, // ItemType.TorchUnlit,\n        {textureIndex:[0, 7], color:colorPreset.darkGray}, // ItemType.TorchLit,    \n    ],\n    npcTiles: [\n        {textureIndex:[1, 4], color:null},//guardE:\n        {textureIndex:[2, 4], color:null},//guardN:\n        {textureIndex:[3, 4], color:null},//guardW:\n        {textureIndex:[4, 4], color:null},//guardS:\n        {textureIndex:[1, 4], color:colorPreset.darkGray},//guardEnoLoS:\n        {textureIndex:[2, 4], color:colorPreset.darkGray},//guardNnoLoS:\n        {textureIndex:[3, 4], color:colorPreset.darkGray},//guardWnoLoS:\n        {textureIndex:[4, 4], color:colorPreset.darkGray},//guardSnoLoS:\n        {textureIndex:[1, 4], color:colorPreset.lightMagenta},//guardE:\n        {textureIndex:[2, 4], color:colorPreset.lightMagenta},//guardN:\n        {textureIndex:[3, 4], color:colorPreset.lightMagenta},//guardW:\n        {textureIndex:[4, 4], color:colorPreset.lightMagenta},//guardS:\n    ],\n    playerTiles: [\n        {textureIndex:[0,4], color:colorPreset.darkGray}, //playerNormal\n        {textureIndex:[0,4], color:colorPreset.darkRed}, //playerWounded\n        {textureIndex:[0,4], color:0xd0101010}, //playerHidden: \n        {textureIndex:[0,4], color:colorPreset.lightCyan}, //playerNoisy: \n        {textureIndex:[0,4], color:colorPreset.lightBlue}, //playerUnlit: \n    ],\n    unlitTile: {textureIndex:[8, 0], color:null} //color:colorPreset.lightBlue\n}\n\n\nvar webGLBasicTileset:TileSetInfo = {\n    name: 'Basic WebGL tiles',\n    imageSrc: tilesetBasic,\n    image: new Image(),\n    tileSize: [16,16],\n    cellSize: [16,16],\n    offset: [0,0],\n    flattenTexture: true,\n    terrainTiles: [\n        {textureIndex:112, color:colorPreset.lightGray}, // TerrainType.GroundNormal,\n        {textureIndex:116, color:colorPreset.darkGreen}, // TerrainType.GroundGrass,\n        {textureIndex:118, color:colorPreset.lightBlue}, // TerrainType.GroundWater,\n        {textureIndex:120, color:colorPreset.darkCyan}, // TerrainType.GroundMarble,\n        {textureIndex:122, color:colorPreset.darkBrown}, // TerrainType.GroundWood,\n        {textureIndex:122, color:0xff004070}, // TerrainType.GroundWoodCreaky,\n        {textureIndex:64, color:colorPreset.lightGray}, // TerrainType.Wall0000,\n        {textureIndex:65, color:colorPreset.lightGray}, // TerrainType.Wall0001,\n        {textureIndex:65, color:colorPreset.lightGray}, // TerrainType.Wall0010,\n        {textureIndex:65, color:colorPreset.lightGray}, // TerrainType.Wall0011,\n        {textureIndex:66, color:colorPreset.lightGray}, // TerrainType.Wall0100,\n        {textureIndex:67, color:colorPreset.lightGray}, // TerrainType.Wall0101,\n        {textureIndex:70, color:colorPreset.lightGray}, // TerrainType.Wall0110,\n        {textureIndex:73, color:colorPreset.lightGray}, // TerrainType.Wall0111,\n        {textureIndex:66, color:colorPreset.lightGray}, // TerrainType.Wall1000,\n        {textureIndex:68, color:colorPreset.lightGray}, // TerrainType.Wall1001,\n        {textureIndex:69, color:colorPreset.lightGray}, // TerrainType.Wall1010,\n        {textureIndex:72, color:colorPreset.lightGray}, // TerrainType.Wall1011,\n        {textureIndex:66, color:colorPreset.lightGray}, // TerrainType.Wall1100,\n        {textureIndex:74, color:colorPreset.lightGray}, // TerrainType.Wall1101,\n        {textureIndex:71, color:colorPreset.lightGray}, // TerrainType.Wall1110,\n        {textureIndex:75, color:colorPreset.lightGray}, // TerrainType.Wall1111,\n        {textureIndex:52, color:colorPreset.lightGray}, // TerrainType.OneWayWindowE,\n        {textureIndex:53, color:colorPreset.lightGray}, // TerrainType.OneWayWindowW,\n        {textureIndex:54, color:colorPreset.lightGray}, // TerrainType.OneWayWindowN,\n        {textureIndex:55, color:colorPreset.lightGray}, // TerrainType.OneWayWindowS,\n        {textureIndex:50, color:colorPreset.lightGray}, // TerrainType.PortcullisNS,\n        {textureIndex:50, color:colorPreset.lightGray}, // TerrainType.PortcullisEW,\n        {textureIndex:77, color:colorPreset.lightGray}, // TerrainType.DoorNS,\n        {textureIndex:76, color:colorPreset.lightGray}, // TerrainType.DoorEW,\n    ],    \n    unlitTerrainTiles: [\n        {textureIndex:112, color:colorPreset.darkBlue}, // TerrainType.GroundNormal,\n        {textureIndex:116, color:colorPreset.darkBlue}, // TerrainType.GroundGrass,\n        {textureIndex:118, color:colorPreset.darkBlue}, // TerrainType.GroundWater,\n        {textureIndex:120, color:colorPreset.darkBlue}, // TerrainType.GroundMarble,\n        {textureIndex:122, color:colorPreset.darkBlue}, // TerrainType.GroundWood,\n        {textureIndex:122, color:colorPreset.darkBlue}, // TerrainType.GroundWoodCreaky,\n        {textureIndex:64, color:colorPreset.darkBlue}, // TerrainType.Wall0000,\n        {textureIndex:65, color:colorPreset.darkBlue}, // TerrainType.Wall0001,\n        {textureIndex:65, color:colorPreset.darkBlue}, // TerrainType.Wall0010,\n        {textureIndex:65, color:colorPreset.darkBlue}, // TerrainType.Wall0011,\n        {textureIndex:66, color:colorPreset.darkBlue}, // TerrainType.Wall0100,\n        {textureIndex:67, color:colorPreset.darkBlue}, // TerrainType.Wall0101,\n        {textureIndex:70, color:colorPreset.darkBlue}, // TerrainType.Wall0110,\n        {textureIndex:73, color:colorPreset.darkBlue}, // TerrainType.Wall0111,\n        {textureIndex:66, color:colorPreset.darkBlue}, // TerrainType.Wall1000,\n        {textureIndex:68, color:colorPreset.darkBlue}, // TerrainType.Wall1001,\n        {textureIndex:69, color:colorPreset.darkBlue}, // TerrainType.Wall1010,\n        {textureIndex:72, color:colorPreset.darkBlue}, // TerrainType.Wall1011,\n        {textureIndex:66, color:colorPreset.darkBlue}, // TerrainType.Wall1100,\n        {textureIndex:74, color:colorPreset.darkBlue}, // TerrainType.Wall1101,\n        {textureIndex:71, color:colorPreset.darkBlue}, // TerrainType.Wall1110,\n        {textureIndex:75, color:colorPreset.darkBlue}, // TerrainType.Wall1111,\n        {textureIndex:52, color:colorPreset.darkBlue}, // TerrainType.OneWayWindowE,\n        {textureIndex:53, color:colorPreset.darkBlue}, // TerrainType.OneWayWindowW,\n        {textureIndex:54, color:colorPreset.darkBlue}, // TerrainType.OneWayWindowN,\n        {textureIndex:55, color:colorPreset.darkBlue}, // TerrainType.OneWayWindowS,\n        {textureIndex:50, color:colorPreset.darkBlue}, // TerrainType.PortcullisNS,\n        {textureIndex:50, color:colorPreset.darkBlue}, // TerrainType.PortcullisEW,\n        {textureIndex:77, color:colorPreset.darkBlue}, // TerrainType.DoorNS,\n        {textureIndex:76, color:colorPreset.darkBlue}, // TerrainType.DoorEW,\n    ],    \n    itemTiles: [\n        {textureIndex:100, color:colorPreset.darkBrown}, // ItemType.Chair,\n        {textureIndex:98, color:colorPreset.darkBrown}, // ItemType.Table,\n        {textureIndex:96, color:colorPreset.darkGreen}, // ItemType.Bush,\n        {textureIndex:110, color:colorPreset.lightYellow}, // ItemType.Coin,\n        {textureIndex:89, color:colorPreset.darkBrown}, // ItemType.DoorNS,\n        {textureIndex:87, color:colorPreset.darkBrown}, // ItemType.DoorEW,\n        {textureIndex:50, color:colorPreset.lightGray}, // ItemType.PortcullisNS,\n        {textureIndex:50, color:colorPreset.lightGray}, // ItemType.PortcullisEW,\n        {textureIndex:80, color:colorPreset.darkGray}, // ItemType.TorchUnlit,\n        {textureIndex:80, color:colorPreset.lightYellow}, // ItemType.TorchLit,    \n    ],\n    unlitItemTiles: [\n        {textureIndex:100, color:colorPreset.darkGray}, // ItemType.Chair,\n        {textureIndex:98,  color:colorPreset.darkGray}, // ItemType.Table,\n        {textureIndex:96,  color:colorPreset.darkGray}, // ItemType.Bush,\n        {textureIndex:110, color:colorPreset.darkGray}, // ItemType.Coin,\n        {textureIndex:89,  color:colorPreset.darkGray}, // ItemType.DoorNS,\n        {textureIndex:87,  color:colorPreset.darkGray}, // ItemType.DoorEW,\n        {textureIndex:50,  color:colorPreset.darkGray}, // ItemType.PortcullisNS,\n        {textureIndex:50,  color:colorPreset.darkGray}, // ItemType.PortcullisEW,\n        {textureIndex:80,  color:colorPreset.darkGray}, // ItemType.TorchUnlit,\n        {textureIndex:80,  color:colorPreset.darkGray}, // ItemType.TorchLit,    \n    ],\n    playerTiles: [\n        /*playerNormal:*/ {textureIndex:32, color:colorPreset.darkGray}, \n        /*playerWounded:*/ {textureIndex:32, color:colorPreset.darkRed}, \n        /*playerHidden:*/ {textureIndex:32, color:0xd0101010}, \n        /*playerNoisy:*/ {textureIndex:32, color:colorPreset.lightCyan}, \n        /*playerUnlit:*/ {textureIndex:32, color:colorPreset.lightBlue}, \n    ],\n    npcTiles: [\n        {textureIndex:33, color:null},//guardE:\n        {textureIndex:34, color:null},//guardN:\n        {textureIndex:35, color:null},//guardW:\n        {textureIndex:36, color:null},//guardS:\n        {textureIndex:33, color:colorPreset.darkGray},//guardEnoLoS:\n        {textureIndex:34, color:colorPreset.darkGray},//guardNnoLoS:\n        {textureIndex:35, color:colorPreset.darkGray},//guardWnoLoS:\n        {textureIndex:36, color:colorPreset.darkGray},//guardSnoLoS:\n        {textureIndex:33, color:colorPreset.lightMagenta},//guardE:\n        {textureIndex:34, color:colorPreset.lightMagenta},//guardN:\n        {textureIndex:35, color:colorPreset.lightMagenta},//guardW:\n        {textureIndex:36, color:colorPreset.lightMagenta},//guardS:\n    ],\n    unlitTile: {textureIndex:0, color:colorPreset.lightBlue},\n}\n\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kDrfW\")).toString();","import { vec2, mat4 } from './my-matrix';\nimport { createGameMap } from './create-map';\nimport { ItemType, GameMap, Player, TerrainType } from './game-map';\nimport { GuardMode, guardActAll } from './guard';\nimport { setupSounds, Howls } from './audio';\nimport { Renderer, createRenderer, GlyphRenderer } from './render';\nimport { TileInfo, TileSetInfo, FontTileSetInfo, getTilesetInfo, getFontTilesetInfo } from './tilesets';\nimport * as colorPreset from './color-preset';\n\nconst renderEngine = 'canvas'; //'canvas' or 'webgl'\nvar tileSetInfo = getTilesetInfo(renderEngine==='canvas'?'34':'basic'); //'basic' with webgl\nconst fontSetInfo = getFontTilesetInfo('font'); \n\nwindow.onload = loadResourcesThenRun;\n\ntype Camera = {\n    position: vec2;\n    velocity: vec2;\n}\n\ntype State = {\n    tLast: number | undefined;\n    shiftModifierActive: boolean;\n    shiftUpLastTimeStamp: number;\n    player: Player;\n    finishedLevel: boolean;\n    seeAll : boolean;\n    camera: Camera;\n    level: number;\n    gameMap: GameMap;\n    sounds: Howls;\n}\n\nfunction loadResourcesThenRun() {\n    Promise.all([\n        loadImage(fontSetInfo.imageSrc, fontSetInfo.image),\n        loadImage(tileSetInfo.imageSrc, tileSetInfo.image),\n    ]).then(main);\n}\n\nfunction main(images: Array<HTMLImageElement>) {\n\n    const canvas = document.querySelector(\"#canvas\") as HTMLCanvasElement;\n\n    const renderer = createRenderer(renderEngine, canvas, fontSetInfo, tileSetInfo);\n    const sounds:Howls = {};\n    const state = initState(sounds);\n\n    document.body.addEventListener('keydown', onKeyDown);\n    document.body.addEventListener('keyup', onKeyUp);\n\n    function onKeyDown(e: KeyboardEvent) {\n        if (Object.keys(state.sounds).length==0) setupSounds(state.sounds);\n        if (e.code == 'KeyF' || e.code == 'NumpadAdd') {\n            state.shiftModifierActive = true;\n            return;\n        }\n\n        if (e.ctrlKey) {\n            if (e.code === 'KeyA') {\n                e.preventDefault();\n                state.seeAll = !state.seeAll;\n            }\n        } else if (e.code == 'KeyR') {\n            e.preventDefault();\n            resetState(state);\n        } else {\n            const distDesired = (state.shiftModifierActive || e.shiftKey || (e.timeStamp - state.shiftUpLastTimeStamp) < 1.0) ? 2 : 1;\n            if (e.code == 'ArrowLeft' || e.code == 'Numpad4' || e.code == 'KeyA' || e.code == 'KeyH') {\n                e.preventDefault();\n                tryMovePlayer(state, -1, 0, distDesired);\n            } else if (e.code == 'ArrowRight' || e.code == 'Numpad6' || e.code == 'KeyD' || e.code == 'KeyL') {\n                e.preventDefault();\n                tryMovePlayer(state, 1, 0, distDesired);\n            } else if (e.code == 'ArrowDown' || e.code == 'Numpad2' || e.code == 'KeyS' || e.code == 'KeyJ') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, -1, distDesired);\n            } else if (e.code == 'ArrowUp' || e.code == 'Numpad8' || e.code == 'KeyW' || e.code == 'KeyK') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, 1, distDesired);\n            } else if (e.code == 'Period' || e.code == 'Numpad5' || e.code == 'KeyZ') {\n                e.preventDefault();\n                tryMovePlayer(state, 0, 0, 1);\n            }\n        }\n\n        state.shiftModifierActive = false;\n    }\n\n    function onKeyUp(e: KeyboardEvent) {\n        if (e.code == 'ShiftLeft' || e.code == 'ShiftRight') {\n            state.shiftUpLastTimeStamp = e.timeStamp;\n        }\n    }\n\n    function requestUpdateAndRender() {\n        requestAnimationFrame(now => updateAndRender(now, renderer, state));\n    }\n\n    function onWindowResized() {\n        requestUpdateAndRender();\n    }\n\n    window.addEventListener('resize', onWindowResized);\n\n    requestUpdateAndRender();\n}\n\nfunction advanceToNextLevel(state: State) {\n    state.level += 1;\n    state.gameMap = createGameMap(state.level);\n    state.finishedLevel = false;\n\n    state.player.pos = state.gameMap.playerStartPos;\n    state.player.dir = vec2.fromValues(0, -1);\n    state.player.gold = 0;\n    state.player.noisy = false;\n    state.player.damagedLastTurn = false;\n    state.player.turnsRemainingUnderwater = 0;\n\n    state.camera = createCamera(state.gameMap.playerStartPos);\n\n    updateMapVisibility(state.gameMap, state.player.pos);\n}\n\nfunction tryMovePlayer(state: State, dx: number, dy: number, distDesired: number) {\n\n    const player = state.player;\n\n    // Can't move if you're dead.\n\n    if (player.health <= 0) {\n        return;\n    }\n\n    // If just passing time, do that.\n\n    if ((dx === 0 && dy === 0) || distDesired <= 0) {\n        preTurn(state);\n        advanceTime(state);\n        return;\n    }\n\n    let dist = playerMoveDistAllowed(state, dx, dy, distDesired);\n    if (dist <= 0) {\n        const posBump = vec2.fromValues(player.pos[0] + dx * (dist + 1), player.pos[1] + dy * (dist + 1));\n        const item = state.gameMap.items.find((item) => item.pos[0] === posBump[0] && item.pos[1] === posBump[1]);\n        if (item !== undefined && (item.type === ItemType.TorchUnlit || item.type === ItemType.TorchLit)) {\n            preTurn(state);\n            item.type = (item.type === ItemType.TorchUnlit) ? ItemType.TorchLit : ItemType.TorchUnlit;\n            state.gameMap.computeLighting();\n            advanceTime(state);\n        }\n        return;\n    }\n\n    // Execute the move. Collect loot along the way; advance to next level when moving off the edge.\n\n    preTurn(state);\n\n    for (; dist > 0; --dist) {\n        player.pos[0] += dx;\n        player.pos[1] += dy;\n\n        if (player.pos[0] < 0 ||\n            player.pos[1] < 0 ||\n            player.pos[0] >= state.gameMap.cells.sizeX ||\n            player.pos[1] >= state.gameMap.cells.sizeY) {\n            advanceToNextLevel(state);\n            return;\n        }\n\n        player.gold += state.gameMap.collectLootAt(player.pos[0], player.pos[1]);\n    }\n\n    // Generate movement noises.\n\n    let cellType = state.gameMap.cells.at(player.pos[0], player.pos[1]).type;\n    if (cellType == TerrainType.GroundWoodCreaky) {\n        makeNoise(state.gameMap, player, 17 /*, state.gameMap.popups, \"\\u{ab}creak\\u{bb}\" */);\n    }\n\n    advanceTime(state);\n\n    const volScale:number = 0.5+Math.random()/2;\n    console.log(volScale);\n    switch(state.gameMap.cells.at(...player.pos).type) {\n        case TerrainType.GroundWood:\n            state.sounds[\"footstepWood\"].volume(0.15*volScale);\n            state.sounds[\"footstepWood\"].play();\n            break;\n        case TerrainType.GroundNormal:\n            state.sounds[\"footstepGravel\"].volume(0.03*volScale);\n            state.sounds[\"footstepGravel\"].play();\n            break;\n        case TerrainType.GroundGrass:\n            state.sounds[\"footstepGrass\"].volume(0.05*volScale);\n            state.sounds[\"footstepGrass\"].play();\n            break;\n        case TerrainType.GroundWater:\n            state.sounds[\"footstepWater\"].volume(0.05*volScale);\n            state.sounds[\"footstepWater\"].play();\n            break;\n        case TerrainType.GroundMarble:\n            state.sounds[\"footstepTile\"].volume(0.05*volScale);\n            state.sounds[\"footstepTile\"].play();\n            break;\n        default:\n            state.sounds[\"footstepTile\"].volume(0.02*volScale);\n            state.sounds[\"footstepTile\"].play();\n            break;\n        }\n\n}\n\nfunction playerMoveDistAllowed(state: State, dx: number, dy: number, maxDist: number): number {\n    const player = state.player;\n\n    let posPrev = vec2.clone(player.pos);\n\n    let distAllowed = 0;\n\n    for (let d = 1; d <= maxDist; ++d) {\n        const pos = vec2.fromValues(player.pos[0] + dx * d, player.pos[1] + dy * d);\n\n        if (pos[0] < 0 ||\n            pos[1] < 0 ||\n            pos[0] >= state.gameMap.cells.sizeX ||\n            pos[1] >= state.gameMap.cells.sizeY) {\n            if (state.gameMap.allSeen() && state.gameMap.allLootCollected()) {\n                distAllowed = d;\n            }\n            break;\n        } else if (blocked(state.gameMap, posPrev, pos)) {\n            break;\n        } else {\n            distAllowed = d;\n        }\n\n        posPrev = pos;\n    }\n\n    // If the move would end on a guard, reject it\n\n    if (distAllowed > 0) {\n        const pos = vec2.fromValues(player.pos[0] + dx * distAllowed, player.pos[1] + dy * distAllowed);\n        if (state.gameMap.guards.find((guard) => guard.pos[0] == pos[0] && guard.pos[1] == pos[1]) !== undefined) {\n            distAllowed = 0;\n        }\n    }\n\n    // If the move would end on a torch, shorten it\n\n    if (distAllowed > 0) {\n        const pos = vec2.fromValues(player.pos[0] + dx * distAllowed, player.pos[1] + dy * distAllowed);\n        if (state.gameMap.items.find((item) => item.pos[0] === pos[0] && item.pos[1] === pos[1] &&\n                (item.type === ItemType.TorchUnlit || item.type === ItemType.TorchLit)) !== undefined) {\n            --distAllowed;\n        }\n    }\n\n    return distAllowed;\n}\n\nfunction makeNoise(map: GameMap, player: Player, radius: number /*, popups: &mut Popups, noise: &'static str */) {\n    player.noisy = true;\n    /* TODO\n    popups.noise(player.pos, noise);\n    */\n\n    for (const guard of map.guardsInEarshot(player.pos, radius)) {\n        guard.heardThief = true;\n    }\n}\n\nfunction preTurn(state: State) {\n    /* TODO\n    state.show_msgs = true;\n    state.popups.clear();\n    */\n    state.player.noisy = false;\n    state.player.damagedLastTurn = false;\n}\n\nfunction advanceTime(state: State) {\n    if (state.gameMap.cells.at(state.player.pos[0], state.player.pos[1]).type == TerrainType.GroundWater) {\n        if (state.player.turnsRemainingUnderwater > 0) {\n            --state.player.turnsRemainingUnderwater;\n        }\n    } else {\n        state.player.turnsRemainingUnderwater = 7;\n    }\n\n    guardActAll(/* state.popups, state.lines, */ state.gameMap, state.player);\n\n    updateMapVisibility(state.gameMap, state.player.pos);\n\n    if (state.gameMap.allSeen() && state.gameMap.allLootCollected()) {\n        state.finishedLevel = true;\n    }\n}\n\nconst cardinalDirections: Array<vec2> = [\n    vec2.fromValues(-1, 0),\n    vec2.fromValues(1, 0),\n    vec2.fromValues(0, -1),\n    vec2.fromValues(0, 1),\n];\n\nfunction updateMapVisibility(map: GameMap, pos_viewer: vec2) {\n    map.recomputeVisibility(pos_viewer);\n\n    for (const dir of cardinalDirections) {\n        if (map.playerCanSeeInDirection(pos_viewer, dir)) {\n            const pos = vec2.create();\n            vec2.add(pos, pos_viewer, dir);\n            map.recomputeVisibility(pos);\n        }\n    }\n}\n\nfunction blocked(map: GameMap, posOld: vec2, posNew: vec2): boolean {\n    if (posNew[0] < 0 || posNew[1] < 0 || posNew[0] >= map.cells.sizeX || posNew[1] >= map.cells.sizeY) {\n        return true;\n    }\n\n    if (posOld[0] == posNew[0] && posOld[1] == posNew[1]) {\n        return false;\n    }\n\n    const cell = map.cells.at(posNew[0], posNew[1]);\n    const tileType = cell.type;\n\n    if (cell.blocksPlayerMove) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowE && posNew[0] <= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowW && posNew[0] >= posOld[0]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowN && posNew[1] <= posOld[1]) {\n        return true;\n    }\n\n    if (tileType == TerrainType.OneWayWindowS && posNew[1] >= posOld[1]) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction loadImage(src: string, img: HTMLImageElement): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.src = src;\n    });\n}\n\nfunction renderWorld(state: State, renderer: Renderer) {\n    for (let x = 0; x < state.gameMap.cells.sizeX; ++x) {\n        for (let y = state.gameMap.cells.sizeY-1; y >= 0; --y) { //Reversed the normal ordering to handle overlapped tiles\n//        for (let y = 0; y < state.gameMap.cells.sizeY; ++y) {\n            const cell = state.gameMap.cells.at(x, y);\n            if (!cell.seen && !state.seeAll) {\n                continue;\n            }\n\n            const terrainType = cell.type;\n            const alwaysLit = terrainType >= TerrainType.Wall0000;\n            const lit = alwaysLit || cell.lit;\n            const tileInfo = lit? renderer.tileSet.terrainTiles[terrainType]: renderer.tileSet.unlitTerrainTiles[terrainType];\n            renderer.renderGlyphs.addGlyph(x, y, x+1, y+1, tileInfo);\n\n            for (const item of state.gameMap.items) {//TODO: This should be a lookup into a map/object\n                if(item.pos[0]!=x || item.pos[1]!=y) continue;\n                const alwaysLit = item.type >= ItemType.DoorNS && item.type <= ItemType.PortcullisEW;\n                const lit = alwaysLit || cell.lit;\n                const tileInfo = lit? renderer.tileSet.itemTiles[item.type]: renderer.tileSet.unlitItemTiles[item.type];\n                renderer.renderGlyphs.addGlyph(x, y, x+1, y+1, tileInfo);\n            }\n        \n        }\n    }\n\n    // for (const item of state.gameMap.items) {\n    //     const cell = state.gameMap.cells.at(item.pos[0], item.pos[1]);\n    //     if (!cell.seen && !state.seeAll) {\n    //         continue;\n    //     }\n    //     const terrainType = cell.type;\n    //     const alwaysLit = item.type >= ItemType.DoorNS && item.type <= ItemType.PortcullisEW;\n    //     const lit = alwaysLit || cell.lit;\n    //     const tileInfo = cell.lit? renderer.tileSet.itemTiles[item.type]: renderer.tileSet.unlitTerrainTiles[terrainType];\n    //     renderer.renderGlyphs.addGlyph(item.pos[0], item.pos[1], item.pos[0] + 1, item.pos[1] + 1, tileInfo);\n    // }\n}\n\nfunction renderPlayer(state: State, renderer: Renderer) {\n    const player = state.player;\n    const x = player.pos[0];\n    const y = player.pos[1];\n    const lit = state.gameMap.cells.at(x, y).lit;\n    const hidden = player.hidden(state.gameMap);\n\n    // playerNormal: {textureIndex:[0,4], color:colorPreset.darkGray}, \n    // playerWounded: {textureIndex:[0,4], color:colorPreset.darkRed}, \n    // playerHidden: {textureIndex:[0,4], color:0xa0101010}, \n    // playerNoisy: {textureIndex:[0,4], color:colorPreset.lightCyan}, \n    // playerUnlit: {textureIndex:[0,4], color:colorPreset.lightBlue}, \n    const p = renderer.tileSet.playerTiles;\n\n    let tileInfo:TileInfo = renderer.tileSet.unlitTile;\n    tileInfo =\n        player.damagedLastTurn ? p[1] :\n        player.noisy ? p[3] :\n        hidden ? p[2] :\n        !lit ? p[4] :\n        p[0];\n    // const color =\n    //     player.damagedLastTurn ? 0xff0000ff :\n    //     player.noisy ? colorPreset.lightCyan :\n    //     hidden ? 0xd0101010 :\n    //     !lit ? colorPreset.lightBlue :\n    //     colorPreset.lightGray;\n\n    renderer.renderGlyphs.addGlyph(x, y, x+1, y+1, {textureIndex:tileInfo.textureIndex, color:tileInfo.color});\n}\n\nfunction renderGuards(state: State, renderer: Renderer) {\n    for (const guard of state.gameMap.guards) {\n        let tileIndex = 0 + tileIndexOffsetForDir(guard.dir);\n\n        const cell = state.gameMap.cells.at(guard.pos[0], guard.pos[1]);\n        const visible = state.seeAll || cell.seen || guard.speaking;\n        if (!visible && vec2.squaredDistance(state.player.pos, guard.pos) > 36) {\n            continue;\n        }\n\n        if(!visible) tileIndex+=4;\n        else if(guard.mode == GuardMode.Patrol && !guard.speaking && !cell.lit) renderer.renderGlyphs.addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, renderer.tileSet.unlitTile);\n        else tileIndex+=8;\n//        const color =\n//            !visible ? colorPreset.darkGray :\n//            (guard.mode == GuardMode.Patrol && !guard.speaking && !cell.lit) ? renderer.tileSet.unlitColor :\n//            colorPreset.lightMagenta;\n        const tileInfo = renderer.tileSet.npcTiles[tileIndex];\n        renderer.renderGlyphs.addGlyph(guard.pos[0], guard.pos[1], guard.pos[0] + 1, guard.pos[1] + 1, tileInfo);\n    }\n}\n\nfunction renderGuardOverheadIcons(state: State, renderer: Renderer) {\n    for (const guard of state.gameMap.guards) {\n        const cell = state.gameMap.cells.at(guard.pos[0], guard.pos[1]);\n        const visible = state.seeAll || cell.seen || guard.speaking;\n        if (!visible && vec2.squaredDistance(state.player.pos, guard.pos) > 36) {\n            continue;\n        }\n\n        const tileIndex = guard.overheadIcon();\n        if (tileIndex === undefined) {\n            continue;\n        }\n\n        const x = guard.pos[0];\n        const y = guard.pos[1] + 0.625;\n\n        renderer.renderGlyphs.addGlyph(x, y, x+1, y+1, {textureIndex:tileIndex, color:colorPreset.lightYellow});\n    }\n}\n\nfunction tileIndexOffsetForDir(dir: vec2): number {\n    if (dir[1] > 0) {\n        return 1;\n    } else if (dir[1] < 0) {\n        return 3;\n    } else if (dir[0] > 0) {\n        return 0;\n    } else if (dir[0] < 0) {\n        return 2;\n    } else {\n        return 3;\n    }\n}\n\nfunction createCamera(posPlayer: vec2): Camera {\n    const camera = {\n        position: vec2.create(),\n        velocity: vec2.create(),\n    };\n\n    vec2.copy(camera.position, posPlayer);\n    vec2.zero(camera.velocity);\n\n    return camera;\n}\n\nfunction initState(sounds:Howls): State {\n    const initialLevel = 0;\n    const gameMap = createGameMap(initialLevel);\n\n    return {\n        tLast: undefined,\n        shiftModifierActive: false,\n        shiftUpLastTimeStamp: -Infinity,\n        player: new Player(gameMap.playerStartPos),\n        finishedLevel: false,\n        seeAll : false,\n        camera: createCamera(gameMap.playerStartPos),\n        level: initialLevel,\n        gameMap: gameMap,\n        sounds: sounds,\n    };\n}\n\nfunction resetState(state: State) {\n    const gameMap = createGameMap(state.level);\n\n    state.finishedLevel = false;\n    state.player = new Player(gameMap.playerStartPos);\n    state.camera = createCamera(gameMap.playerStartPos);\n    state.gameMap = gameMap;\n}\n\nfunction updateAndRender(now: number, renderer: Renderer, state: State) {\n    const t = now / 1000;\n    const dt = (state.tLast === undefined) ? 0 : Math.min(1/30, t - state.tLast);\n    state.tLast = t;\n\n    if (dt > 0) {\n        updateState(state, dt);\n    }\n\n    renderScene(renderer, state);\n\n    requestAnimationFrame(now => updateAndRender(now, renderer, state));\n}\n\nfunction updateState(state: State, dt: number) {\n    updateCamera(state, dt);\n}\n\nfunction updateCamera(state: State, dt: number) {\n\n    // Update player follow\n\n    const posError = vec2.create();\n    vec2.subtract(posError, state.player.pos, state.camera.position);\n\n    const velError = vec2.create();\n    vec2.negate(velError, state.camera.velocity);\n\n    const kSpring = 8; // spring constant, radians/sec\n\n    const acc = vec2.create();\n    vec2.scale(acc, posError, kSpring**2);\n    vec2.scaleAndAdd(acc, acc, velError, 2*kSpring);\n\n    const velNew = vec2.create();\n    vec2.scaleAndAdd(velNew, state.camera.velocity, acc, dt);\n\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, state.camera.velocity, 0.5 * dt);\n    vec2.scaleAndAdd(state.camera.position, state.camera.position, velNew, 0.5 * dt);\n    vec2.copy(state.camera.velocity, velNew);\n}\n\nfunction renderScene(renderer: Renderer, state: State) {    \n    const screenSize = vec2.create();\n    const matScreenFromWorld = mat4.create();\n    renderer.beginFrame(state.camera.position, [state.gameMap.cells.sizeX, state.gameMap.cells.sizeY], screenSize, matScreenFromWorld);\n\n    renderer.renderGlyphs.start(matScreenFromWorld, 1);\n    renderWorld(state, renderer);\n    renderPlayer(state, renderer);\n    renderGuards(state, renderer);\n    renderGuardOverheadIcons(state, renderer);\n    renderer.renderGlyphs.flush();\n}\n\nfunction renderTextLines(renderer: Renderer, screenSize: vec2, lines: Array<string>) {\n    let maxLineLength = 0;\n    for (const line of lines) {\n        maxLineLength = Math.max(maxLineLength, line.length);\n    }\n\n    const minCharsX = 40;\n    const minCharsY = 22;\n    const scaleLargestX = Math.max(1, Math.floor(screenSize[0] / (8 * minCharsX)));\n    const scaleLargestY = Math.max(1, Math.floor(screenSize[1] / (16 * minCharsY)));\n    const scaleFactor = Math.min(scaleLargestX, scaleLargestY);\n    const pixelsPerCharX = 8 * scaleFactor;\n    const pixelsPerCharY = 16 * scaleFactor;\n    const linesPixelSizeX = maxLineLength * pixelsPerCharX;\n    const numCharsX = screenSize[0] / pixelsPerCharX;\n    const numCharsY = screenSize[1] / pixelsPerCharY;\n    const offsetX = Math.floor((screenSize[0] - linesPixelSizeX) / -2) / pixelsPerCharX;\n    const offsetY = (lines.length + 2) - numCharsY;\n\n    const matScreenFromTextArea = mat4.create();\n    mat4.ortho(\n        matScreenFromTextArea,\n        offsetX,\n        offsetX + numCharsX,\n        offsetY,\n        offsetY + numCharsY,\n        1,\n        -1);\n    renderer.renderGlyphs.start(matScreenFromTextArea, 0);\n\n    const colorText = 0xffeeeeee;\n    const colorBackground = 0xe0555555;\n\n    // Draw a stretched box to make a darkened background for the text.\n    renderer.renderGlyphs.addGlyph(\n        -1, -1, maxLineLength + 1, lines.length + 1,\n        {textureIndex:219,color:colorBackground}\n    );\n\n    for (let i = 0; i < lines.length; ++i) {\n        const row = lines.length - (1 + i);\n        for (let j = 0; j < lines[i].length; ++j) {\n            const col = j;\n            const ch = lines[i];\n            if (ch === ' ') {\n                continue;\n            }\n            const glyphIndex = lines[i].charCodeAt(j);\n            renderer.renderGlyphs.addGlyph(\n                col, row, col + 1, row + 1,\n                {textureIndex:glyphIndex, color:colorText}\n            );\n        }\n    }\n\n    renderer.renderGlyphs.flush();\n}\n"],"names":["$962dfe94de155236$export$e9830bc863290a54","$962dfe94de155236$export$d2b4acf069bf09f5","$69e3cfcc1b264755$export$8b958c8ecd94a804","n","Math","floor","random","$69e3cfcc1b264755$export$7ac3a88d34a76e7","array","i","length","j","temp","$9b54a0058cb4baa9$export$4d0734ad15726738","GuardMode","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","id","resolved","Error","parcelRequire","register","JSON","parse","create","clone","v","fromValues","x0","x1","copy","result","set","add","a","b","subtract","multiply","scale","scaleAndAdd","distance","x","y","hypot","squaredDistance","squaredLength","negate","dot","lerp","t","zero","ortho","left","right","bottom","top","near","far","lr","bt","nf","$9b54a0058cb4baa9$export$aaedb44a0fd0f42b","constructor","pos","map","this","dir","mode","Patrol","speaking","hasMoved","heardThief","hearingGuard","heardGuard","heardGuardPos","goal","modeTimeout","regionGoal","closestRegion","regionPrev","$10c35e7c2a1f8a6c$export$1b965bd728e66949","updateDirInitial","overheadIcon","ChaseVisibleTarget","act","player","shouts","modePrev","posPrev","seesThief","adjacentTo","Look","$9b54a0058cb4baa9$var$updateDir","MoveToLastSighting","MoveToGuardShout","Listen","MoveToLastSound","patrolStep","damagedLastTurn","applyDamage","moveTowardGoal","setupGoalRegion","push","pos_shouter","pos_target","dx","dy","abs","d","playerIsLit","cells","at","lit","sightCutoff","hidden","from","to","ax","ay","x_inc","y_inc","error","blocksSight","$9b54a0058cb4baa9$var$lineOfSight","cutoffLit","cutoffUnlit","litTarget","bumpedThief","moveTowardRegion","region","randomNeighborRegion","distanceField","computeDistancesToRegion","posNext","$9b54a0058cb4baa9$var$posNextBest","computeDistancesToPosition","regionCur","$9b54a0058cb4baa9$export$5f882605b1dc2846","guard","guards","shout","$9b54a0058cb4baa9$var$alertNearbyGuards","guardsInEarshot","posFrom","costBest","Infinity","posBest","posMin","max","posMax","min","sizeX","sizeY","cost","get","guardMoveCost","type","$10c35e7c2a1f8a6c$export$1bd3aab7cfc60670","GroundWater","isGuardAt","posTarget","dirTarget","dirLeft","dotForward","dotLeft","$10c35e7c2a1f8a6c$export$47dc3946656b4c14","initialValue","values","Uint8Array","fill","value","$10c35e7c2a1f8a6c$export$1baa12a9812549c7","Int32Array","$10c35e7c2a1f8a6c$export$304240f91b7efc5a","Float64Array","TerrainType","$10c35e7c2a1f8a6c$export$6b828f5d89445818","size","Array","GroundNormal","moveCost","blocksPlayerMove","blocksPlayerSight","blocksSound","hidesPlayer","seen","console","assert","$10c35e7c2a1f8a6c$export$1fc8f52ad1810e52","ItemType","$10c35e7c2a1f8a6c$export$af86814533211557","itemType","Chair","Table","Bush","Coin","DoorNS","DoorEW","PortcullisNS","PortcullisEW","TorchUnlit","TorchLit","$10c35e7c2a1f8a6c$export$2616165974278734","health","gold","noisy","turnsRemainingUnderwater","undefined","find","$10c35e7c2a1f8a6c$var$portals","lx","ly","rx","ry","nx","ny","$10c35e7c2a1f8a6c$var$aRightOfB","bx","by","$10c35e7c2a1f8a6c$var$allowedDirection","terrainType","OneWayWindowE","OneWayWindowW","OneWayWindowN","OneWayWindowS","$10c35e7c2a1f8a6c$var$adjacentMoves","$10c35e7c2a1f8a6c$export$5f2c7e9a2f29f58a","patrolRegions","patrolRoutes","items","playerStartPos","totalLoot","collectLootAt","filter","item","collectAllLoot","allSeen","cell","percentSeen","numSeen","markAllSeen","markAllUnseen","recomputeVisibility","posViewer","portal","computeVisibility","playerCanSeeInDirection","viewerX","viewerY","targetX","targetY","ldx","ldy","rdx","rdy","cdx","cdy","pldx","pldy","prdx","prdy","cldx","cldy","crdx","crdy","computeLighting","castLight","posLight","radiusSquared","castLightRecursive","lightX","lightY","allLootCollected","regionExclude","neighbors","region0","region1","posOld","posNew","posStart","distField","toVisit","$10c35e7c2a1f8a6c$var$priorityQueuePush","priority","distPos","$10c35e7c2a1f8a6c$var$priorityQueuePop","dist","adjacentMove","distNew","iRegionGoal","p","computeDistanceField","pos_goal","initialDistances","soundPos","radius","coords","coordsInEarshot","has","costCutoff","coordsVisited","Set","costNew","q","pop","c","iChild","iChild0","iChild1","iParent","$7defb8b0b8d2cc00$var$roomSizeX","$7defb8b0b8d2cc00$var$roomSizeY","$7defb8b0b8d2cc00$var$outerBorder","$7defb8b0b8d2cc00$var$RoomType","RoomType","$7defb8b0b8d2cc00$export$c6e04b122d41de8c","level","$7defb8b0b8d2cc00$var$createGameMapInternal","iTry","$7defb8b0b8d2cc00$var$randomHouseWidth","$7defb8b0b8d2cc00$var$randomHouseDepth","inside","halfX","$7defb8b0b8d2cc00$var$makeSiheyuanRoomGrid","offsetX","offsetY","mirrorX","mirrorY","roomsX","roomsY","xMid","yMid","roomOffsetX","Number","MIN_SAFE_INTEGER","roomOffsetY","z","$7defb8b0b8d2cc00$var$offsetWalls","cx","cy","mapSizeX","mapSizeY","y0","y1","GroundGrass","isInside","$7defb8b0b8d2cc00$var$plotNSWall","$7defb8b0b8d2cc00$var$plotEWWall","$7defb8b0b8d2cc00$var$plotWalls","rooms","adjacencies","roomIndex","roomType","Exterior","group","depth","edges","group_index","PublicRoom","PublicCourtyard","adjacencyRows","adjacencyRow","origin","room_left","room_right","next_matching","door","x0_upper","x0_lower","x1_upper","x1_lower","row","adj0","adj1","a1","ry0","ry1","row0","row1","y0_left","y0_right","y1_left","y1_right","$7defb8b0b8d2cc00$var$computeAdjacencies","adj","i0","i1","$7defb8b0b8d2cc00$var$storeAdjacenciesInRooms","edgeSets","$7defb8b0b8d2cc00$var$getEdgeSets","$7defb8b0b8d2cc00$var$joinGroups","edgeSet","addedDoor","group0","group1","room_type0","room_type1","$7defb8b0b8d2cc00$var$frontDoorAdjacencyIndex","$7defb8b0b8d2cc00$var$connectRooms","unvisited","roomsToVisit","iRoom","iiRoom","iAdj","iRoomNeighbor","maxDepth","room","targetNumMasterRooms","numMasterRooms","PrivateRoom","PrivateCourtyard","changed","$7defb8b0b8d2cc00$var$assignRoomTypes","includeRoom","trimmed","numExits","roomPatrolRegion","$7defb8b0b8d2cc00$var$addPatrolRegion","$7defb8b0b8d2cc00$var$addPatrolRoute","$7defb8b0b8d2cc00$var$generatePatrolRoutes","type0","type1","$7defb8b0b8d2cc00$var$isCourtyardRoomType","offset","walls","k","$7defb8b0b8d2cc00$var$oneWayWindowTerrainTypeFromDir","k_end","windowType","installMasterSuiteDoor","orientNS","roomTypeLeft","roomTypeRight","$7defb8b0b8d2cc00$var$placeItem","$7defb8b0b8d2cc00$var$renderWalls","cellType","GroundWood","GroundMarble","GroundWoodCreaky","itemTypes","itemPositions","$7defb8b0b8d2cc00$var$tryPlaceItem","Wall0000","furnitureType","$7defb8b0b8d2cc00$var$renderRooms","$7defb8b0b8d2cc00$var$createExits","sx","sy","$7defb8b0b8d2cc00$var$placeExteriorBushes","$7defb8b0b8d2cc00$var$placeFrontPillars","numRooms","$7defb8b0b8d2cc00$var$tryPlaceLoot","$7defb8b0b8d2cc00$var$placeLoot","$7defb8b0b8d2cc00$var$wallTypeFromNeighbors","$7defb8b0b8d2cc00$var$neighboringWalls","$7defb8b0b8d2cc00$var$fixupWalls","isWall","Wall1111","isWindow","isWater","$7defb8b0b8d2cc00$var$cacheCellInfo","numGuards","$7defb8b0b8d2cc00$var$generateInitialGuardPos","$7defb8b0b8d2cc00$var$placeGuards","$7defb8b0b8d2cc00$var$markExteriorAsSeen","reduce","groupFrom","groupTo","iPatrolRegion","$7defb8b0b8d2cc00$var$oneWayWindowTerrainType","$7defb8b0b8d2cc00$var$doorAdjacent","$7defb8b0b8d2cc00$var$isItemAtPos","$7defb8b0b8d2cc00$var$isWall","wallBits","$f89d8ffbdc18f2ab$export$b791fe48eec8032a","HowlerGlobal1","init","prototype","self","Howler1","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","testPlay","play","Promise","then","catch","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl1","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound1","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","timeout","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","index","splice","remCache","cache","on","events","off","isId","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","Howler","Howl","$parcel$global","HowlerGlobal","Sound","_super","_pos","_orientation","stereo","pan","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","$2932c1ccb152d82b$exports","URL","resolve","import","meta","toString","$8978dcab5771f3ee$exports","$8ced2edf4937d357$exports","$ff8f6f78d583cfcc$exports","$523e85573fbedc7e$export$e501447ddb8932e4","footstepWood","footstepTile","footstepWater","footstepGravel","footstepGrass","$7623f4cf7321701d$exports","$e3d6ee63ed1479b9$export$53ae2f996c64e9a","name","canvas","fontTileSetInfo","tileSetInfo","getContext","alpha","$e3d6ee63ed1479b9$var$WebGLRenderer","$e3d6ee63ed1479b9$var$CanvasRenderer","$e3d6ee63ed1479b9$export$88530751e3977073","$e3d6ee63ed1479b9$export$f25de46543538367","matScreenFromWorld","textureIndex","addGlyph","tileInfo","flush","renderGlyphs","fontTileSet","imageSrc","image","Image","letterMap","tileSize","tileSet","flattenTexture","cellSize","terrainTiles","itemTiles","npcTiles","unlitTile","color","playerTiles","unlitTerrainTiles","unlitItemTiles","beginFrame","cameraPos","mapSize","screenSize","mat","endFrame","gl","super","fTexture","$e3d6ee63ed1479b9$var$createTextureFromImage","texture","$e3d6ee63ed1479b9$var$WebGLGlyphRenderer","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","clearColor","$e3d6ee63ed1479b9$var$resizeCanvasToDisplaySize","screenX","clientWidth","screenY","clientHeight","viewport","clear","COLOR_BUFFER_BIT","setupViewMatrix","cxGame","cyGame","rxGame","ryGame","textures","attribs","vPosition","vTexcoord","vColor","program","vsSource","fsSource","vertexShader","$e3d6ee63ed1479b9$var$loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","attrib","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","$e3d6ee63ed1479b9$var$initShaderProgram","uProjectionMatrixLoc","getUniformLocation","uOpacityLoc","bytesPerVertex","Float32Array","BYTES_PER_ELEMENT","Uint32Array","wordsPerQuad","vertexData","ArrayBuffer","vertexDataAsFloat32","vertexDataAsUint32","vertexBuffer","numQuads","matScreenFromWorldCached","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","UNSIGNED_BYTE","bufferData","DYNAMIC_DRAW","maxQuads","indices","Uint16Array","indexBuffer","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","$e3d6ee63ed1479b9$var$createGlyphIndexBuffer","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D_ARRAY","srcBase","useProgram","uniform1i","uniformMatrix4fv","bufferSubData","drawElements","TRIANGLES","UNSIGNED_SHORT","srcGlyphSizeX","naturalWidth","srcGlyphSizeY","naturalHeight","dstGlyphSizeX","dstGlyphSizeY","createElement","width","height","numGlyphsX","imageSmoothingEnabled","drawImage","imageData","getImageData","pixels","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","NEAREST","texImage3D","RGBA","generateMipmap","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","rect","parentNode","getBoundingClientRect","$e3d6ee63ed1479b9$var$SpriteSheet","$e3d6ee63ed1479b9$var$flattenImage","$e3d6ee63ed1479b9$var$CanvasGlyphRenderer","gridCellSize","shake","integerTileSize","clearRect","save","translate","rGame","restore","ratios","drawColored","draw","src_file","spriteSize","sheet","spriteLoc","xrat","yrat","flipx","flipped","colorStr","oldA","globalAlpha","fillStyle","fillRect","drawScaled","drawRotated","angle","anchor","rotate","PI","drawRotatedMultitile","tw","th","toDataURL","$42c3db1e5be65f46$export$4b45ecf3922b2c9e","$42c3db1e5be65f46$export$430774e3f59aae50","$42c3db1e5be65f46$export$76a6bc0ea014735a","$42c3db1e5be65f46$export$7faf1229eaed2d5a","$42c3db1e5be65f46$export$45287c80362236a","$42c3db1e5be65f46$export$8e7e4e76fd842548","$42c3db1e5be65f46$export$7b0d29b70b435c21","$42c3db1e5be65f46$export$f7bd452d85438018","$42c3db1e5be65f46$export$ce3d146c023b50e3","$42c3db1e5be65f46$export$2f350c514d155d6c","$e9975b9a1ae00fb2$exports","$b1b8f74fd13e966a$exports","$1881ad3adcd52414$var$basicFontTileset","$1881ad3adcd52414$var$canvasTilesetThreeQuarter","$1881ad3adcd52414$var$webGLBasicTileset","$e46db5192eb49d53$var$renderEngine","$e46db5192eb49d53$var$tileSetInfo","$e46db5192eb49d53$var$fontSetInfo","$e46db5192eb49d53$var$main","images","querySelector","renderer","initialLevel","gameMap","tLast","shiftModifierActive","shiftUpLastTimeStamp","finishedLevel","seeAll","camera","$e46db5192eb49d53$var$createCamera","$e46db5192eb49d53$var$initState","requestUpdateAndRender","requestAnimationFrame","$e46db5192eb49d53$var$updateAndRender","body","ctrlKey","preventDefault","$e46db5192eb49d53$var$resetState","distDesired","shiftKey","timeStamp","$e46db5192eb49d53$var$tryMovePlayer","$e46db5192eb49d53$var$advanceToNextLevel","$e46db5192eb49d53$var$updateMapVisibility","$e46db5192eb49d53$var$preTurn","$e46db5192eb49d53$var$advanceTime","maxDist","distAllowed","$e46db5192eb49d53$var$blocked","$e46db5192eb49d53$var$playerMoveDistAllowed","posBump","$e46db5192eb49d53$var$makeNoise","volScale","log","all","$e46db5192eb49d53$var$loadImage","$e46db5192eb49d53$var$cardinalDirections","pos_viewer","tileType","img","reject","$e46db5192eb49d53$var$tileIndexOffsetForDir","posPlayer","position","velocity","dt","posError","velError","kSpring","acc","velNew","$e46db5192eb49d53$var$updateCamera","$e46db5192eb49d53$var$updateState","$e46db5192eb49d53$var$renderWorld","$e46db5192eb49d53$var$renderPlayer","tileIndex","visible","$e46db5192eb49d53$var$renderGuards","$e46db5192eb49d53$var$renderGuardOverheadIcons","$e46db5192eb49d53$var$renderScene"],"version":3,"file":"index.cc5e8843.js.map"}